name: üì¶ Release ESP32 CI

on:
  push:
    branches: [release/*]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  PROJECT_DIR: examples/esp32
  TOOLS_DIR: examples/esp32/scripts
  RELEASE_VERSION: ${{ github.event.inputs.release_version || github.ref_name }}

permissions:
  contents: write
  pull-requests: write
  security-events: write
  pages: write
  id-token: write

concurrency:
  group: release-ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Set local variables
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      project_dir: ${{ steps.vars.outputs.project_dir }}
      tools_dir: ${{ steps.vars.outputs.tools_dir }}
    steps:
      - name: Set local variables
        id: vars
        run: |
          echo "project_dir=${{ env.PROJECT_DIR }}" >> "$GITHUB_OUTPUT"
          echo "tools_dir=${{ env.TOOLS_DIR }}" >> "$GITHUB_OUTPUT"

  # Wait for Advanced CI to complete successfully
  wait-for-advanced-ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Wait for Advanced CI
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Advanced ESP32 CI'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

  # Build release artifacts (only for tags, not release branches)
  build-release:
    needs: [set-vars, wait-for-advanced-ci]
    if: startsWith(github.ref, 'refs/tags/')
    uses: N3b3x/hf-espidf-ci-tools/.github/workflows/build.yml@main
    with:
      project_dir: ${{ needs.set-vars.outputs.project_dir }}
      project_tools_dir: ${{ needs.set-vars.outputs.tools_dir }}
      clean_build: true  # Clean build for release
      tools_repo_sha: ${{ github.sha }}

  # Create release artifacts
  create-release:
    needs: [wait-for-advanced-ci, build-release]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: fw-*
          merge-multiple: true
          path: artifacts/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: |
            ## üöÄ HardFOC ESP32 Release ${{ env.RELEASE_VERSION }}
            
            ### üì¶ Firmware Binaries
            - All firmware binaries are attached to this release
            - Built with ESP-IDF v5.5
            - Target: ESP32-C6
            
            ### üìö Documentation
            - [Documentation](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)
            
            ### üõ°Ô∏è Security
            - Full security audit completed
            - CodeQL analysis passed
            - No known vulnerabilities
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/
          asset_name: firmware-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
