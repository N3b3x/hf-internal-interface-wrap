<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="EspGpio_8cpp" kind="file" language="C++">
    <compoundname>EspGpio.cpp</compoundname>
    <includes refid="EspGpio_8h" local="yes">EspGpio.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">atomic</includes>
    <includes local="no">cstring</includes>
    <includes local="yes">driver/gpio.h</includes>
    <includes local="yes">driver/gpio_filter.h</includes>
    <includes local="yes">driver/rtc_io.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_sleep.h</includes>
    <includes local="yes">esp_timer.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/semphr.h</includes>
    <includes local="yes">hal/gpio_types.h</includes>
    <includes local="yes">hal/rtc_io_types.h</includes>
    <includes local="yes">soc/clk_tree_defs.h</includes>
    <includes local="yes">soc/gpio_sig_map.h</includes>
    <incdepgraph>
      <node id="5">
        <label>BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EspGpio.h</label>
        <link refid="EspGpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>EspTypes_GPIO.h</label>
        <link refid="EspTypes__GPIO_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../../utils/McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="1">
        <label>src/mcu/esp32/EspGpio.cpp</label>
        <link refid="EspGpio_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>driver/gpio.h</label>
      </node>
      <node id="18">
        <label>driver/gpio_filter.h</label>
      </node>
      <node id="19">
        <label>driver/rtc_io.h</label>
      </node>
      <node id="4">
        <label>esp_attr.h</label>
      </node>
      <node id="20">
        <label>esp_log.h</label>
      </node>
      <node id="21">
        <label>esp_sleep.h</label>
      </node>
      <node id="22">
        <label>esp_timer.h</label>
      </node>
      <node id="23">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="24">
        <label>freertos/semphr.h</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="25">
        <label>hal/gpio_types.h</label>
      </node>
      <node id="26">
        <label>hal/rtc_io_types.h</label>
      </node>
      <node id="8">
        <label>limits</label>
      </node>
      <node id="27">
        <label>soc/clk_tree_defs.h</label>
      </node>
      <node id="28">
        <label>soc/gpio_sig_map.h</label>
      </node>
      <node id="15">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>string_view</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceanonymous__namespace_02EspGpio_8cpp_03">anonymous_namespace{EspGpio.cpp}</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;EspGpio&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspGpio.cpp" line="50" column="19" bodyfile="src/mcu/esp32/EspGpio.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="EspGpio_8cpp_1aaa46d5ea70be8a9493291ca12fca5eed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eced" kindref="member">hf_gpio_pull_t</ref></type>
        <definition>static hf_gpio_pull_t MapPullModeToHardware</definition>
        <argsstring>(hf_gpio_pull_mode_t mode)</argsstring>
        <name>MapPullModeToHardware</name>
        <param>
          <type><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspGpio.cpp" line="53" column="23" bodyfile="src/mcu/esp32/EspGpio.cpp" bodystart="53" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Production-quality ESP32C6 GPIO implementation with ESP-IDF v5.5+ advanced features. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains a world-class implementation of MCU-specific GPIO for the <ref refid="classBaseGpio" kindref="compound">BaseGpio</ref> class with comprehensive ESP32C6/ESP-IDF v5.5+ feature support. Features include dynamic mode switching, advanced glitch filtering, RTC GPIO, power management, sleep configuration, wake-up support, interrupt handling, and comprehensive diagnostics for industrial-grade applications.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC</para>
</simplesect>
<simplesect kind="note"><para>This implementation represents production-ready, industrial-grade GPIO control suitable for mission-critical automotive and industrial applications. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspGpio_8h" kindref="compound">EspGpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>standard<sp/>library<sp/>headers<sp/>(must<sp/>be<sp/>outside<sp/>extern<sp/>&quot;C&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_FAMILY_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>C<sp/>headers<sp/>must<sp/>be<sp/>wrapped<sp/>in<sp/>extern<sp/>&quot;C&quot;<sp/>for<sp/>C++<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>specific<sp/>includes<sp/>with<sp/>ESP-IDF<sp/>v5.5+<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/gpio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/gpio_filter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/rtc_io.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_sleep.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hal/gpio_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hal/rtc_io_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;soc/clk_tree_defs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;soc/gpio_sig_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EspGpio&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>map<sp/>logical<sp/>pull<sp/>mode<sp/>to<sp/>hardware<sp/>pull<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eced" kindref="member">hf_gpio_pull_t</ref><sp/><ref refid="EspGpio_8cpp_1aaa46d5ea70be8a9493291ca12fca5eed" kindref="member">MapPullModeToHardware</ref>(<ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876ecedab87d55dea1d794e68a534d4f372714b4" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_UP</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eceda7a12fb86ce14f509b153610cc759f6c5" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_DOWN</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eceda39702e81499461c60cd275fece8819d3" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_NONE</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="namespaceanonymous__namespace_02EspGpio_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread-safe<sp/>interrupt<sp/>statistics<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">std::atomic&lt;hf_u32_t&gt;<sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a8d92a7c490f5ab71bb40ae9b866c310c" kindref="member">g_total_gpio_interrupts</ref>{0};</highlight></codeline>
<codeline lineno="68"><highlight class="normal">std::atomic&lt;hf_u32_t&gt;<sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a5f218373a579dbffd6f2382b20ace916" kindref="member">g_active_gpio_count</ref>{0};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPIO<sp/>pin<sp/>capabilities<sp/>lookup<sp/>table<sp/>for<sp/>ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__pin__capabilities__t" kindref="compound">hf_gpio_pin_capabilities_t</ref><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1ab863d6b5d30e7134ec2ba98e87dbdf07" kindref="member">GPIO_PIN_CAPABILITIES</ref>[<ref refid="McuSelect_8h_1a302eb1ea34953a1037bfbf9d0ebc6a5c" kindref="member">HF_MCU_GPIO_PIN_COUNT</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO0-GPIO7:<sp/>ADC<sp/>and<sp/>RTC<sp/>capable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{2,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{3,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO4<sp/>(strapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{5,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO5<sp/>(strapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{6,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{7,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO8-GPIO11:<sp/>Regular<sp/>GPIOs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{8,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO8<sp/>(strapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{9,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO9<sp/>(strapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{10,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{11,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO12-GPIO13:<sp/>USB-JTAG<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{12,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO12<sp/>(USB-JTAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{13,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO13<sp/>(USB-JTAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO14:<sp/>Not<sp/>available<sp/>on<sp/>some<sp/>variants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{14,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO15:<sp/>Strapping<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{15,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO15<sp/>(strapping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO16-GPIO23:<sp/>Regular<sp/>GPIOs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{16,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{17,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{18,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{19,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{20,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{21,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{22,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{23,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO24-GPIO30:<sp/>SPI<sp/>flash<sp/>pins<sp/>(not<sp/>recommended<sp/>for<sp/>GPIO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{24,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO24<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{25,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO25<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{26,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO26<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{27,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO27<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{28,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO28<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{29,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO29<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{30,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//<sp/>GPIO30<sp/>(SPI<sp/>flash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSTRUCTOR<sp/>AND<sp/>DESTRUCTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="classEspGpio_1a6500c4b82a610d0ec0a1aa95fdccb284" kindref="member">EspGpio::EspGpio</ref>(<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>pin_num,<sp/><ref refid="group__gpio_1ga6b3450e1c9d6cba3355cc3567bb0cce3" kindref="member">hf_gpio_direction_t</ref><sp/>direction,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio_1gaf02cdaf150fa829e4a871e58ed772c6d" kindref="member">hf_gpio_active_state_t</ref><sp/>active_state,<sp/><ref refid="group__gpio_1ga825412a54660defc9ecbf8ad1ea1cf7b" kindref="member">hf_gpio_output_mode_t</ref><sp/>output_mode,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref><sp/>pull_mode,<sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03f" kindref="member">hf_gpio_drive_cap_t</ref><sp/>drive_capability)<sp/>noexcept</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classBaseGpio" kindref="compound">BaseGpio</ref>(pin_num,<sp/>direction,<sp/>active_state,<sp/>output_mode,<sp/>pull_mode),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interrupt_trigger_(<ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a599debe50453c8a67ce2ce7dfb455fa6" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_NONE</ref>),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interrupt_callback_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>interrupt_user_data_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>interrupt_enabled_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interrupt_count_(0),<sp/>platform_semaphore_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>isr_handler_added_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drive_capability_(drive_capability),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glitch_filter_type_(<ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fa070f0507f4a589f480cbd945821c29da" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_NONE</ref>),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pin_glitch_filter_enabled_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>flex_glitch_filter_enabled_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>flex_filter_config_{},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep_config_{},<sp/>hold_enabled_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>rtc_gpio_enabled_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>wakeup_config_{},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glitch_filter_handle_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>rtc_gpio_handle_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>pin<sp/>number<sp/>for<sp/>target<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="EspTypes__GPIO_8h_1a9514ff9811d7e04eaacbb29de5528ec1" kindref="member">HF_GPIO_IS_VALID_GPIO</ref>(pin_num))<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>GPIO<sp/>pin<sp/>number:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_num));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>special<sp/>pins<sp/>and<sp/>log<sp/>warnings<sp/>(informational<sp/>only,<sp/>no<sp/>hardware<sp/>access)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1a82f160ff85b7f87247c8543a3daffcb8" kindref="member">HF_GPIO_IS_STRAPPING_PIN</ref>(pin_num))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>is<sp/>a<sp/>strapping<sp/>pin<sp/>-<sp/>use<sp/>with<sp/>caution&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_num));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1a13ac197217e358e44201f0fd76de3fd9" kindref="member">HF_GPIO_IS_SPI_FLASH_PIN</ref>(pin_num))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>is<sp/>typically<sp/>used<sp/>for<sp/>SPI<sp/>flash<sp/>-<sp/>not<sp/>recommended<sp/>for<sp/>general<sp/>GPIO&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_num));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1ac1631752989bff41b5c0d820b59315cc" kindref="member">HF_GPIO_IS_USB_JTAG_PIN</ref>(pin_num))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>is<sp/>used<sp/>for<sp/>USB-JTAG<sp/>-<sp/>JTAG<sp/>will<sp/>be<sp/>disabled<sp/>if<sp/>reconfigured&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_num));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>advanced<sp/>feature<sp/>configurations<sp/>to<sp/>safe<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>sleep_config_.sleep_direction<sp/>=</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350" kindref="member">hf_gpio_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>sleep_config_.sleep_pull_mode<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspGpio_8cpp_1aaa46d5ea70be8a9493291ca12fca5eed" kindref="member">MapPullModeToHardware</ref>(<ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>sleep_config_.sleep_output_enable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>sleep_config_.sleep_input_enable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>sleep_config_.hold_during_sleep<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>wakeup_config_.wake_trigger<sp/>=</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a17096a52e65ea765c88ef633daf3cc54" kindref="member">hf_gpio_intr_type_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a599debe50453c8a67ce2ce7dfb455fa6" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_NONE</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>wakeup_config_.enable_rtc_wake<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>wakeup_config_.enable_ext1_wake<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>wakeup_config_.wake_level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>flex_filter_config_.window_width_ns<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>flex_filter_config_.window_threshold_ns<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>flex_filter_config_.enable_on_init<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>active<sp/>GPIO<sp/>count<sp/>for<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a5f218373a579dbffd6f2382b20ace916" kindref="member">g_active_gpio_count</ref>.fetch_add(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>EspGpio<sp/>instance<sp/>for<sp/>pin<sp/>%d<sp/>(LAZY<sp/>INIT)<sp/>with<sp/>drive<sp/>capability<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_num),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(drive_capability));</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="classEspGpio_1ae0e709e0e5748f81116fb9f15425fd78" kindref="member">EspGpio::~EspGpio</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Destroying<sp/>EspGpio<sp/>instance<sp/>for<sp/>pin<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>interrupts<sp/>before<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a1fe4de0ad5e20fc200115cd4bb52ecf0" kindref="member">interrupt_enabled_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a08cc5eb9df6036fdc3cf4cac383678d4" kindref="member">DisableInterrupt</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>advanced<sp/>feature<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a1bc4d9e3208d76bb8a0861c3de21d2e3" kindref="member">CleanupAdvancedFeatures</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>interrupt<sp/>semaphore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a35edac2436920f517f75c958fc265da6" kindref="member">CleanupInterruptSemaphore</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>active<sp/>GPIO<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a5f218373a579dbffd6f2382b20ace916" kindref="member">g_active_gpio_count</ref>.fetch_sub(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspGpio<sp/>instance<sp/>destroyed<sp/>for<sp/>pin<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BASEGPIO<sp/>INTERFACE<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a49e15d19126b54ba23a5c7e928dc0bb3" kindref="member">EspGpio::Initialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseGpio_1ac5c36e8f02f1483820a15c7dbcdc8e6c" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>already<sp/>initialized&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>GPIO%d<sp/>with<sp/>advanced<sp/>ESP32C6<sp/>features&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>GPIO<sp/>using<sp/>ESP-IDF<sp/>v5.5+<sp/>advanced<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>gpio_config_t<sp/>io_conf<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>GPIO<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_INPUT;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseGpio_1a009b41614328663508a6dfccdd1bfa8e" kindref="member">output_mode_</ref><sp/>==<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT_OD;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_conf.mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>pull<sp/>resistors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classBaseGpio_1a47fd29eb70c7eb4f7ea6ff00782539a5" kindref="member">pull_mode_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_DISABLE;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>GPIO_PULLUP_ENABLE;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_DISABLE;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>GPIO_PULLUP_DISABLE;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_ENABLE;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ad8fb8979e9fdbec7cc4e842f23abcdb1" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP_DOWN</ref>:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_up_en<sp/>=<sp/>GPIO_PULLUP_ENABLE;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>io_conf.pull_down_en<sp/>=<sp/>GPIO_PULLDOWN_ENABLE;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>interrupt<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>io_conf.intr_type<sp/>=<sp/><ref refid="classEspGpio_1a452475ffffe087b209f7613ca4ae9b35" kindref="member">MapInterruptTrigger</ref>(<ref refid="classEspGpio_1a4d98e2c42bc3c236ca80fa7569909157" kindref="member">interrupt_trigger_</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>pin<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>io_conf.pin_bit_mask<sp/>=<sp/>(1ULL<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_config(&amp;io_conf);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>drive<sp/>capability<sp/>without<sp/>re-entering<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref><sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_drive_cap_t<sp/>esp_cap;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a2cd94a74eda9b9736e0541f3fa963a3f" kindref="member">drive_capability_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fa6e8cc0febfa6ac679fde1d9c66d57337" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_WEAK</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fac5e5b307d8a5361a3d27e2227c825d32" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_STRONGER</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03faa17918132458975f33a21b703a313b00" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_MEDIUM</ref>:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_2;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fade1fb233e62b1da7a89b6bad3b10f85e" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_STRONGEST</ref>:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_3;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_2;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>dret<sp/>=<sp/>gpio_set_drive_capability(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),<sp/>esp_cap);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>drive<sp/>capability<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(dret));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>advanced<sp/>features<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspGpio_1ada64948bf1df413764e02bef340e4062" kindref="member">InitializeAdvancedFeatures</ref>())<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>advanced<sp/>features<sp/>failed<sp/>to<sp/>initialize<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Continue<sp/>initialization<sp/>-<sp/>basic<sp/>GPIO<sp/>functionality<sp/>should<sp/>still<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="classBaseGpio_1ac5c36e8f02f1483820a15c7dbcdc8e6c" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>initialized<sp/>successfully&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1ac27780ff0bbc266cff0a2052c8146d11" kindref="member">EspGpio::Deinitialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1ac5c36e8f02f1483820a15c7dbcdc8e6c" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Deinitializing<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>interrupts<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a1fe4de0ad5e20fc200115cd4bb52ecf0" kindref="member">interrupt_enabled_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a08cc5eb9df6036fdc3cf4cac383678d4" kindref="member">DisableInterrupt</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>advanced<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a1bc4d9e3208d76bb8a0861c3de21d2e3" kindref="member">CleanupAdvancedFeatures</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>GPIO<sp/>to<sp/>default<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_reset_pin(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>reset<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classBaseGpio_1ac5c36e8f02f1483820a15c7dbcdc8e6c" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>deinitialized<sp/>successfully&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a5805fe2d581a4ce5cd42edf1b64b2fb9" kindref="member">EspGpio::IsPinAvailable</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref><sp/>&lt;=<sp/><ref refid="McuSelect_8h_1a8b5ad2beab18ca74b6bb74718d512d7d" kindref="member">HF_MCU_GPIO_MAX_PIN_NUMBER</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1ab863d6b5d30e7134ec2ba98e87dbdf07" kindref="member">GPIO_PIN_CAPABILITIES</ref>[<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>].<ref refid="structhf__gpio__pin__capabilities__t_1a693cf76982fc8759ee5f968ef56ffef0" kindref="member">is_valid_gpio</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref><sp/>&lt;<sp/>32;<sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref><sp/><ref refid="classEspGpio_1a89914a1ecc1201e97df0bae0c13ad556" kindref="member">EspGpio::GetMaxPins</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="McuSelect_8h_1a302eb1ea34953a1037bfbf9d0ebc6a5c" kindref="member">HF_MCU_GPIO_PIN_COUNT</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>32;<sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classEspGpio_1aee5346c09c9d81992935c5fd37455ea8" kindref="member">EspGpio::GetDescription</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>desc_buffer[128];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>caps<sp/>=<sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1ab863d6b5d30e7134ec2ba98e87dbdf07" kindref="member">GPIO_PIN_CAPABILITIES</ref>[<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>snprintf(desc_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(desc_buffer),<sp/></highlight><highlight class="stringliteral">&quot;ESP32C6<sp/>GPIO%d<sp/>(ADC:%s,<sp/>RTC:%s,<sp/>Strapping:%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),<sp/>caps.supports_adc<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps.supports_rtc<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">,<sp/>caps.is_strapping_pin<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>snprintf(desc_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(desc_buffer),<sp/></highlight><highlight class="stringliteral">&quot;MCU<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc_buffer;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BaseGpio<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1af0b68c0d1b3fda915803ba602ddab7fe" kindref="member">EspGpio::SupportsInterrupts</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;<sp/></highlight><highlight class="comment">//<sp/>All<sp/>ESP32C6<sp/>GPIOs<sp/>support<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INTERRUPT<sp/>FUNCTIONALITY<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a385ff46f95432183be7cd52d4a69fde4" kindref="member">EspGpio::ConfigureInterrupt</ref>(<ref refid="group__gpio_1ga7830c017a6fb46b8478c7ca44940c3c1" kindref="member">hf_gpio_interrupt_trigger_t</ref><sp/>trigger,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga1327f68d8287dd473a8c6cf0333a989f" kindref="member">InterruptCallback</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Configuring<sp/>interrupt<sp/>for<sp/>GPIO%d<sp/>with<sp/>trigger<sp/>type<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(trigger));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>interrupt_trigger_<sp/>=<sp/>trigger;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>interrupt_callback_<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>interrupt_user_data_<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>GPIO<sp/>interrupt<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_set_intr_type(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>MapInterruptTrigger(trigger));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>interrupt<sp/>type<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da48c59a175bbf7e75d7a633ab8c9f5ee0" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_HANDLER_FAILED</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Install<sp/>ISR<sp/>handler<sp/>if<sp/>not<sp/>already<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interrupt_callback_<sp/>&amp;&amp;<sp/>!gpio_isr_handler_installed_)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_install_isr_service(ESP_INTR_FLAG_LEVEL1);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK<sp/>&amp;&amp;<sp/>ret<sp/>!=<sp/>ESP_ERR_INVALID_STATE)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>install<sp/>GPIO<sp/>ISR<sp/>service:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da48c59a175bbf7e75d7a633ab8c9f5ee0" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_HANDLER_FAILED</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_isr_handler_installed_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>ISR<sp/>handler<sp/>for<sp/>this<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interrupt_callback_)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_isr_handler_add(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>StaticInterruptHandler,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK<sp/>&amp;&amp;<sp/>ret<sp/>!=<sp/>ESP_ERR_INVALID_STATE)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>ISR<sp/>handler<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da48c59a175bbf7e75d7a633ab8c9f5ee0" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_HANDLER_FAILED</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>isr_handler_added_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interrupt<sp/>configured<sp/>successfully<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a378b48a5c96c8c55313a354db5b673ca" kindref="member">EspGpio::EnableInterrupt</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1a363769239e2d658315215af324ee5aba" kindref="member">EnsureInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a4d98e2c42bc3c236ca80fa7569909157" kindref="member">interrupt_trigger_</ref><sp/>==<sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a599debe50453c8a67ce2ce7dfb455fa6" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daded9e1e9c5cba44f5dd775b76c2c7eb8" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_NOT_ENABLED</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_intr_enable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>interrupt<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da48c59a175bbf7e75d7a633ab8c9f5ee0" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_HANDLER_FAILED</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a1fe4de0ad5e20fc200115cd4bb52ecf0" kindref="member">interrupt_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interrupt<sp/>enabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a08cc5eb9df6036fdc3cf4cac383678d4" kindref="member">EspGpio::DisableInterrupt</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1a363769239e2d658315215af324ee5aba" kindref="member">EnsureInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspGpio_1a1fe4de0ad5e20fc200115cd4bb52ecf0" kindref="member">interrupt_enabled_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_intr_disable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>interrupt<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da48c59a175bbf7e75d7a633ab8c9f5ee0" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_HANDLER_FAILED</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>ISR<sp/>handler<sp/>only<sp/>if<sp/>previously<sp/>added<sp/>and<sp/>ISR<sp/>service<sp/>installed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a0aaa57aac6b572129338e1124dbd01b7" kindref="member">isr_handler_added_</ref><sp/>&amp;&amp;<sp/><ref refid="classEspGpio_1a85ed85c826744590f82101f07aacb69e" kindref="member">gpio_isr_handler_installed_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_isr_handler_remove(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a0aaa57aac6b572129338e1124dbd01b7" kindref="member">isr_handler_added_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a1fe4de0ad5e20fc200115cd4bb52ecf0" kindref="member">interrupt_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interrupt<sp/>disabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1ae518911cc7720b8ba4f7e854b3018a6f" kindref="member">EspGpio::WaitForInterrupt</ref>(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interrupt_enabled_)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daded9e1e9c5cba44f5dd775b76c2c7eb8" kindref="member">hf_gpio_err_t::GPIO_ERR_INTERRUPT_NOT_ENABLED</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>semaphore<sp/>if<sp/>not<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!platform_semaphore_)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>platform_semaphore_<sp/>=<sp/>xSemaphoreCreateBinary();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!platform_semaphore_)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>interrupt<sp/>semaphore<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da425ad913151330d4ad51535e7e31d30a" kindref="member">hf_gpio_err_t::GPIO_ERR_OUT_OF_MEMORY</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>TickType_t<sp/>ticks_to_wait<sp/>=<sp/>(timeout_ms<sp/>==<sp/>0)<sp/>?<sp/>portMAX_DELAY<sp/>:<sp/>pdMS_TO_TICKS(timeout_ms);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>BaseType_t<sp/>result<sp/>=</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreTake(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SemaphoreHandle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(platform_semaphore_),<sp/>ticks_to_wait);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da60701f049c086b44b9b07455b31b32d4" kindref="member">hf_gpio_err_t::GPIO_ERR_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1ac9c07576f5e322fd9ca80d159f662f65" kindref="member">EspGpio::GetInterruptStatus</ref>(<ref refid="structInterruptStatus" kindref="compound">InterruptStatus</ref>&amp;<sp/>status)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>status.is_enabled<sp/>=<sp/>interrupt_enabled_;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>status.trigger_type<sp/>=<sp/>interrupt_trigger_;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>status.interrupt_count<sp/>=<sp/>interrupt_count_.load(std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>status.has_callback<sp/>=<sp/>(interrupt_callback_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a24c69898357e7d08edd37a8f9674b735" kindref="member">EspGpio::ClearInterruptStats</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a72b2184392d57af209598c1b42065e5c" kindref="member">interrupt_count_</ref>.store(0,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BASEGPIO<sp/>PURE<sp/>VIRTUAL<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a8b189d48e93417185a9b7fe7afd3306c" kindref="member">EspGpio::SetDirectionImpl</ref>(<ref refid="group__gpio_1ga6b3450e1c9d6cba3355cc3567bb0cce3" kindref="member">hf_gpio_direction_t</ref><sp/>direction)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>gpio_mode_t<sp/>mode;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(direction)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>GPIO_MODE_INPUT;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>configuring<sp/>as<sp/>input&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_mode_<sp/>==<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>GPIO_MODE_OUTPUT_OD;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>configuring<sp/>as<sp/>open-drain<sp/>output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>GPIO_MODE_OUTPUT;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>configuring<sp/>as<sp/>push-pull<sp/>output&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>direction<sp/>%d<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(direction),</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da91fd58f5ca1f07c7ac4582826b9efdd3" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_set_direction(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>mode);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>direction<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daf325d6fbe617f4a9a26c320d3d3f26b0" kindref="member">hf_gpio_err_t::GPIO_ERR_DIRECTION_MISMATCH</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>drive<sp/>capability<sp/>for<sp/>output<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>SetDriveCapability(drive_capability_);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>current_direction_<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>GPIO%d<sp/>direction<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(direction<sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1aeb44f0d33e47afd3bf0437b24fed0ae9" kindref="member">EspGpio::SetPullModeImpl</ref>(<ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref><sp/>mode)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_set_pull_mode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>GPIO_FLOATING);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_set_pull_mode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>GPIO_PULLUP_ONLY);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_set_pull_mode(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>GPIO_PULLDOWN_ONLY);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da91fd58f5ca1f07c7ac4582826b9efdd3" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>pull<sp/>mode<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da7784f100f9881c8950cb9376118c533c" kindref="member">hf_gpio_err_t::GPIO_ERR_PULL_RESISTOR_FAILURE</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>pull_mode_<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>GPIO%d<sp/>pull<sp/>mode<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mode));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref><sp/><ref refid="classEspGpio_1a9c4eb71cf5585351a0fb08749fe37b27" kindref="member">EspGpio::GetPullModeImpl</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1ac5c36e8f02f1483820a15c7dbcdc8e6c" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseGpio_1a47fd29eb70c7eb4f7ea6ff00782539a5" kindref="member">pull_mode_</ref>;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>cached<sp/>value<sp/>if<sp/>not<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>actual<sp/>hardware<sp/>pull<sp/>resistor<sp/>state<sp/>from<sp/>ESP32<sp/>GPIO<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1a9514ff9811d7e04eaacbb29de5528ec1" kindref="member">HF_GPIO_IS_VALID_GPIO</ref>(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gpio_get_pull_mode<sp/>not<sp/>available<sp/>in<sp/>ESP-IDF<sp/>v5.5<sp/>-<sp/>use<sp/>alternative<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pullup_t<sp/>hw_pull_mode<sp/>=<sp/>GPIO_PULLUP_DISABLE;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>ESP-IDF<sp/>pull<sp/>mode<sp/>to<sp/>our<sp/>PullMode<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(hw_pull_mode)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GPIO_PULLUP_ONLY:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>hardware<sp/>pull<sp/>mode:<sp/>PULLUP_ONLY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GPIO_PULLDOWN_ONLY:</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>hardware<sp/>pull<sp/>mode:<sp/>PULLDOWN_ONLY&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>hardware<sp/>pull<sp/>mode:<sp/>FLOATING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>is<sp/>not<sp/>valid<sp/>for<sp/>pull<sp/>mode<sp/>reading,<sp/>returning<sp/>cached<sp/>value&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>to<sp/>cached<sp/>value<sp/>for<sp/>non-ESP32<sp/>platforms<sp/>or<sp/>invalid<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>ESP_LOGV(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>returning<sp/>cached<sp/>pull<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseGpio_1a26162b7180af0e0715fe0d8f37e695a3" kindref="member">BaseGpio::ToString</ref>(<ref refid="classBaseGpio_1a47fd29eb70c7eb4f7ea6ff00782539a5" kindref="member">pull_mode_</ref>));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseGpio_1a47fd29eb70c7eb4f7ea6ff00782539a5" kindref="member">pull_mode_</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a9661ef14697ca21f3a580add2f3a4623" kindref="member">EspGpio::SetOutputModeImpl</ref>(<ref refid="group__gpio_1ga825412a54660defc9ecbf8ad1ea1cf7b" kindref="member">hf_gpio_output_mode_t</ref><sp/>mode)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>the<sp/>new<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>output_mode_<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>ESP_LOGV(</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>output<sp/>mode<sp/>set<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(mode<sp/>==<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;open-drain&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;push-pull&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>already<sp/>initialized<sp/>and<sp/>configured<sp/>as<sp/>output,<sp/>update<sp/>the<sp/>hardware<sp/>mode<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized_<sp/>&amp;&amp;<sp/>current_direction_<sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SetDirectionImpl<sp/>will<sp/>apply<sp/>the<sp/>correct<sp/>ESP-IDF<sp/>GPIO<sp/>mode:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>GPIO_MODE_OUTPUT<sp/>for<sp/>push-pull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>GPIO_MODE_OUTPUT_OD<sp/>for<sp/>open-drain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>applying<sp/>output<sp/>mode<sp/>change<sp/>immediately&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetDirectionImpl(<ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>currently<sp/>output<sp/>or<sp/>not<sp/>initialized,<sp/>mode<sp/>is<sp/>cached<sp/>for<sp/>later<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>output<sp/>mode<sp/>cached<sp/>(will<sp/>be<sp/>applied<sp/>when<sp/>configured<sp/>as<sp/>output)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1ab1a2c40c2fc4896c58392592e39e6d06" kindref="member">EspGpio::WriteImpl</ref>(<ref refid="group__gpio_1ga49490004a4935c1f8f727fcbfba7f887" kindref="member">hf_gpio_state_t</ref><sp/>state)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_direction_<sp/>!=<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daf325d6fbe617f4a9a26c320d3d3f26b0" kindref="member">hf_gpio_err_t::GPIO_ERR_DIRECTION_MISMATCH</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>logical<sp/>state<sp/>to<sp/>electrical<sp/>level<sp/>based<sp/>on<sp/>polarity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>(state<sp/>==<sp/><ref refid="group__gpio_1gga49490004a4935c1f8f727fcbfba7f887a14da1ccdb89e74c932383b4d4cd86573" kindref="member">hf_gpio_state_t::HF_GPIO_STATE_ACTIVE</ref>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>((active_state_<sp/>==<sp/><ref refid="group__gpio_1ggaf02cdaf150fa829e4a871e58ed772c6dab2e7e26dbb35ac48971828008f86b356" kindref="member">hf_gpio_active_state_t::HF_GPIO_ACTIVE_HIGH</ref>)<sp/>?<sp/>1<sp/>:<sp/>0)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>((active_state_<sp/>==<sp/><ref refid="group__gpio_1gaf02cdaf150fa829e4a871e58ed772c6d" kindref="member">hf_gpio_active_state_t</ref>::<ref refid="group__gpio_1ggaf02cdaf150fa829e4a871e58ed772c6dab2e7e26dbb35ac48971828008f86b356" kindref="member">HF_GPIO_ACTIVE_HIGH</ref>)<sp/>?<sp/>0<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_set_level(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>level);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da875f2148cc6ff4a4e5c5ac14ef468218" kindref="member">hf_gpio_err_t::GPIO_ERR_WRITE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>current_state_<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>set<sp/>to<sp/>%s<sp/>(level<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(state<sp/>==<sp/><ref refid="group__gpio_1gga49490004a4935c1f8f727fcbfba7f887a14da1ccdb89e74c932383b4d4cd86573" kindref="member">hf_gpio_state_t::HF_GPIO_STATE_ACTIVE</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;inactive&quot;</highlight><highlight class="normal">,<sp/>level);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a2bba4bb6107fa6a4131223a679cdecac" kindref="member">EspGpio::ReadImpl</ref>(<ref refid="group__gpio_1ga49490004a4935c1f8f727fcbfba7f887" kindref="member">hf_gpio_state_t</ref>&amp;<sp/>state)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>gpio_get_level(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>electrical<sp/>level<sp/>to<sp/>logical<sp/>state<sp/>based<sp/>on<sp/>polarity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/>((level<sp/>==<sp/>1)<sp/>==<sp/>(active_state_<sp/>==<sp/><ref refid="group__gpio_1ggaf02cdaf150fa829e4a871e58ed772c6dab2e7e26dbb35ac48971828008f86b356" kindref="member">hf_gpio_active_state_t::HF_GPIO_ACTIVE_HIGH</ref>))</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="group__gpio_1gga49490004a4935c1f8f727fcbfba7f887a14da1ccdb89e74c932383b4d4cd86573" kindref="member">hf_gpio_state_t::HF_GPIO_STATE_ACTIVE</ref></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__gpio_1ga49490004a4935c1f8f727fcbfba7f887" kindref="member">hf_gpio_state_t</ref>::<ref refid="group__gpio_1gga49490004a4935c1f8f727fcbfba7f887a4646f94b6d7499976b7c997e826b95dc" kindref="member">HF_GPIO_STATE_INACTIVE</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>current_state_<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a4625ee672d358bf48bff8c3d1f9d8201" kindref="member">EspGpio::SetPinLevelImpl</ref>(<ref refid="group__gpio_1ga04d416163750773ac08d092bd0d4038e" kindref="member">hf_gpio_level_t</ref><sp/>level)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_direction_<sp/>!=<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daf325d6fbe617f4a9a26c320d3d3f26b0" kindref="member">hf_gpio_err_t::GPIO_ERR_DIRECTION_MISMATCH</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>level<sp/>enum<sp/>to<sp/>hardware<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hardware_level<sp/>=<sp/>(level<sp/>==<sp/><ref refid="group__gpio_1gga04d416163750773ac08d092bd0d4038ea38ff7115dcf0a8897f602d7a63861f17" kindref="member">hf_gpio_level_t::HF_GPIO_LEVEL_HIGH</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_set_level(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>hardware_level);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da875f2148cc6ff4a4e5c5ac14ef468218" kindref="member">hf_gpio_err_t::GPIO_ERR_WRITE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>ESP_LOGV(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>set<sp/>to<sp/>level<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>hardware_level);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a5a4c74349b2fb3f93d920f3b902a66ce" kindref="member">EspGpio::GetPinLevelImpl</ref>(<ref refid="group__gpio_1ga04d416163750773ac08d092bd0d4038e" kindref="member">hf_gpio_level_t</ref>&amp;<sp/>level)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hardware_level<sp/>=<sp/>gpio_get_level(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>hardware<sp/>level<sp/>to<sp/>level<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>level<sp/>=<sp/>(hardware_level<sp/>==<sp/>1)<sp/>?<sp/><ref refid="group__gpio_1gga04d416163750773ac08d092bd0d4038ea38ff7115dcf0a8897f602d7a63861f17" kindref="member">hf_gpio_level_t::HF_GPIO_LEVEL_HIGH</ref></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__gpio_1ga04d416163750773ac08d092bd0d4038e" kindref="member">hf_gpio_level_t</ref>::<ref refid="group__gpio_1gga04d416163750773ac08d092bd0d4038ea0e6f86bd5369fde81e8064b7865ea9e3" kindref="member">HF_GPIO_LEVEL_LOW</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a36373bacde83b2c40b8a9d9ee1240795" kindref="member">EspGpio::GetDirectionImpl</ref>(<ref refid="group__gpio_1ga6b3450e1c9d6cba3355cc3567bb0cce3" kindref="member">hf_gpio_direction_t</ref>&amp;<sp/>direction)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ESP-IDF<sp/>v5.5+<sp/>API<sp/>to<sp/>get<sp/>GPIO<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>gpio_io_config_t<sp/>io_config;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_get_io_config(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>&amp;io_config);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>GPIO%d<sp/>configuration:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad373c8c390069c2855b78d797b2b114a" kindref="member">hf_gpio_err_t::GPIO_ERR_READ_FAILURE</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>direction<sp/>based<sp/>on<sp/>input<sp/>enable<sp/>(ie)<sp/>and<sp/>output<sp/>enable<sp/>(oe)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_config.oe)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(io_config.ie)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neither<sp/>input<sp/>nor<sp/>output<sp/>enabled<sp/>-<sp/>unusual<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>direction<sp/>=<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a662b4f3168a5566025c1984b7e903914" kindref="member">EspGpio::GetOutputModeImpl</ref>(<ref refid="group__gpio_1ga825412a54660defc9ecbf8ad1ea1cf7b" kindref="member">hf_gpio_output_mode_t</ref>&amp;<sp/>mode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ESP-IDF<sp/>v5.5+<sp/>API<sp/>to<sp/>get<sp/>GPIO<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>gpio_io_config_t<sp/>io_config;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_get_io_config(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>&amp;io_config);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>GPIO%d<sp/>configuration:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad373c8c390069c2855b78d797b2b114a" kindref="member">hf_gpio_err_t::GPIO_ERR_READ_FAILURE</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>open-drain<sp/>mode<sp/>from<sp/>hardware<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>mode<sp/>=<sp/>io_config.od<sp/>?<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba26b362f67afa6dbc264fb539c0dc304d" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_PUSH_PULL</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADVANCED<sp/>ESP32C6<sp/>FEATURES<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a68e7e6cf53c58d706a7ae00e321f1e3d" kindref="member">EspGpio::SetDriveCapability</ref>(<ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03f" kindref="member">hf_gpio_drive_cap_t</ref><sp/>capability)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>drive_capability_<sp/>=<sp/>capability;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>gpio_drive_cap_t<sp/>esp_cap;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(capability)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fa6e8cc0febfa6ac679fde1d9c66d57337" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_WEAK</ref>:</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_0;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fac5e5b307d8a5361a3d27e2227c825d32" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_STRONGER</ref>:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03faa17918132458975f33a21b703a313b00" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_MEDIUM</ref>:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_2;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3bd7aea00f1dc347237b911307eee03fade1fb233e62b1da7a89b6bad3b10f85e" kindref="member">hf_gpio_drive_cap_t::HF_GPIO_DRIVE_CAP_STRONGEST</ref>:</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_cap<sp/>=<sp/>GPIO_DRIVE_CAP_3;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da91fd58f5ca1f07c7ac4582826b9efdd3" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_set_drive_capability(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>esp_cap);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>drive<sp/>capability<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Set<sp/>GPIO%d<sp/>drive<sp/>capability<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(capability));</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a2c71bcffe9a6180b770a22d00af34571" kindref="member">EspGpio::ConfigureGlitchFilter</ref>(</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976f" kindref="member">hf_gpio_glitch_filter_type_t</ref><sp/>filter_type,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__flex__filter__config__t" kindref="compound">hf_gpio_flex_filter_config_t</ref>*<sp/>flex_config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>glitch_filter_type_<sp/>=<sp/>filter_type;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>existing<sp/>filters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>CleanupGlitchFilters();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter_type<sp/>==<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fa070f0507f4a589f480cbd945821c29da" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>ret;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>pin<sp/>glitch<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter_type<sp/>==<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fabec0d73874806b2b5a086afb5dd47e26" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_PIN</ref><sp/>||</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter_type<sp/>==<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fafeac30eeab152156b1e3a5ea94c25be1" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_BOTH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pin_glitch_filter_config_t<sp/>pin_filter_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clk_src<sp/>=<sp/>GLITCH_FILTER_CLK_SRC_DEFAULT,<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>clock<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.gpio_num<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_)};</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_new_pin_glitch_filter(</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pin_filter_config,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;glitch_filter_handle_));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>pin<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_glitch_filter_enable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>pin<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>pin_glitch_filter_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pin<sp/>glitch<sp/>filter<sp/>enabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>flexible<sp/>glitch<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((filter_type<sp/>==<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976faf05db471eceaa0c3bef5a7263626a7e5" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_FLEX</ref><sp/>||</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_type<sp/>==<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fafeac30eeab152156b1e3a5ea94c25be1" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_BOTH</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flex_config)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>flex_filter_config_<sp/>=<sp/>*flex_config;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_flex_glitch_filter_config_t<sp/>flex_filter_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clk_src<sp/>=<sp/>GLITCH_FILTER_CLK_SRC_DEFAULT,<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>clock<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.gpio_num<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.window_width_ns<sp/>=<sp/>flex_config-&gt;window_width_ns,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.window_thres_ns<sp/>=<sp/>flex_config-&gt;window_threshold_ns};</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_new_flex_glitch_filter(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;flex_filter_config,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;rtc_gpio_handle_));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>flex<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flex_config-&gt;enable_on_init)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_glitch_filter_enable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rtc_gpio_handle_));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>flex<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flex_glitch_filter_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Flexible<sp/>glitch<sp/>filter<sp/>configured<sp/>for<sp/>GPIO%d<sp/>(width:<sp/>%dns,<sp/>threshold:<sp/>%dns)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>flex_config-&gt;window_width_ns,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flex_config-&gt;window_threshold_ns);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a2c79c703fa89be2d6c180e43e8a5be19" kindref="member">EspGpio::ConfigureSleepMode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__sleep__config__t" kindref="compound">hf_gpio_sleep_config_t</ref>&amp;<sp/>sleep_config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>sleep_config_<sp/>=<sp/>sleep_config;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>RTC<sp/>GPIO<sp/>if<sp/>supported<sp/>and<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sleep_config.hold_during_sleep<sp/>&amp;&amp;<sp/><ref refid="EspTypes__GPIO_8h_1a617269d4d523773b3e940e91648f73ef" kindref="member">HF_GPIO_IS_VALID_RTC_GPIO</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>rtc_gpio_init(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>RTC<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da56d5db816b34f92a07c27dc2b22035be" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_CONFIGURATION</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>RTC<sp/>GPIO<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350" kindref="member">hf_gpio_mode_t</ref><sp/>sleep_dir<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350" kindref="member">hf_gpio_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sleep_config.sleep_direction);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_gpio_mode_t<sp/>rtc_mode;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sleep_dir)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350a55d5b159d8bdc33d251903173665bbcb" kindref="member">hf_gpio_mode_t::HF_GPIO_MODE_INPUT</ref>:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_INPUT_ONLY;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350a485653dd5ea48cf54ea8c5a7c7f20d69" kindref="member">hf_gpio_mode_t::HF_GPIO_MODE_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_mode_<sp/>==<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_OUTPUT_OD;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_OUTPUT_ONLY;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_DISABLED;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>rtc_gpio_set_direction(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>rtc_mode);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>RTC<sp/>GPIO%d<sp/>direction:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daf325d6fbe617f4a9a26c320d3d3f26b0" kindref="member">hf_gpio_err_t::GPIO_ERR_DIRECTION_MISMATCH</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>RTC<sp/>pull<sp/>resistors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eced" kindref="member">hf_gpio_pull_t</ref><sp/>sleep_pull<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eced" kindref="member">hf_gpio_pull_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sleep_config.sleep_pull_mode);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sleep_pull)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876ecedab87d55dea1d794e68a534d4f372714b4" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_UP</ref>:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eceda7a12fb86ce14f509b153610cc759f6c5" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_DOWN</ref>:</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eceda39702e81499461c60cd275fece8819d3" kindref="member">hf_gpio_pull_t::HF_GPIO_PULL_NONE</ref>:</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_gpio_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RTC<sp/>GPIO%d<sp/>configured<sp/>for<sp/>sleep<sp/>mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>hold<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sleep_config.hold_during_sleep)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_hold_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>hold<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hold_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hold<sp/>enabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a8a8afa2c6f5cdf99fee057869e33be43" kindref="member">EspGpio::SupportsGlitchFilter</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a79089afb0a0f9cf924381db9fa2b13d1" kindref="member">HF_GPIO_SUPPORTS_GLITCH_FILTER</ref>(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a093fe910f55946ecd55ccb6d2139824a" kindref="member">EspGpio::ConfigurePinGlitchFilter</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="EspTypes__GPIO_8h_1a79089afb0a0f9cf924381db9fa2b13d1" kindref="member">HF_GPIO_SUPPORTS_GLITCH_FILTER</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>does<sp/>not<sp/>support<sp/>glitch<sp/>filtering&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>pin<sp/>glitch<sp/>filter<sp/>(fixed<sp/>2<sp/>clock<sp/>cycles)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pin_glitch_filter_config_t<sp/>filter_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.clk_src<sp/>=<sp/>GLITCH_FILTER_CLK_SRC_DEFAULT,<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>clock<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.gpio_num<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_)};</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>gpio_new_pin_glitch_filter(</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;filter_config,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>pin<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>gpio_glitch_filter_enable(</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>pin<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpio_del_glitch_filter(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glitch_filter_handle_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>pin_glitch_filter_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>glitch_filter_type_<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fabec0d73874806b2b5a086afb5dd47e26" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_PIN</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pin<sp/>glitch<sp/>filter<sp/>enabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>and<sp/>cleanup<sp/>pin<sp/>glitch<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glitch_filter_handle_<sp/>&amp;&amp;<sp/>pin_glitch_filter_enabled_)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpio_glitch_filter_disable(</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gpio_del_glitch_filter(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glitch_filter_handle_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>pin_glitch_filter_enabled_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flex_glitch_filter_enabled_)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glitch_filter_type_<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fa070f0507f4a589f480cbd945821c29da" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_NONE</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pin<sp/>glitch<sp/>filter<sp/>disabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Glitch<sp/>filter<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a185dff0a8d47139e29b2a11b627aa916" kindref="member">EspGpio::ConfigureFlexGlitchFilter</ref>(</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__flex__filter__config__t" kindref="compound">hf_gpio_flex_filter_config_t</ref>&amp;<sp/>config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="EspTypes__GPIO_8h_1a79089afb0a0f9cf924381db9fa2b13d1" kindref="member">HF_GPIO_SUPPORTS_GLITCH_FILTER</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>does<sp/>not<sp/>support<sp/>glitch<sp/>filtering&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>flexible<sp/>glitch<sp/>filter<sp/>with<sp/>custom<sp/>timing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>gpio_flex_glitch_filter_config_t<sp/>filter_config<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.clk_src<sp/>=<sp/>GLITCH_FILTER_CLK_SRC_DEFAULT,<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>clock<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.gpio_num<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.window_width_ns<sp/>=<sp/>config.window_width_ns,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.window_thres_ns<sp/>=<sp/>config.window_threshold_ns};</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>gpio_new_flex_glitch_filter(</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;filter_config,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>flex<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>gpio_glitch_filter_enable(</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>flex<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_del_glitch_filter(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(glitch_filter_handle_));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>glitch_filter_handle_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>flex_glitch_filter_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>flex_filter_config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>glitch_filter_type_<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976faf05db471eceaa0c3bef5a7263626a7e5" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_FLEX</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Flex<sp/>glitch<sp/>filter<sp/>enabled<sp/>for<sp/>GPIO%d<sp/>(window:<sp/>%uns,<sp/>threshold:<sp/>%uns)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>config.window_width_ns,<sp/>config.window_threshold_ns);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Flexible<sp/>glitch<sp/>filter<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1abec628007c34fe89d133d56e7714e119" kindref="member">EspGpio::EnableGlitchFilters</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1a363769239e2d658315215af324ee5aba" kindref="member">EnsureInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>glitch<sp/>filter<sp/>configured<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daedd8db4c5482eb9b06a93f7686e7df5a" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_STATE</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>gpio_glitch_filter_enable(</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>glitch<sp/>filters<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Glitch<sp/>filters<sp/>enabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1aacd6a871bb388d4b30d148b8206d88d2" kindref="member">EspGpio::DisableGlitchFilters</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseGpio_1a363769239e2d658315215af324ee5aba" kindref="member">EnsureInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>glitch<sp/>filter<sp/>to<sp/>disable<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>gpio_glitch_filter_disable(</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>));</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>glitch<sp/>filters<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Glitch<sp/>filters<sp/>disabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a278d4f15f4a47c2f602e0b5bc8e92166" kindref="member">EspGpio::SupportsRtcGpio</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a029215f672e9b08f0287b187b1c2d4c1" kindref="member">EspGpio::ConfigureSleep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__sleep__config__t" kindref="compound">hf_gpio_sleep_config_t</ref>&amp;<sp/>config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>does<sp/>not<sp/>support<sp/>RTC<sp/>functionality&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>sleep-specific<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.enable_sleep_retain)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_init(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>RTC<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>sleep<sp/>mode<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_gpio_mode_t<sp/>rtc_mode;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga6b3450e1c9d6cba3355cc3567bb0cce3" kindref="member">hf_gpio_direction_t</ref><sp/>sleep_dir<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gpio_1ga6b3450e1c9d6cba3355cc3567bb0cce3" kindref="member">hf_gpio_direction_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config.sleep_direction);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sleep_dir)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>:</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_INPUT_ONLY;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_OUTPUT_ONLY;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_mode<sp/>=<sp/>RTC_GPIO_MODE_DISABLED;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_set_direction(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>rtc_mode);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>RTC<sp/>direction<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>sleep<sp/>pull<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config.sleep_pull_mode)<sp/>!=</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref><sp/>rtc_pull<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gpio_1ga7d27555a7050f5d9d9006c96b841e335" kindref="member">hf_gpio_pull_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config.sleep_pull_mode);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(rtc_pull)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>:</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>:</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>:</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pullup_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_pulldown_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtc_pull<sp/>==<sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335a88a10405bfdfad3cb5c0f3ee531a54eb" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_UP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_pullup_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtc_pull<sp/>==<sp/><ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335addecfb46009ce8c5ad563e8fbab0a749" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_DOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_pulldown_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>RTC<sp/>pull<sp/>mode<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>rtc_gpio_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>RTC<sp/>GPIO<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtc_gpio_enabled_)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_deinit(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rtc_gpio_enabled_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>sleep_config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Sleep<sp/>configuration<sp/>updated<sp/>for<sp/>GPIO%d<sp/>(RTC:<sp/>%s)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config.enable_sleep_retain<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Sleep<sp/>configuration<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a4e9a361804cc545b6667ff62fe3561df" kindref="member">EspGpio::ConfigureHold</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>hold<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>RTC<sp/>hold<sp/>for<sp/>RTC-capable<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_hold_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>digital<sp/>hold<sp/>for<sp/>non-RTC<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>gpio_hold_en(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>hold<sp/>feature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_hold_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>gpio_hold_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>%s<sp/>hold<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>enable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enable&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disable&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(pin_),<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>hold_enabled_<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hold<sp/>%s<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/>enable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">,<sp/>static_cast&lt;int&gt;(pin_));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hold<sp/>configuration<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1aac40d891a4e5d0ea8095462e9b02bdc9" kindref="member">EspGpio::ConfigureWakeUp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__gpio__wakeup__config__t" kindref="compound">hf_gpio_wakeup_config_t</ref>&amp;<sp/>config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_))<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO%d<sp/>does<sp/>not<sp/>support<sp/>wake-up<sp/>functionality&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.enable_rtc_wake)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_int_type_t<sp/>wakeup_type<sp/>=</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapInterruptTrigger(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__gpio_1ga7830c017a6fb46b8478c7ca44940c3c1" kindref="member">hf_gpio_interrupt_trigger_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(config.wake_trigger));</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wakeup_type<sp/>!=<sp/>GPIO_INTR_HIGH_LEVEL<sp/>&amp;&amp;<sp/>wakeup_type<sp/>!=<sp/>GPIO_INTR_LOW_LEVEL)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>wake-up<sp/>trigger<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da88adf359e7e9360c9b7a03ca100ce46b" kindref="member">hf_gpio_err_t::GPIO_ERR_INVALID_ARG</ref>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_wakeup_enable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),<sp/>wakeup_type);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>wake-up<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Wake-up<sp/>enabled<sp/>for<sp/>GPIO%d<sp/>(trigger:<sp/>%s)&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wakeup_type<sp/>==<sp/>GPIO_INTR_HIGH_LEVEL)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;high&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;low&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>rtc_gpio_wakeup_disable(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>wake-up<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_),</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da335a7094845a2813f8b06105d3f3e210" kindref="member">hf_gpio_err_t::GPIO_ERR_DRIVER_ERROR</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Wake-up<sp/>disabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pin_));</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>wakeup_config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>ESP_LOGW(<ref refid="EspGpio_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Wake-up<sp/>configuration<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>platform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dad0dedbb315ad871e12c7da9e293a37dd" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><ref refid="structhf__gpio__status__info__t" kindref="compound">hf_gpio_status_info_t</ref><sp/><ref refid="classEspGpio_1a69adebea4532cfd080f9987015722fa6" kindref="member">EspGpio::GetConfigurationDump</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><ref refid="structhf__gpio__status__info__t" kindref="compound">hf_gpio_status_info_t</ref><sp/>dump<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a7df919681975d84d4c92d22580407500" kindref="member">pin_number</ref><sp/>=<sp/><ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1ab1b1d3636da0afeb647dea2ae59b86ac" kindref="member">current_mode</ref><sp/>=</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350" kindref="member">hf_gpio_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>use<sp/>a<sp/>getter<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a47509a663ee6fc5877275ba354208234" kindref="member">current_pull_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a3b7463d9622ddabf9cd39e325876eced" kindref="member">hf_gpio_pull_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1a47fd29eb70c7eb4f7ea6ff00782539a5" kindref="member">pull_mode_</ref>);<sp/></highlight><highlight class="comment">//<sp/>or<sp/>use<sp/>a<sp/>getter<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1aa220fc53a4c586080e01685b002ebbad" kindref="member">current_drive_cap</ref><sp/>=<sp/><ref refid="classEspGpio_1a2cd94a74eda9b9736e0541f3fa963a3f" kindref="member">drive_capability_</ref>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a3eeb5e3a5eee2c5e5441470ca3816f08" kindref="member">interrupt_type</ref><sp/>=</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a17096a52e65ea765c88ef633daf3cc54" kindref="member">hf_gpio_intr_type_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1a4d98e2c42bc3c236ca80fa7569909157" kindref="member">interrupt_trigger_</ref>);<sp/></highlight><highlight class="comment">//<sp/>or<sp/>use<sp/>a<sp/>getter<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a1572c9db50b0a950e06e3e2d80d2db99" kindref="member">input_enabled</ref><sp/>=<sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref><sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a6c0b97dcd2c31b57a9f41c1af84b9212" kindref="member">output_enabled</ref><sp/>=<sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref><sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a4b64191329b4a454cd79d9ea7b528da7" kindref="member">open_drain</ref><sp/>=<sp/>(<ref refid="classBaseGpio_1a009b41614328663508a6dfccdd1bfa8e" kindref="member">output_mode_</ref><sp/>==<sp/><ref refid="group__gpio_1gga825412a54660defc9ecbf8ad1ea1cf7ba5f14b6a9f5f28544b4314b7dfd2cdf51" kindref="member">hf_gpio_output_mode_t::HF_GPIO_OUTPUT_MODE_OPEN_DRAIN</ref>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a9bac075c3bafe7daa43c4849af624a00" kindref="member">sleep_sel_enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1ada9c5a18767686774175ed9980f2c9b7" kindref="member">hold_enabled</ref><sp/>=<sp/><ref refid="classEspGpio_1a06e1241c8517cb66e98d0054590b943a" kindref="member">hold_enabled_</ref>;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a86482ca53ef6307e2e66fca220ad3921" kindref="member">rtc_enabled</ref><sp/>=<sp/><ref refid="classEspGpio_1ae034b797966174d1ab52157b69195289" kindref="member">rtc_gpio_enabled_</ref>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a97d47f44299688764ecf59d2ae9dc84c" kindref="member">function_select</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1af982b3b07cde2bd70808214bb389f1d4" kindref="member">filter_type</ref><sp/>=<sp/><ref refid="classEspGpio_1aa2af04744c3d0e256359d33b6f9a43c7" kindref="member">glitch_filter_type_</ref>;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a743427ccb7f85a59e1d82ac462cdcbe7" kindref="member">glitch_filter_enabled</ref><sp/>=<sp/><ref refid="classEspGpio_1a04b78e55bdb1d95cec78571424892b27" kindref="member">pin_glitch_filter_enabled_</ref><sp/>||<sp/><ref refid="classEspGpio_1af8a683fc6c6e869c4a576cb7be13eb0b" kindref="member">flex_glitch_filter_enabled_</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a681064a21b3309ba8fa02df2a05b81ee" kindref="member">interrupt_count</ref><sp/>=<sp/><ref refid="classEspGpio_1a72b2184392d57af209598c1b42065e5c" kindref="member">interrupt_count_</ref>.load();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1ac5bd29640d807e44cf1669213f3d0db9" kindref="member">is_wake_source</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1a24c51cb827bdf177bab18cca55d184ee" kindref="member">sleep_hold_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>dump.<ref refid="structhf__gpio__status__info__t_1ab7d54427a230729db2bd2b04e7a5afa7" kindref="member">last_interrupt_time_us</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dump;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a47b05205db6a3d993875a9ab993ee2c6" kindref="member">EspGpio::IsHeld</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a06e1241c8517cb66e98d0054590b943a" kindref="member">hold_enabled_</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a08bdc6128b25384532662d93d2049ec2" kindref="member">EspGpio::GetPinCapabilities</ref>(<ref refid="structhf__gpio__pin__capabilities__t" kindref="compound">hf_gpio_pin_capabilities_t</ref>&amp;<sp/>capabilities)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>capabilities.<ref refid="structhf__gpio__status__info__t_1a7df919681975d84d4c92d22580407500" kindref="member">pin_number</ref><sp/>=<sp/>pin_;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>capabilities.supports_input<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>capabilities.supports_output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>capabilities.supports_pullup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>capabilities.supports_pulldown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>capabilities.supports_glitch_filter<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a79089afb0a0f9cf924381db9fa2b13d1" kindref="member">HF_GPIO_SUPPORTS_GLITCH_FILTER</ref>(pin_);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>capabilities.supports_rtc<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>capabilities.supports_adc<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1ae8020cac40277fa6c3ba8c0761c0f194" kindref="member">HF_GPIO_IS_ADC_CAPABLE</ref>(pin_);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>capabilities.is_strapping_pin<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a82f160ff85b7f87247c8543a3daffcb8" kindref="member">HF_GPIO_IS_STRAPPING_PIN</ref>(pin_);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>capabilities.is_spi_pin<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1ac12cd2a8d9a1657859e5bcfab569f217" kindref="member">HF_GPIO_IS_SPI_PIN</ref>(pin_);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>capabilities.is_usb_jtag_pin<sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1ac1631752989bff41b5c0d820b59315cc" kindref="member">HF_GPIO_IS_USB_JTAG_PIN</ref>(pin_);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>capabilities<sp/>for<sp/>non-ESP32C6<sp/>platforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>capabilities.pin_number<sp/>=<sp/>pin_;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>capabilities.supports_input<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>capabilities.supports_output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>capabilities.supports_pullup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>capabilities.supports_pulldown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>capabilities.supports_glitch_filter<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>capabilities.supports_rtc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>capabilities.supports_adc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>capabilities.is_strapping_pin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>capabilities.is_spi_pin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>capabilities.is_usb_jtag_pin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a28f867ec423d2dcfbcc25cfc0dd658ea" kindref="member">EspGpio::GetStatusInfo</ref>(<ref refid="structhf__gpio__status__info__t" kindref="compound">hf_gpio_status_info_t</ref>&amp;<sp/>status)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>GetConfigurationDump();</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="classEspGpio_1a3b2fca526fd91aec5e0867346559afa3" kindref="member">EspGpio::GetTotalInterruptCount</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a8d92a7c490f5ab71bb40ae9b866c310c" kindref="member">g_total_gpio_interrupts</ref>.load();</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="classEspGpio_1aa3ef4dc499aa7693e3a96fa47766de13" kindref="member">EspGpio::GetActiveGpioCount</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a5f218373a579dbffd6f2382b20ace916" kindref="member">g_active_gpio_count</ref>.load();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a987113dad2ac0f206afdcdc124850db5" kindref="member">EspGpio::IsValidPin</ref>(<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>pin_num)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1aa0b0367cdde453194c971d02ece05a8f" kindref="member">HF_GPIO_IS_VALID_PIN</ref>(pin_num);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pin_num<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pin_num<sp/>&lt;<sp/>32);<sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1ae7c78b0135038cfb9302d2c131bdb39d" kindref="member">EspGpio::IsRtcGpio</ref>(<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>pin_num)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(pin_num);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1ae55553a663099f4fafbb65488477640e" kindref="member">EspGpio::IsStrappingPin</ref>(<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>pin_num)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__GPIO_8h_1a82f160ff85b7f87247c8543a3daffcb8" kindref="member">HF_GPIO_IS_STRAPPING_PIN</ref>(pin_num);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATIC<sp/>UTILITY<sp/>METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>flag<sp/>to<sp/>track<sp/>ISR<sp/>service<sp/>installation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a85ed85c826744590f82101f07aacb69e" kindref="member">EspGpio::gpio_isr_handler_installed_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LAZY<sp/>INITIALIZATION<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>EnsureInitialized()<sp/>is<sp/>inherited<sp/>from<sp/>BaseGpio<sp/>and<sp/>provides<sp/>lazy<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>base<sp/>class<sp/>implementation<sp/>calls<sp/>Initialize()<sp/>if<sp/>not<sp/>already<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>HELPER<sp/>FUNCTION<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal">gpio_int_type_t<sp/><ref refid="classEspGpio_1a452475ffffe087b209f7613ca4ae9b35" kindref="member">EspGpio::MapInterruptTrigger</ref>(<ref refid="group__gpio_1ga7830c017a6fb46b8478c7ca44940c3c1" kindref="member">hf_gpio_interrupt_trigger_t</ref><sp/>trigger)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(trigger)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a3329c6966749e885e0fae014078c306b" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_RISING_EDGE</ref>:</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_POSEDGE;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a5aed939da4e6fc63381ce0a51ce58e9d" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_FALLING_EDGE</ref>:</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_NEGEDGE;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a09801f149bee7cb99caad5d5e649abc3" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_BOTH_EDGES</ref>:</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_ANYEDGE;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1adea2885dba61754e32fed0ce5e6657c6" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_LOW_LEVEL</ref>:</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_LOW_LEVEL;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a5e5303d5ffc82721bd4158217156dde0" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_HIGH_LEVEL</ref>:</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_HIGH_LEVEL;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga7830c017a6fb46b8478c7ca44940c3c1a599debe50453c8a67ce2ce7dfb455fa6" kindref="member">hf_gpio_interrupt_trigger_t::HF_GPIO_INTERRUPT_TRIGGER_NONE</ref>:</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GPIO_INTR_DISABLE;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/><ref refid="classEspGpio_1a04a1fc91cea1032c9db77373a113e433" kindref="member">EspGpio::StaticInterruptHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio" kindref="compound">EspGpio</ref>*<sp/>gpio_instance<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classEspGpio" kindref="compound">EspGpio</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(arg);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpio_instance)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_instance-&gt;<ref refid="classEspGpio_1a786bacf7186807a58fdf2d3a338d918a" kindref="member">HandleInterrupt</ref>();</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a786bacf7186807a58fdf2d3a338d918a" kindref="member">EspGpio::HandleInterrupt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>interrupt<sp/>counter<sp/>(thread-safe)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a72b2184392d57af209598c1b42065e5c" kindref="member">interrupt_count_</ref>.fetch_add(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><ref refid="namespaceanonymous__namespace_02EspGpio_8cpp_03_1a8d92a7c490f5ab71bb40ae9b866c310c" kindref="member">g_total_gpio_interrupts</ref>.fetch_add(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>semaphore<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a4d3ee152727c2221f314c9d2b5283aaf" kindref="member">platform_semaphore_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseType_t<sp/>higher_priority_task_woken<sp/>=<sp/>pdFALSE;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGiveFromISR(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SemaphoreHandle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1a4d3ee152727c2221f314c9d2b5283aaf" kindref="member">platform_semaphore_</ref>),</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;higher_priority_task_woken);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(higher_priority_task_woken<sp/>==<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portYIELD_FROM_ISR();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>user<sp/>callback<sp/>if<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a63dee710d1d84cd56e8c50d3e20d8370" kindref="member">interrupt_callback_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a63dee710d1d84cd56e8c50d3e20d8370" kindref="member">interrupt_callback_</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classEspGpio_1a4d98e2c42bc3c236ca80fa7569909157" kindref="member">interrupt_trigger_</ref>,<sp/><ref refid="classEspGpio_1a78b0811f7be9f554d6b91f7de07b422d" kindref="member">interrupt_user_data_</ref>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1ada64948bf1df413764e02bef340e4062" kindref="member">EspGpio::InitializeAdvancedFeatures</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>RTC<sp/>GPIO<sp/>if<sp/>the<sp/>pin<sp/>supports<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Pin<sp/>GPIO%d<sp/>supports<sp/>RTC<sp/>functionality&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1ae034b797966174d1ab52157b69195289" kindref="member">rtc_gpio_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>default<sp/>sleep<sp/>configuration<sp/>for<sp/>RTC-capable<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1ae034b797966174d1ab52157b69195289" kindref="member">rtc_gpio_enabled_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a1bb6b5cb2d2217cef56f1b3cf426ed49" kindref="member">sleep_config_</ref>.<ref refid="structhf__gpio__sleep__config__t_1a2493727745a0fabffbb0eee91522742f" kindref="member">sleep_direction</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__GPIO_8h_1a1eea32898bff7ac636836ce1c3f91350" kindref="member">hf_gpio_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a1bb6b5cb2d2217cef56f1b3cf426ed49" kindref="member">sleep_config_</ref>.<ref refid="structhf__gpio__sleep__config__t_1ab5b3971c4fbd11f1678185a3e95357a7" kindref="member">sleep_pull_mode</ref><sp/>=</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspGpio_8cpp_1aaa46d5ea70be8a9493291ca12fca5eed" kindref="member">MapPullModeToHardware</ref>(<ref refid="group__gpio_1gga7d27555a7050f5d9d9006c96b841e335ae17c8cfbde2e4323ba15750747758875" kindref="member">hf_gpio_pull_mode_t::HF_GPIO_PULL_MODE_FLOATING</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a1bb6b5cb2d2217cef56f1b3cf426ed49" kindref="member">sleep_config_</ref>.<ref refid="structhf__gpio__sleep__config__t_1a70b6942b44bcc28c070d4e7e71a450a2" kindref="member">sleep_output_enable</ref><sp/>=</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref><sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a1bb6b5cb2d2217cef56f1b3cf426ed49" kindref="member">sleep_config_</ref>.<ref refid="structhf__gpio__sleep__config__t_1a62d59e37b7e30d8f4de645d956ded140" kindref="member">sleep_input_enable</ref><sp/>=</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classBaseGpio_1a42e5fe390af4b700cbd861237fcef37e" kindref="member">current_direction_</ref><sp/>==<sp/><ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3a5090403a0f4f177d6fb813cd9d06bf1e" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_INPUT</ref>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a1bb6b5cb2d2217cef56f1b3cf426ed49" kindref="member">sleep_config_</ref>.<ref refid="structhf__gpio__sleep__config__t_1a046a30949252068ffe13515a3a2b0bfc" kindref="member">hold_during_sleep</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RTC<sp/>GPIO<sp/>features<sp/>initialized<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>glitch<sp/>filter<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1aa2af04744c3d0e256359d33b6f9a43c7" kindref="member">glitch_filter_type_</ref><sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fa070f0507f4a589f480cbd945821c29da" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_NONE</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a04b78e55bdb1d95cec78571424892b27" kindref="member">pin_glitch_filter_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1af8a683fc6c6e869c4a576cb7be13eb0b" kindref="member">flex_glitch_filter_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>features<sp/>initialized<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Basic<sp/>GPIO<sp/>initialization<sp/>(no<sp/>advanced<sp/>features<sp/>available)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a1bc4d9e3208d76bb8a0861c3de21d2e3" kindref="member">EspGpio::CleanupAdvancedFeatures</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>glitch<sp/>filters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1adfd48fa3edbbf0a146ae13b6a8622c56" kindref="member">CleanupGlitchFilters</ref>();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>RTC<sp/>GPIO<sp/>resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1ae034b797966174d1ab52157b69195289" kindref="member">rtc_gpio_enabled_</ref><sp/>&amp;&amp;<sp/><ref refid="EspTypes__GPIO_8h_1ae0f0b8bee595029cdac4395dfe6ab74f" kindref="member">HF_GPIO_IS_RTC_GPIO</ref>(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>RTC<sp/>GPIO<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>rtc_gpio_deinit(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deinitialize<sp/>RTC<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RTC<sp/>GPIO%d<sp/>deinitialized&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1ae034b797966174d1ab52157b69195289" kindref="member">rtc_gpio_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a54d1c5cb96fcc14fa893cf12d82b410a" kindref="member">rtc_gpio_handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>hold<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a06e1241c8517cb66e98d0054590b943a" kindref="member">hold_enabled_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_hold_dis(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>hold<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hold<sp/>disabled<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a06e1241c8517cb66e98d0054590b943a" kindref="member">hold_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>features<sp/>cleaned<sp/>up<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1adfd48fa3edbbf0a146ae13b6a8622c56" kindref="member">EspGpio::CleanupGlitchFilters</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_ESP32C6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>and<sp/>delete<sp/>glitch<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>ret<sp/>=<sp/>gpio_glitch_filter_disable(</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>));</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gpio_del_glitch_filter(</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">gpio_glitch_filter_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref>));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>delete<sp/>glitch<sp/>filter<sp/>for<sp/>GPIO%d:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>),</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(ret));</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Glitch<sp/>filter<sp/>cleaned<sp/>up<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1ac28a7882cdc9ef28da6c0a130d43b601" kindref="member">glitch_filter_handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>glitch<sp/>filter<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1a04b78e55bdb1d95cec78571424892b27" kindref="member">pin_glitch_filter_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1af8a683fc6c6e869c4a576cb7be13eb0b" kindref="member">flex_glitch_filter_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><ref refid="classEspGpio_1aa2af04744c3d0e256359d33b6f9a43c7" kindref="member">glitch_filter_type_</ref><sp/>=<sp/><ref refid="EspTypes__GPIO_8h_1a0a21f1072a8d91c27100598234c9976fa070f0507f4a589f480cbd945821c29da" kindref="member">hf_gpio_glitch_filter_type_t::HF_GPIO_GLITCH_FILTER_NONE</ref>;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEspGpio_1a35edac2436920f517f75c958fc265da6" kindref="member">EspGpio::CleanupInterruptSemaphore</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspGpio_1a4d3ee152727c2221f314c9d2b5283aaf" kindref="member">platform_semaphore_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>vSemaphoreDelete(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">SemaphoreHandle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspGpio_1a4d3ee152727c2221f314c9d2b5283aaf" kindref="member">platform_semaphore_</ref>));</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspGpio_1a4d3ee152727c2221f314c9d2b5283aaf" kindref="member">platform_semaphore_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interrupt<sp/>semaphore<sp/>cleaned<sp/>up<sp/>for<sp/>GPIO%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classBaseGpio_1ae1bd179f793ec92b56b56bf6ea386546" kindref="member">pin_</ref>));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STATISTICS<sp/>AND<sp/>DIAGNOSTICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1a13f0f2bb08bdf3201b380bd6ad7aa0ae" kindref="member">EspGpio::GetStatistics</ref>(<ref refid="structhf__gpio__statistics__t" kindref="compound">hf_gpio_statistics_t</ref>&amp;<sp/>statistics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/>statistics<sp/>=<sp/>statistics_;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classEspGpio_1ab95d357d1b206b878cf3d960e06a269b" kindref="member">EspGpio::GetDiagnostics</ref>(<ref refid="structhf__gpio__diagnostics__t" kindref="compound">hf_gpio_diagnostics_t</ref>&amp;<sp/>diagnostics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/>diagnostics<sp/>=<sp/>diagnostics_;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HF_MCU_FAMILY_ESP32</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/mcu/esp32/EspGpio.cpp"/>
  </compounddef>
</doxygen>
