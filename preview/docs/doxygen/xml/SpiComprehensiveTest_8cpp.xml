<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="SpiComprehensiveTest_8cpp" kind="file" language="C++">
    <compoundname>SpiComprehensiveTest.cpp</compoundname>
    <includes refid="BaseSpi_8h" local="yes">base/BaseSpi.h</includes>
    <includes refid="HardwareTypes_8h" local="yes">base/HardwareTypes.h</includes>
    <includes refid="EspSpi_8h" local="yes">mcu/esp32/EspSpi.h</includes>
    <includes refid="EspTypes__SPI_8h" local="yes">mcu/esp32/utils/EspTypes_SPI.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstring</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes refid="TestFramework_8h" local="yes">TestFramework.h</includes>
    <incdepgraph>
      <node id="1">
        <label>examples/esp32/main/SpiComprehensiveTest.cpp</label>
        <link refid="SpiComprehensiveTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>TestFramework.h</label>
        <link refid="TestFramework_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>BaseAdc.h</label>
        <link refid="BaseAdc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>BaseCan.h</label>
        <link refid="BaseCan_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>BaseI2c.h</label>
        <link refid="BaseI2c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>BasePio.h</label>
        <link refid="BasePio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../../../base/BasePwm.h</label>
        <link refid="BasePwm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>base/BaseSpi.h</label>
        <link refid="BaseSpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>BaseUart.h</label>
        <link refid="BaseUart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>mcu/esp32/EspGpio.h</label>
        <link refid="EspGpio_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mcu/esp32/EspSpi.h</label>
        <link refid="EspSpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/EspTypes.h</label>
        <link refid="EspTypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>EspTypes_ADC.h</label>
        <link refid="EspTypes__ADC_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>EspTypes_CAN.h</label>
        <link refid="EspTypes__CAN_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>EspTypes_GPIO.h</label>
        <link refid="EspTypes__GPIO_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>EspTypes_I2C.h</label>
        <link refid="EspTypes__I2C_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>EspTypes_PIO.h</label>
        <link refid="EspTypes__PIO_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>EspTypes_PWM.h</label>
        <link refid="EspTypes__PWM_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>EspTypes_SPI.h</label>
        <link refid="EspTypes__SPI_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>EspTypes_Timer.h</label>
        <link refid="EspTypes__Timer_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>EspTypes_UART.h</label>
        <link refid="EspTypes__UART_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="9">
        <label>RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cstring</label>
      </node>
      <node id="47">
        <label>driver/gpio.h</label>
      </node>
      <node id="28">
        <label>driver/i2c.h</label>
      </node>
      <node id="41">
        <label>driver/spi_common.h</label>
      </node>
      <node id="34">
        <label>driver/spi_master.h</label>
      </node>
      <node id="19">
        <label>esp_adc/adc_continuous.h</label>
      </node>
      <node id="20">
        <label>esp_adc/adc_oneshot.h</label>
      </node>
      <node id="48">
        <label>esp_attr.h</label>
      </node>
      <node id="42">
        <label>esp_log.h</label>
      </node>
      <node id="36">
        <label>esp_timer.h</label>
      </node>
      <node id="11">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="45">
        <label>freertos/queue.h</label>
      </node>
      <node id="12">
        <label>freertos/semphr.h</label>
      </node>
      <node id="13">
        <label>freertos/task.h</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
      <node id="49">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;SPI_Test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="36" column="19" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" prot="public" static="yes" mutable="no">
        <type><ref refid="structTestResults" kindref="compound">TestResults</ref></type>
        <definition>TestResults g_test_results</definition>
        <argsstring></argsstring>
        <name>g_test_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="37" column="20" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_CORE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_CORE_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="45" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a04c9d1eb1ef2d8bc31b56d0b85c9e688" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_TRANSFER_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_TRANSFER_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="47" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_PERFORMANCE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_PERFORMANCE_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="48" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_ADVANCED_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_ADVANCED_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="50" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a607ec39049dad2c67f0ab145e0311397" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_STRESS_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_STRESS_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="51" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1abbea0bdd201e394717a3fb30738a46ef" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_ESPIDF_DIRECT_TEST</definition>
        <argsstring></argsstring>
        <name>ENABLE_ESPIDF_DIRECT_TEST</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="55" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a599cf934f90fad6831ef96a59415ed01" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_ESPIDF_WRAPPER_REPLICA</definition>
        <argsstring></argsstring>
        <name>ENABLE_ESPIDF_WRAPPER_REPLICA</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="56" column="23" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_MOSI_PIN</definition>
        <argsstring></argsstring>
        <name>TEST_MOSI_PIN</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="59" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_MISO_PIN</definition>
        <argsstring></argsstring>
        <name>TEST_MISO_PIN</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="60" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_SCLK_PIN</definition>
        <argsstring></argsstring>
        <name>TEST_SCLK_PIN</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="61" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a3635d488ac95d68d6ff8e8c350e5fe8e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_CS_PIN</definition>
        <argsstring></argsstring>
        <name>TEST_CS_PIN</name>
        <initializer>= 21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="62" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_CS_PIN_1</definition>
        <argsstring></argsstring>
        <name>TEST_CS_PIN_1</name>
        <initializer>= 21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="63" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a8d72fc46df06b6dd132480ea837ac118" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_CS_PIN_2</definition>
        <argsstring></argsstring>
        <name>TEST_CS_PIN_2</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="64" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1ad4651719ae76f9d084215632bbb94c7a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>constexpr hf_pin_num_t TEST_CS_PIN_3</definition>
        <argsstring></argsstring>
        <name>TEST_CS_PIN_3</name>
        <initializer>= 19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="65" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a213ce791c3dc5e1f014f0e3ed6e0df1f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref></type>
        <definition>constexpr hf_host_id_t SPI_HOST_NUM</definition>
        <argsstring></argsstring>
        <name>SPI_HOST_NUM</name>
        <initializer>=
    static_cast&lt;<ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref>&gt;(SPI2_HOST)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="66" column="31" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a80d5d134d67ac979bad56872e4398634" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t SLOW_SPEED</definition>
        <argsstring></argsstring>
        <name>SLOW_SPEED</name>
        <initializer>= 1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="68" column="27" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MEDIUM_SPEED</definition>
        <argsstring></argsstring>
        <name>MEDIUM_SPEED</name>
        <initializer>= 10000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="69" column="27" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t FAST_SPEED</definition>
        <argsstring></argsstring>
        <name>FAST_SPEED</name>
        <initializer>= 40000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="70" column="27" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="SpiComprehensiveTest_8cpp_1afa188c739acc893274a3716abad053f9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MAX_SPEED</definition>
        <argsstring></argsstring>
        <name>MAX_SPEED</name>
        <initializer>= 80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="71" column="27" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1aeb79c2de56bb56adbc032d6100f8bcbc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_bus_initialization</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_bus_initialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="105" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="105" bodyend="150" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a00ddd4fea56ad4a711bee99e9f563af6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_bus_deinitialization</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_bus_deinitialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="152" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="152" bodyend="196" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a5203411411b241d41304821b604ddc5c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_configuration_validation</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_configuration_validation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="198" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="198" bodyend="239" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1af7993d8dccd16ab962cdb871667994d6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_device_creation</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_device_creation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="241" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="241" bodyend="316" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1abf51ed02ec7a137a67b26a6203831a6e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_device_management</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_device_management</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="318" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="318" bodyend="393" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a84f4ee60f44353e5cd9dfa90030aeed1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_transfer_basic</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_transfer_basic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="395" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="395" bodyend="458" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a7be50e16294c7d39ae0c426be6aff263" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_transfer_modes</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_transfer_modes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="460" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="460" bodyend="513" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a92b637114373ac09a5e09f347fcfdb22" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_transfer_sizes</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_transfer_sizes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="515" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="515" bodyend="580" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a353f5355a1bf348502af18264f6a4b5c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_dma_operations</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_dma_operations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="582" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="582" bodyend="677" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1aed7f3cfbd21ace33126489f7037ff7e4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_clock_speeds</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_clock_speeds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="679" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="679" bodyend="742" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a664e8b7c03fb0553c8240bd6c2521d34" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_multi_device_operations</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_multi_device_operations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="744" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="744" bodyend="803" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a1bd0b0aeb87ff9482977086f1a4f434f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_error_handling</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_error_handling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="805" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="805" bodyend="856" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1aa70bae674d96448d63a52c4c1a8947ae" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_timeout_handling</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_timeout_handling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="858" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="858" bodyend="918" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a03c6d2ca5d7f305faf0c67aaa6ebf04c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_esp_specific_features</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_esp_specific_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="920" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="920" bodyend="977" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="87" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1af34def94a4a1667cb92db3900739aecc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_iomux_optimization</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_iomux_optimization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="979" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="979" bodyend="1074" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a8c7ecce600476c4fd3452ee6f181e4c7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_thread_safety</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_thread_safety</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1076" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1076" bodyend="1125" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="89" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a6361fec9e99d15942af50e9ce794b212" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_performance_benchmarks</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_performance_benchmarks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1127" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1127" bodyend="1197" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1ae4222c65c3cd5c863fae89d220a0192b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_edge_cases</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_edge_cases</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1199" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1199" bodyend="1261" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a034a2809c638b7bb1608952dedbdfbbd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_bus_acquisition</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_bus_acquisition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1263" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1263" bodyend="1319" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a43b879b0e8daf09bce2167c4153fb2c6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_power_management</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_power_management</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1321" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1321" bodyend="1342" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="93" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref></type>
        <definition>hf_spi_bus_config_t create_test_bus_config</definition>
        <argsstring>(uint32_t speed=MEDIUM_SPEED, bool use_dma=true, spi_host_device_t host=SPI2_HOST) noexcept</argsstring>
        <name>create_test_bus_config</name>
        <param>
          <type>uint32_t</type>
          <declname>speed</declname>
          <defval><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>use_dma</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>spi_host_device_t</type>
          <declname>host</declname>
          <defval>SPI2_HOST</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1739" column="21" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1739" bodyend="1751" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="96" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a38630200c226d53b8f417678637eaa49" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool verify_transfer_data</definition>
        <argsstring>(const uint8_t *tx_data, const uint8_t *rx_data, size_t length) noexcept</argsstring>
        <name>verify_transfer_data</name>
        <param>
          <type>const uint8_t *</type>
          <declname>tx_data</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>rx_data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1753" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1753" bodyend="1763" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void generate_test_pattern</definition>
        <argsstring>(uint8_t *buffer, size_t length, uint8_t seed=0xAA) noexcept</argsstring>
        <name>generate_test_pattern</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>seed</declname>
          <defval>0xAA</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1765" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1765" bodyend="1780" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1ada6c632e3f46f0ef637bc24fb8a679ff" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void generate_sequential_pattern</definition>
        <argsstring>(uint8_t *buffer, size_t length, uint8_t start_value=0x01) noexcept</argsstring>
        <name>generate_sequential_pattern</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>start_value</declname>
          <defval>0x01</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1783" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1783" bodyend="1790" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1abb04d0f4cee46941021957d90f9e90fa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void generate_alternating_pattern</definition>
        <argsstring>(uint8_t *buffer, size_t length, uint8_t value1=0x55, uint8_t value2=0xAA) noexcept</argsstring>
        <name>generate_alternating_pattern</name>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value1</declname>
          <defval>0x55</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value2</declname>
          <defval>0xAA</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1792" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1792" bodyend="1800" declfile="examples/esp32/main/SpiComprehensiveTest.cpp" declline="102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a6ca98160b857cc12a2b284b69c74fe32" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_espidf_direct_api</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_espidf_direct_api</name>
        <briefdescription>
<para>Test SPI using ESP-IDF API directly (bypassing our wrapper) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
<simplesect kind="note"><para>This test runs FIRST to verify ESP-IDF SPI driver functionality </para>
</simplesect>
<simplesect kind="note"><para>Uses identical configuration and test pattern as C++ wrapper replica test </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1354" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1354" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a67ae5b95806f2e4bbb1f5d26ff68811d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_spi_espidf_wrapper_replica</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_spi_espidf_wrapper_replica</name>
        <briefdescription>
<para>Test SPI using <ref refid="classEspSpiBus" kindref="compound">EspSpiBus</ref> wrapper (replicating ESP-IDF direct test) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
<simplesect kind="note"><para>This test runs SECOND to compare <ref refid="classEspSpiBus" kindref="compound">EspSpiBus</ref> wrapper with ESP-IDF direct API </para>
</simplesect>
<simplesect kind="note"><para>Uses identical configuration and test pattern as ESP-IDF direct test </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1554" column="6" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1554" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="SpiComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void app_main</definition>
        <argsstring>(void)</argsstring>
        <name>app_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/SpiComprehensiveTest.cpp" line="1802" column="17" bodyfile="examples/esp32/main/SpiComprehensiveTest.cpp" bodystart="1802" bodyend="1906"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Comprehensive SPI testing suite for ESP32-C6 DevKit-M-1 (noexcept) </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains comprehensive testing for the ESP SPI implementation including:<itemizedlist>
<listitem><para>Bus initialization and configuration validation</para>
</listitem><listitem><para>Device creation and management</para>
</listitem><listitem><para>Data transfer operations (full-duplex, half-duplex, various modes)</para>
</listitem><listitem><para>DMA operations and performance testing</para>
</listitem><listitem><para>Error handling and recovery</para>
</listitem><listitem><para>Multi-device scenarios with different configurations</para>
</listitem><listitem><para>ESP-specific features (clock sources, IOMUX, advanced timing)</para>
</listitem><listitem><para>Thread safety verification</para>
</listitem><listitem><para>Performance benchmarking and timing tests</para>
</listitem><listitem><para>Edge cases and fault injection</para>
</listitem><listitem><para>SPI modes (0-3) and various transfer sizes</para>
</listitem></itemizedlist>
</para>
<para>All functions are noexcept - no exception handling used.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BaseSpi_8h" kindref="compound">base/BaseSpi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HardwareTypes_8h" kindref="compound">base/HardwareTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspSpi_8h" kindref="compound">mcu/esp32/EspSpi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspTypes__SPI_8h" kindref="compound">mcu/esp32/utils/EspTypes_SPI.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TestFramework_8h" kindref="compound">TestFramework.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SPI_Test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structTestResults" kindref="compound">TestResults</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>SECTION<sp/>CONFIGURATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable/disable<sp/>specific<sp/>test<sp/>categories<sp/>by<sp/>setting<sp/>to<sp/>true<sp/>or<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>SPI<sp/>functionality<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Bus<sp/>initialization,<sp/>configuration,<sp/>device<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a04c9d1eb1ef2d8bc31b56d0b85c9e688" kindref="member">ENABLE_TRANSFER_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>transfers,<sp/>modes,<sp/>sizes,<sp/>DMA<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Clock<sp/>speeds,<sp/>multi-device,<sp/>performance<sp/>benchmarks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" kindref="member">ENABLE_ADVANCED_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>ESP-specific<sp/>features,<sp/>IOMUX,<sp/>thread<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a607ec39049dad2c67f0ab145e0311397" kindref="member">ENABLE_STRESS_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>handling,<sp/>timeouts,<sp/>edge<sp/>cases,<sp/>power<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NEW:<sp/>Pure<sp/>ESP-IDF<sp/>vs<sp/>C++<sp/>Wrapper<sp/>comparison<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abbea0bdd201e394717a3fb30738a46ef" kindref="member">ENABLE_ESPIDF_DIRECT_TEST</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pure<sp/>ESP-IDF<sp/>SPI<sp/>test<sp/>(FIRST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a599cf934f90fad6831ef96a59415ed01" kindref="member">ENABLE_ESPIDF_WRAPPER_REPLICA</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>C++<sp/>wrapper<sp/>replica<sp/>test<sp/>(SECOND)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>configuration<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1a3635d488ac95d68d6ff8e8c350e5fe8e" kindref="member">TEST_CS_PIN</ref><sp/>=<sp/>21;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>CS_PIN_1<sp/>for<sp/>the<sp/>comparison<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref><sp/>=<sp/>21;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1a8d72fc46df06b6dd132480ea837ac118" kindref="member">TEST_CS_PIN_2</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1ad4651719ae76f9d084215632bbb94c7a" kindref="member">TEST_CS_PIN_3</ref><sp/>=<sp/>19;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1a213ce791c3dc5e1f014f0e3ed6e0df1f" kindref="member">SPI_HOST_NUM</ref><sp/>=</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(SPI2_HOST);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>only<sp/>has<sp/>SPI2_HOST<sp/>(value<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="SpiComprehensiveTest_8cpp_1a80d5d134d67ac979bad56872e4398634" kindref="member">SLOW_SPEED</ref><sp/>=<sp/>1000000;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref><sp/>=<sp/>10000000;<sp/></highlight><highlight class="comment">//<sp/>10MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref><sp/>=<sp/>40000000;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>40MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="SpiComprehensiveTest_8cpp_1afa188c739acc893274a3716abad053f9" kindref="member">MAX_SPEED</ref><sp/>=<sp/>80000000;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>80MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aeb79c2de56bb56adbc032d6100f8bcbc" kindref="member">test_spi_bus_initialization</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a00ddd4fea56ad4a711bee99e9f563af6" kindref="member">test_spi_bus_deinitialization</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a5203411411b241d41304821b604ddc5c" kindref="member">test_spi_configuration_validation</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1af7993d8dccd16ab962cdb871667994d6" kindref="member">test_spi_device_creation</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abf51ed02ec7a137a67b26a6203831a6e" kindref="member">test_spi_device_management</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a84f4ee60f44353e5cd9dfa90030aeed1" kindref="member">test_spi_transfer_basic</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a7be50e16294c7d39ae0c426be6aff263" kindref="member">test_spi_transfer_modes</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a92b637114373ac09a5e09f347fcfdb22" kindref="member">test_spi_transfer_sizes</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a353f5355a1bf348502af18264f6a4b5c" kindref="member">test_spi_dma_operations</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aed7f3cfbd21ace33126489f7037ff7e4" kindref="member">test_spi_clock_speeds</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a664e8b7c03fb0553c8240bd6c2521d34" kindref="member">test_spi_multi_device_operations</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a1bd0b0aeb87ff9482977086f1a4f434f" kindref="member">test_spi_error_handling</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aa70bae674d96448d63a52c4c1a8947ae" kindref="member">test_spi_timeout_handling</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a03c6d2ca5d7f305faf0c67aaa6ebf04c" kindref="member">test_spi_esp_specific_features</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1af34def94a4a1667cb92db3900739aecc" kindref="member">test_spi_iomux_optimization</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a8c7ecce600476c4fd3452ee6f181e4c7" kindref="member">test_spi_thread_safety</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a6361fec9e99d15942af50e9ce794b212" kindref="member">test_spi_performance_benchmarks</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1ae4222c65c3cd5c863fae89d220a0192b" kindref="member">test_spi_edge_cases</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a034a2809c638b7bb1608952dedbdfbbd" kindref="member">test_spi_bus_acquisition</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a43b879b0e8daf09bce2167c4153fb2c6" kindref="member">test_spi_power_management</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(uint32_t<sp/>speed<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_dma<sp/>=<sp/>true,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_host_device_t<sp/>host<sp/>=<sp/>SPI2_HOST)<sp/>noexcept;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a38630200c226d53b8f417678637eaa49" kindref="member">verify_transfer_data</ref>(const<sp/>uint8_t*<sp/>tx_data,<sp/>const<sp/>uint8_t*<sp/>rx_data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/>noexcept;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint8_t<sp/>seed<sp/>=<sp/>0xAA)<sp/>noexcept;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1ada6c632e3f46f0ef637bc24fb8a679ff" kindref="member">generate_sequential_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>start_value<sp/>=<sp/>0x01)<sp/>noexcept;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abb04d0f4cee46941021957d90f9e90fa" kindref="member">generate_alternating_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint8_t<sp/>value1<sp/>=<sp/>0x55,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>value2<sp/>=<sp/>0xAA)<sp/>noexcept;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aeb79c2de56bb56adbc032d6100f8bcbc" kindref="member">test_spi_bus_initialization</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>1:<sp/>Basic<sp/>initialization<sp/>with<sp/>DMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI2_HOST;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Auto<sp/>DMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>bus<sp/>with<sp/>DMA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>2:<sp/>Verify<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>config<sp/>=<sp/>test_bus-&gt;GetConfig();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.mosi_pin<sp/>!=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref><sp/>||<sp/>config.miso_pin<sp/>!=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Configuration<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3:<sp/>Double<sp/>initialization<sp/>should<sp/>succeed<sp/>(idempotent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>initialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>test_bus-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>4:<sp/>Initialization<sp/>without<sp/>DMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0xFF;<sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>DMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus_no_dma<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus_no_dma-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>bus<sp/>without<sp/>DMA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Bus<sp/>initialization<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a00ddd4fea56ad4a711bee99e9f563af6" kindref="member">test_spi_bus_deinitialization</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>device<sp/>to<sp/>test<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>for<sp/>deinitialization<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>device<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_bus-&gt;GetDeviceCount()<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>deinitialization<sp/>(should<sp/>clean<sp/>up<sp/>devices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Deinitialize())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deinitialize<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>double<sp/>deinitialization<sp/>should<sp/>succeed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Deinitialize())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Second<sp/>deinitialization<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Bus<sp/>deinitialization<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a5203411411b241d41304821b604ddc5c" kindref="member">test_spi_configuration_validation</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>different<sp/>hosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>host<sp/>:<sp/>{SPI2_HOST})<sp/>{<sp/></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>typically<sp/>has<sp/>SPI2_HOST<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>host;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>with<sp/>host<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(host));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>test_bus-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>IOMUX<sp/>vs<sp/>GPIO<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_iomux<sp/>:<sp/>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">})<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI2_HOST;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/>use_iomux;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>with<sp/>IOMUX<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>use_iomux<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>test_bus-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Configuration<sp/>validation<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1af7993d8dccd16ab962cdb871667994d6" kindref="member">test_spi_device_creation</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>1:<sp/>Create<sp/>device<sp/>with<sp/>basic<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a4e2b6297c1a88eb94af71239c806d1b1" kindref="member">queue_size</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>basic<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>created<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device<sp/>(creates<sp/>ESP-IDF<sp/>device)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>basic<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>2:<sp/>Create<sp/>device<sp/>with<sp/>advanced<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>advanced_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a0505e57bd131d9456f67ad69d1913838" kindref="member">hf_spi_mode_t::HF_SPI_MODE_3</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8d72fc46df06b6dd132480ea837ac118" kindref="member">TEST_CS_PIN_2</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1a6d75b53df639f8885a6221d68037ac1e" kindref="member">command_bits</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1af95eb7849459ba72587a96fc39fadcbf" kindref="member">address_bits</ref><sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1ac245192b5300dbc44412bc94dfc8a952" kindref="member">dummy_bits</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structhf__spi__device__config__t_1a4e2b6297c1a88eb94af71239c806d1b1" kindref="member">queue_size</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>advanced_index<sp/>=<sp/>test_bus-&gt;CreateDevice(advanced_config);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(advanced_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>advanced<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>advanced<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>advanced_device<sp/>=<sp/>test_bus-&gt;GetDevice(advanced_index);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!advanced_device)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>advanced<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!advanced_device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>advanced<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3:<sp/>Verify<sp/>device<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_bus-&gt;GetDeviceCount()<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>mismatch:<sp/>expected<sp/>2,<sp/>got<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>test_bus-&gt;GetDeviceCount());</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Device<sp/>creation<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abf51ed02ec7a137a67b26a6203831a6e" kindref="member">test_spi_device_management</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>SPI2_HOST<sp/>for<sp/>device<sp/>management<sp/>test<sp/>to<sp/>isolate<sp/>from<sp/>other<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus<sp/>with<sp/>SPI2_HOST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>multiple<sp/>devices<sp/>with<sp/>different<sp/>speeds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>device_indices;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>speeds<sp/>=<sp/>{<ref refid="SpiComprehensiveTest_8cpp_1a80d5d134d67ac979bad56872e4398634" kindref="member">SLOW_SPEED</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>std::vector&lt;hf_pin_num_t&gt;<sp/>cs_pins<sp/>=<sp/>{<ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8d72fc46df06b6dd132480ea837ac118" kindref="member">TEST_CS_PIN_2</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1ad4651719ae76f9d084215632bbb94c7a" kindref="member">TEST_CS_PIN_3</ref>};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>speeds.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/>speeds[i];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776" kindref="member">hf_spi_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>%<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Test<sp/>different<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/>cs_pins[i];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(idx);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>device<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>device<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>device_indices.push_back(idx);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>all<sp/>devices<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_bus-&gt;GetDeviceCount()<sp/>!=<sp/>speeds.size())<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>device<sp/>removal<sp/>-<sp/>remove<sp/>middle<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remove_index<sp/>=<sp/>device_indices[1];<sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>middle<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;RemoveDevice(remove_index))<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>remove<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>device<sp/>count<sp/>after<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_bus-&gt;GetDeviceCount()<sp/>!=<sp/>speeds.size()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>count<sp/>after<sp/>removal<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>remaining<sp/>devices<sp/>are<sp/>still<sp/>accessible<sp/>using<sp/>their<sp/>current<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>removal,<sp/>indices<sp/>shift,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>check<sp/>the<sp/>new<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_0<sp/>=<sp/>test_bus-&gt;GetDevice(0);<sp/></highlight><highlight class="comment">//<sp/>First<sp/>device<sp/>is<sp/>now<sp/>at<sp/>index<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_1<sp/>=<sp/>test_bus-&gt;GetDevice(1);<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>device<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_0<sp/>||<sp/>!device_1)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Remaining<sp/>devices<sp/>not<sp/>accessible<sp/>after<sp/>removal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Device<sp/>management<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a84f4ee60f44353e5cd9dfa90030aeed1" kindref="member">test_spi_transfer_basic</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>SPI2_HOST<sp/>for<sp/>transfer<sp/>tests<sp/>to<sp/>isolate<sp/>from<sp/>other<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus<sp/>with<sp/>SPI2_HOST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>1:<sp/>Single<sp/>byte<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_byte<sp/>=<sp/>0xAA;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_byte<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;tx_byte,<sp/>&amp;rx_byte,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Single<sp/>byte<sp/>transfer<sp/>result:<sp/>%s<sp/>(TX:<sp/>0x%02X,<sp/>RX:<sp/>0x%02X)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),<sp/>tx_byte,<sp/>rx_byte);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>2:<sp/>Multi-byte<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_data[]<sp/>=<sp/>{0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data),<sp/>0);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Multi-byte<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3:<sp/>Write-only<sp/>transfer<sp/>(use<sp/>different<sp/>pattern)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>uint8_t<sp/>write_only_data[]<sp/>=<sp/>{0x55,<sp/>0xAA,<sp/>0x55,<sp/>0xAA,<sp/>0x55};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(write_only_data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(write_only_data),<sp/>0);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Write-only<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>4:<sp/>Read-only<sp/>transfer<sp/>(clear<sp/>RX<sp/>buffer<sp/>first)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>std::memset(rx_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_data));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rx_data),<sp/>0);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Read-only<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Basic<sp/>transfer<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a7be50e16294c7d39ae0c426be6aff263" kindref="member">test_spi_transfer_modes</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>SPI2_HOST<sp/>for<sp/>transfer<sp/>tests<sp/>to<sp/>isolate<sp/>from<sp/>other<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus<sp/>with<sp/>SPI2_HOST&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>all<sp/>SPI<sp/>modes<sp/>(0-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>0;<sp/>mode<sp/>&lt;<sp/>4;<sp/>++mode)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776" kindref="member">hf_spi_mode_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mode);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>for<sp/>mode<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>device<sp/>for<sp/>mode<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>device<sp/>for<sp/>mode<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>transfer<sp/>with<sp/>this<sp/>mode<sp/>(use<sp/>different<sp/>pattern<sp/>for<sp/>each<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_data[]<sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x12<sp/>+<sp/>mode),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x34<sp/>+<sp/>mode),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x56<sp/>+<sp/>mode),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x78<sp/>+<sp/>mode)};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data),<sp/>0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/>%d<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>mode,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>device<sp/>for<sp/>next<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>test_bus-&gt;RemoveDevice(device_index);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Transfer<sp/>mode<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a92b637114373ac09a5e09f347fcfdb22" kindref="member">test_spi_transfer_sizes</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>various<sp/>transfer<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>test_sizes<sp/>=<sp/>{1,<sp/>4,<sp/>16,<sp/>64,<sp/>256,<sp/>512};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>:<sp/>test_sizes)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(size);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(size);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>distinctive<sp/>test<sp/>pattern<sp/>for<sp/>each<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1ada6c632e3f46f0ef637bc24fb8a679ff" kindref="member">generate_sequential_pattern</ref>(tx_buffer.get(),<sp/>size,<sp/>0x10);<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>at<sp/>0x10<sp/>for<sp/>small<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;=<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1abb04d0f4cee46941021957d90f9e90fa" kindref="member">generate_alternating_pattern</ref>(tx_buffer.get(),<sp/>size,<sp/>0x55,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xAA);<sp/></highlight><highlight class="comment">//<sp/>Alternating<sp/>pattern<sp/>for<sp/>medium<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(tx_buffer.get(),<sp/>size,<sp/>0x01);<sp/></highlight><highlight class="comment">//<sp/>Sequential<sp/>pattern<sp/>for<sp/>large<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memset(rx_buffer.get(),<sp/>0,<sp/>size);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>size,<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>size<sp/>%zu<sp/>bytes:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>size,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>loopback<sp/>testing<sp/>(if<sp/>MOSI<sp/>and<sp/>MISO<sp/>are<sp/>connected),<sp/>verify<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>normal<sp/>operation,<sp/>this<sp/>would<sp/>depend<sp/>on<sp/>the<sp/>connected<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Transfer<sp/>size<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a353f5355a1bf348502af18264f6a4b5c" kindref="member">test_spi_dma_operations</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>DMA<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config_dma<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus_dma<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config_dma);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus_dma-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>DMA-enabled<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>device<sp/>for<sp/>DMA<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus_dma-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>DMA<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_dma<sp/>=<sp/>test_bus_dma-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_dma)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>DMA<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>DMA<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_dma-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>DMA<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>large<sp/>transfer<sp/>that<sp/>should<sp/>use<sp/>DMA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dma_test_size<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(dma_test_size);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(dma_test_size);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>distinctive<sp/>pattern<sp/>for<sp/>DMA<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1abb04d0f4cee46941021957d90f9e90fa" kindref="member">generate_alternating_pattern</ref>(tx_buffer.get(),<sp/>dma_test_size,<sp/>0x55,<sp/>0xAA);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>std::memset(rx_buffer.get(),<sp/>0,<sp/>dma_test_size);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device_dma-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>dma_test_size,<sp/>0);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>uint64_t<sp/>dma_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DMA<sp/>transfer<sp/>%zu<sp/>bytes:<sp/>%s<sp/>(time:<sp/>%llu<sp/>μs)&quot;</highlight><highlight class="normal">,<sp/>dma_test_size,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),<sp/>dma_time);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>test_bus_dma-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>with<sp/>non-DMA<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config_no_dma<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus_no_dma<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config_no_dma);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus_no_dma-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>non-DMA<sp/>test<sp/>bus<sp/>for<sp/>comparison&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>DMA<sp/>operation<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>device_index<sp/>=<sp/>test_bus_no_dma-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_no_dma<sp/>=<sp/>test_bus_no_dma-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_no_dma)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>non-DMA<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_no_dma-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>non-DMA<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_bus_no_dma-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>DMA<sp/>operation<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>device_no_dma-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>dma_test_size,<sp/>0);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>no_dma_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Non-DMA<sp/>transfer<sp/>%zu<sp/>bytes:<sp/>%s<sp/>(time:<sp/>%llu<sp/>μs)&quot;</highlight><highlight class="normal">,<sp/>dma_test_size,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),<sp/>no_dma_time);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dma_time<sp/>&lt;<sp/>no_dma_time)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DMA<sp/>performance<sp/>improvement:<sp/>%.1f%%&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(no_dma_time<sp/>-<sp/>dma_time)<sp/>/<sp/>no_dma_time)<sp/>*<sp/>100.0f);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>test_bus_no_dma-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>DMA<sp/>operation<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aed7f3cfbd21ace33126489f7037ff7e4" kindref="member">test_spi_clock_speeds</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>test_speeds<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a80d5d134d67ac979bad56872e4398634" kindref="member">SLOW_SPEED</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="comment">//<sp/>10MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>40MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1afa188c739acc893274a3716abad053f9" kindref="member">MAX_SPEED</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>80MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>speed<sp/>:<sp/>test_speeds)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(speed,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus<sp/>with<sp/>speed<sp/>%lu<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>speed);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>device<sp/>with<sp/>this<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/>speed;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>with<sp/>speed<sp/>%lu<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>speed);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_bus-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspSpiDevice" kindref="compound">EspSpiDevice</ref>*<sp/>esp_device<sp/>=<sp/>test_bus-&gt;GetEspDevice(device_index);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(esp_device)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>actual_freq;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>esp_device-&gt;<ref refid="classEspSpiDevice_1afe4b0f88a3ae65ec19ea1757d44b6bf0" kindref="member">GetActualClockFrequency</ref>(actual_freq);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Speed<sp/>%lu<sp/>Hz:<sp/>actual<sp/>frequency<sp/>%lu<sp/>Hz<sp/>(result:<sp/>%s)&quot;</highlight><highlight class="normal">,<sp/>speed,<sp/>actual_freq,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>transfer<sp/>at<sp/>this<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{0xAA,<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>device<sp/>with<sp/>speed<sp/>%lu<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>speed);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>0);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>at<sp/>%lu<sp/>Hz:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>speed,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>test_bus-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>happens<sp/>automatically<sp/>via<sp/>RAII<sp/>(unique_ptr<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>tested<sp/>clock<sp/>speed:<sp/>%lu<sp/>Hz&quot;</highlight><highlight class="normal">,<sp/>speed);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Clock<sp/>speed<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a664e8b7c03fb0553c8240bd6c2521d34" kindref="member">test_spi_multi_device_operations</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>multiple<sp/>devices<sp/>with<sp/>different<sp/>configurations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>std::vector&lt;BaseSpi*&gt;<sp/>devices;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>std::vector&lt;hf_pin_num_t&gt;<sp/>cs_pins<sp/>=<sp/>{<ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8d72fc46df06b6dd132480ea837ac118" kindref="member">TEST_CS_PIN_2</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1ad4651719ae76f9d084215632bbb94c7a" kindref="member">TEST_CS_PIN_3</ref>};</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>speeds<sp/>=<sp/>{<ref refid="SpiComprehensiveTest_8cpp_1a80d5d134d67ac979bad56872e4398634" kindref="member">SLOW_SPEED</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>};</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>std::vector&lt;hf_spi_mode_t&gt;<sp/>modes<sp/>=<sp/>{<ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>,<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776aeb3e177949ecb0ac90d4f90d79be42d4" kindref="member">hf_spi_mode_t::HF_SPI_MODE_1</ref>,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776acaf75767d2ee3869029819d284f2148d" kindref="member">hf_spi_mode_t::HF_SPI_MODE_2</ref>};</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cs_pins.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/>speeds[i];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/>modes[i];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/>cs_pins[i];</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a4e2b6297c1a88eb94af71239c806d1b1" kindref="member">queue_size</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>device<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>devices.push_back(device);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>%zu<sp/>devices<sp/>on<sp/>the<sp/>bus&quot;</highlight><highlight class="normal">,<sp/>devices.size());</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>sequential<sp/>operations<sp/>on<sp/>different<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>devices.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0xA0<sp/>+<sp/>i),<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>devices[i]-&gt;Transfer(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>0);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>%zu<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>i,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>delay<sp/>between<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Multi-device<sp/>operations<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a1bd0b0aeb87ff9482977086f1a4f434f" kindref="member">test_spi_error_handling</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>invalid<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>uint8_t<sp/>test_data<sp/>=<sp/>0xAA;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>null<sp/>pointer<sp/>with<sp/>non-zero<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;test_data,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>with<sp/>null<sp/>TX<sp/>pointer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;test_data,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>with<sp/>null<sp/>RX<sp/>pointer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>zero<sp/>length<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;test_data,<sp/>&amp;test_data,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Zero<sp/>length<sp/>transfer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>both<sp/>null<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Both<sp/>null<sp/>pointers<sp/>transfer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Error<sp/>handling<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1aa70bae674d96448d63a52c4c1a8947ae" kindref="member">test_spi_timeout_handling</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>transfers<sp/>with<sp/>different<sp/>timeout<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{0xAA,<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>short<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>100);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>uint64_t<sp/>duration_ms<sp/>=<sp/>(end_time<sp/>-<sp/>start_time)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Short<sp/>timeout<sp/>test:<sp/>%s<sp/>(took<sp/>%llu<sp/>ms)&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration_ms);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>very<sp/>short<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>1);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>duration_ms<sp/>=<sp/>(end_time<sp/>-<sp/>start_time)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Very<sp/>short<sp/>timeout<sp/>test:<sp/>%s<sp/>(took<sp/>%llu<sp/>ms)&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration_ms);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Timeout<sp/>handling<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a03c6d2ca5d7f305faf0c67aaa6ebf04c" kindref="member">test_spi_esp_specific_features</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>different<sp/>clock<sp/>sources<sp/>(ESP32-C6<sp/>specific)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI2_HOST;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>bus<sp/>for<sp/>ESP<sp/>features<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>device<sp/>with<sp/>ESP-specific<sp/>configurations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a6d75b53df639f8885a6221d68037ac1e" kindref="member">command_bits</ref><sp/>=<sp/>8;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af95eb7849459ba72587a96fc39fadcbf" kindref="member">address_bits</ref><sp/>=<sp/>24;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1ac245192b5300dbc44412bc94dfc8a952" kindref="member">dummy_bits</ref><sp/>=<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dummy<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a2a20e5df64efa366a8d70073638f19f8" kindref="member">cs_ena_pretrans</ref><sp/>=<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>CS<sp/>setup<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a3b942a5ea356a4a69924c0b11c390d54" kindref="member">cs_ena_posttrans</ref><sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>CS<sp/>hold<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a44d47408b4e672d262e9f1f263a93f1f" kindref="member">input_delay_ns</ref><sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>delay<sp/>compensation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>ESP-specific<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>ESP-specific<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>ESP-specific<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>ESP-specific<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>transfer<sp/>with<sp/>command<sp/>and<sp/>address<sp/>phases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{0xAA,<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-specific<sp/>transfer<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ESP-specific<sp/>feature<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1af34def94a4a1667cb92db3900739aecc" kindref="member">test_spi_iomux_optimization</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>IOMUX<sp/>enabled<sp/>(for<sp/>maximum<sp/>performance)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config_iomux<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI2_HOST;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1afa188c739acc893274a3716abad053f9" kindref="member">MAX_SPEED</ref>;<sp/></highlight><highlight class="comment">//<sp/>High<sp/>speed<sp/>for<sp/>IOMUX<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>bus_config_iomux.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus_iomux<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config_iomux);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus_iomux-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>IOMUX<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>high-speed<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1afa188c739acc893274a3716abad053f9" kindref="member">MAX_SPEED</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus_iomux-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>IOMUX<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_iomux<sp/>=<sp/>test_bus_iomux-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_iomux)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>IOMUX<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>IOMUX<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_iomux-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>IOMUX<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>test<sp/>with<sp/>IOMUX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>test_size<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(test_size);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(test_size);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(tx_buffer.get(),<sp/>test_size);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device_iomux-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>test_size,<sp/>0);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>uint64_t<sp/>iomux_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;IOMUX<sp/>transfer<sp/>%zu<sp/>bytes:<sp/>%s<sp/>(time:<sp/>%llu<sp/>μs)&quot;</highlight><highlight class="normal">,<sp/>test_size,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),<sp/>iomux_time);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>test_bus_iomux-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>with<sp/>GPIO<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config_gpio<sp/>=<sp/>bus_config_iomux;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>bus_config_gpio.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>bus_config_gpio.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Lower<sp/>speed<sp/>for<sp/>GPIO<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus_gpio<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config_gpio);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_bus_gpio-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>device_index<sp/>=<sp/>test_bus_gpio-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device_gpio<sp/>=<sp/>test_bus_gpio-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_gpio)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>GPIO<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device_gpio-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>GPIO<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>this<sp/>test<sp/>but<sp/>continue<sp/>with<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>device_gpio-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>test_size,<sp/>0);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>gpio_time<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>matrix<sp/>transfer<sp/>%zu<sp/>bytes:<sp/>%s<sp/>(time:<sp/>%llu<sp/>μs)&quot;</highlight><highlight class="normal">,<sp/>test_size,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data(),<sp/>gpio_time);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iomux_time<sp/>&lt;<sp/>gpio_time)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;IOMUX<sp/>performance<sp/>improvement:<sp/>%.1f%%&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(gpio_time<sp/>-<sp/>iomux_time)<sp/>/<sp/>gpio_time)<sp/>*<sp/>100.0f);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>else<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>test_bus_gpio-&gt;Deinitialize();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>IOMUX<sp/>optimization<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a8c7ecce600476c4fd3452ee6f181e4c7" kindref="member">test_spi_thread_safety</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>device<sp/>for<sp/>thread<sp/>safety<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>device<sp/>for<sp/>thread<sp/>safety<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>device<sp/>for<sp/>thread<sp/>safety<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>multiple<sp/>rapid<sp/>operations<sp/>(simulating<sp/>concurrent<sp/>access)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{0xAA,<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>50);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref><sp/>&amp;&amp;<sp/>result<sp/>!=<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfae8228cf9abcd0e87d2f56af88f28857f" kindref="member">hf_spi_err_t::SPI_ERR_TRANSFER_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error<sp/>in<sp/>thread<sp/>safety<sp/>test:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Thread<sp/>safety<sp/>tests<sp/>passed<sp/>(basic<sp/>verification)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a6361fec9e99d15942af50e9ce794b212" kindref="member">test_spi_performance_benchmarks</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>high-performance<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae5907704a6db4c8568e5eb19dd61c3df" kindref="member">FAST_SPEED</ref>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>performance<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>performance<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>performance<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>performance<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Benchmark<sp/>different<sp/>transfer<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>benchmark_sizes<sp/>=<sp/>{64,<sp/>256,<sp/>1024,<sp/>4096};</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>:<sp/>benchmark_sizes)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(size);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(size);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(tx_buffer.get(),<sp/>size);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warm-up<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>size,<sp/>0);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Benchmark<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_transfers<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>total_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_transfers;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_buffer.get(),<sp/>rx_buffer.get(),<sp/>size,<sp/>0);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_time<sp/>+=<sp/>(end_time<sp/>-<sp/>start_time);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>avg_time_us<sp/>=<sp/>total_time<sp/>/<sp/>num_transfers;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>throughput_mbps<sp/>=<sp/>(size<sp/>*<sp/>8.0)<sp/>/<sp/>avg_time_us;<sp/></highlight><highlight class="comment">//<sp/>Mbps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>%zu<sp/>bytes:<sp/>avg<sp/>time<sp/>%llu<sp/>μs,<sp/>throughput<sp/>%.2f<sp/>Mbps&quot;</highlight><highlight class="normal">,<sp/>size,<sp/>avg_time_us,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throughput_mbps);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Performance<sp/>benchmark<sp/>tests<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1ae4222c65c3cd5c863fae89d220a0192b" kindref="member">test_spi_edge_cases</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>maximum<sp/>transfer<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>edge<sp/>case<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>edge<sp/>case<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>edge<sp/>case<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>edge<sp/>case<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>maximum<sp/>transfer<sp/>size<sp/>(implementation<sp/>dependent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_transfer_size<sp/>=<sp/>4092;<sp/></highlight><highlight class="comment">//<sp/>ESP32<sp/>typical<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>large_tx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(max_transfer_size);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>large_rx_buffer<sp/>=<sp/>std::make_unique&lt;uint8_t[]&gt;(max_transfer_size);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(large_tx_buffer.get(),<sp/>max_transfer_size);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(large_tx_buffer.get(),<sp/>large_rx_buffer.get(),<sp/>max_transfer_size,<sp/>0);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>transfer<sp/>size<sp/>(%zu<sp/>bytes):<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>max_transfer_size,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>very<sp/>small<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>uint8_t<sp/>single_byte<sp/>=<sp/>0xAA;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;single_byte,<sp/>&amp;single_byte,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Single<sp/>byte<sp/>transfer:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>rapid<sp/>successive<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;data,<sp/>&amp;data,<sp/>1,<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>Short<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Rapid<sp/>successive<sp/>transfers<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Edge<sp/>case<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a034a2809c638b7bb1608952dedbdfbbd" kindref="member">test_spi_bus_acquisition</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bus_config<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>SPI2_HOST);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bus<sp/>as<sp/>unique_ptr<sp/>directly<sp/>in<sp/>test<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>test<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>test<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa2f7cb180d1ab776d98298784e058ab9" kindref="member">TEST_CS_PIN_1</ref>;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>test<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiDevice" kindref="compound">EspSpiDevice</ref>*<sp/>esp_device<sp/>=<sp/>test_bus-&gt;GetEspDevice(device_index);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!esp_device)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>ESP<sp/>device<sp/>for<sp/>bus<sp/>acquisition<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>ESP<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!esp_device-&gt;<ref refid="classEspSpiDevice_1ae61fd5adb61b7e68e080aad9173a6708" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>ESP<sp/>device<sp/>for<sp/>bus<sp/>acquisition<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>bus<sp/>acquisition<sp/>and<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>esp_device-&gt;<ref refid="classEspSpiDevice_1a71bd19ff10847fcfb6fa5c1eb06e123b" kindref="member">AcquireBus</ref>(1000);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Bus<sp/>acquisition<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>operations<sp/>while<sp/>holding<sp/>the<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>test_data[]<sp/>=<sp/>{0xAA,<sp/>0x55,<sp/>0xFF,<sp/>0x00};</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_device-&gt;<ref refid="classEspSpiDevice_1ac7432fd2630032d20f8d2f8388f6e1a5" kindref="member">Transfer</ref>(test_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_data),<sp/>0);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>the<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>esp_device-&gt;<ref refid="classEspSpiDevice_1a8852888daf8fbff32a929144c4735228" kindref="member">ReleaseBus</ref>();</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Bus<sp/>release<sp/>result:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Bus<sp/>acquisition<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a43b879b0e8daf09bce2167c4153fb2c6" kindref="member">test_spi_power_management</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>with<sp/>power<sp/>management<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI2_HOST;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8df7c7bf250655d1e15c0cf86ca4cc4e" kindref="member">MEDIUM_SPEED</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a1a89b70d19c0f6aa437a27ce9b4dd98b" kindref="member">timeout_ms</ref><sp/>=<sp/>2000;<sp/></highlight><highlight class="comment">//<sp/>Extended<sp/>timeout<sp/>for<sp/>power<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>bus<sp/>with<sp/>power<sp/>management&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>tested<sp/>power<sp/>management<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Power<sp/>management<sp/>tests<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PURE<sp/>ESP-IDF<sp/>SPI<sp/>TEST<sp/>(FIRST)<sp/>-<sp/>COMPARISON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a6ca98160b857cc12a2b284b69c74fe32" kindref="member">test_spi_espidf_direct_api</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>SPI<sp/>using<sp/>ESP-IDF<sp/>API<sp/>directly<sp/>(bypassing<sp/>our<sp/>wrapper)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>test<sp/>runs<sp/>FIRST<sp/>to<sp/>verify<sp/>ESP-IDF<sp/>SPI<sp/>driver<sp/>functionality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>this<sp/>test<sp/>fails,<sp/>the<sp/>issue<sp/>is<sp/>with<sp/>ESP-IDF<sp/>itself,<sp/>not<sp/>our<sp/>wrapper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>SPI<sp/>configuration<sp/>constants<sp/>(matching<sp/>the<sp/>working<sp/>example)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>SPI_MASTER_MOSI_IO<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>SPI_MASTER_MISO_IO<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>SPI_MASTER_SCLK_IO<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>gpio_num_t<sp/>SPI_MASTER_CS_IO<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">gpio_num_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="SpiComprehensiveTest_8cpp_1a3635d488ac95d68d6ff8e8c350e5fe8e" kindref="member">TEST_CS_PIN</ref>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>spi_host_device_t<sp/>SPI_MASTER_HOST<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_host_device_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="SpiComprehensiveTest_8cpp_1a213ce791c3dc5e1f014f0e3ed6e0df1f" kindref="member">SPI_HOST_NUM</ref>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SPI_MASTER_FREQ_HZ<sp/>=<sp/>10000000;<sp/></highlight><highlight class="comment">//<sp/>10MHz<sp/>for<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SPI_MASTER_TIMEOUT_MS<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF<sp/>Config:<sp/>MOSI=GPIO%d,<sp/>MISO=GPIO%d,<sp/>SCLK=GPIO%d,<sp/>CS=GPIO%d,<sp/>Host=%d,<sp/>Freq=%lu<sp/>Hz&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_MASTER_MOSI_IO,<sp/>SPI_MASTER_MISO_IO,<sp/>SPI_MASTER_SCLK_IO,<sp/>SPI_MASTER_CS_IO,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI_MASTER_HOST,<sp/>SPI_MASTER_FREQ_HZ);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Initialize<sp/>SPI<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>1:<sp/>Initializing<sp/>SPI<sp/>bus...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>spi_bus_config_t<sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>bus_config.mosi_io_num<sp/>=<sp/>SPI_MASTER_MOSI_IO;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>bus_config.miso_io_num<sp/>=<sp/>SPI_MASTER_MISO_IO;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>bus_config.sclk_io_num<sp/>=<sp/>SPI_MASTER_SCLK_IO;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>bus_config.quadwp_io_num<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>bus_config.quadhd_io_num<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>bus_config.max_transfer_sz<sp/>=<sp/>4092;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>bus_config.flags<sp/>=<sp/>SPICOMMON_BUSFLAG_MASTER;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_bus_initialize(SPI_MASTER_HOST,<sp/>&amp;bus_config,<sp/>SPI_DMA_CH_AUTO);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>bus:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>SPI<sp/>bus<sp/>initialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Create<sp/>SPI<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>2:<sp/>Creating<sp/>SPI<sp/>device...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>spi_device_interface_config_t<sp/>dev_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>dev_config.clock_speed_hz<sp/>=<sp/>SPI_MASTER_FREQ_HZ;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>dev_config.mode<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>mode<sp/>0<sp/>(CPOL=0,<sp/>CPHA=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>dev_config.spics_io_num<sp/>=<sp/>SPI_MASTER_CS_IO;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>dev_config.queue_size<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>dev_config.command_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>dev_config.address_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>dev_config.dummy_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>dev_config.duty_cycle_pos<sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>dev_config.cs_ena_pretrans<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>dev_config.cs_ena_posttrans<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>dev_config.flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/>dev_config.input_delay_ns<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>dev_config.pre_cb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/>dev_config.post_cb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>spi_device_handle_t<sp/>dev_handle<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>spi_bus_add_device(SPI_MASTER_HOST,<sp/>&amp;dev_config,<sp/>&amp;dev_handle);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Failed<sp/>to<sp/>add<sp/>SPI<sp/>device:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_bus_free(SPI_MASTER_HOST);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>SPI<sp/>device<sp/>created<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>Extended<sp/>SPI<sp/>testing<sp/>loop<sp/>with<sp/>sufficient<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>3:<sp/>Starting<sp/>extended<sp/>SPI<sp/>testing<sp/>loop<sp/>(10<sp/>seconds)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>test_duration<sp/>=<sp/>pdMS_TO_TICKS(10000);<sp/></highlight><highlight class="comment">//<sp/>10<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>loop_delay<sp/>=<sp/>pdMS_TO_TICKS(500);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>500ms<sp/>between<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>TickType_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>uint32_t<sp/>operation_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>uint32_t<sp/>successful_operations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>uint32_t<sp/>failed_operations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Test<sp/>loop<sp/>will<sp/>run<sp/>for<sp/>10<sp/>seconds<sp/>with<sp/>500ms<sp/>delays<sp/>between<sp/>operations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>This<sp/>provides<sp/>sufficient<sp/>time<sp/>to<sp/>thoroughly<sp/>test<sp/>SPI<sp/>functionality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((xTaskGetTickCount()<sp/>-<sp/>start_time)<sp/>&lt;<sp/>test_duration)<sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>operation_count++;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Operation<sp/>%u<sp/>-<sp/>Testing<sp/>SPI<sp/>operations...&quot;</highlight><highlight class="normal">,<sp/>operation_count);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3a:<sp/>Single<sp/>byte<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_byte<sp/>=<sp/>0xAA;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_byte<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_transaction_t<sp/>trans<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.length<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>8<sp/>bits<sp/>=<sp/>1<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.tx_buffer<sp/>=<sp/>&amp;tx_byte;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.rx_buffer<sp/>=<sp/>&amp;rx_byte;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>spi_device_transmit(dev_handle,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Single<sp/>byte<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Single<sp/>byte<sp/>transfer<sp/>%u<sp/>successful:<sp/>TX=0x%02X,<sp/>RX=0x%02X&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count,<sp/>tx_byte,<sp/>rx_byte);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3b:<sp/>Multi-byte<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_data[]<sp/>=<sp/>{0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05};</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data)<sp/>*<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.tx_buffer<sp/>=<sp/>tx_data;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.rx_buffer<sp/>=<sp/>rx_data;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>spi_device_transmit(dev_handle,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Multi-byte<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Multi-byte<sp/>transfer<sp/>%u<sp/>successful:<sp/>%zu<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data));</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>TX:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X]&quot;</highlight><highlight class="normal">,<sp/>tx_data[0],<sp/>tx_data[1],</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_data[2],<sp/>tx_data[3],<sp/>tx_data[4]);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>RX:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X]&quot;</highlight><highlight class="normal">,<sp/>rx_data[0],<sp/>rx_data[1],</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data[2],<sp/>rx_data[3],<sp/>rx_data[4]);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>3c:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>(16<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_seq[16];</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_seq[16];</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tx_seq[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x10<sp/>+<sp/>i);<sp/></highlight><highlight class="comment">//<sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_seq)<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.tx_buffer<sp/>=<sp/>tx_seq;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>trans.rx_buffer<sp/>=<sp/>rx_seq;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>spi_device_transmit(dev_handle,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>%u<sp/>successful:<sp/>%zu<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_seq));</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>TX<sp/>pattern:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X...]&quot;</highlight><highlight class="normal">,<sp/>tx_seq[0],</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_seq[1],<sp/>tx_seq[2],<sp/>tx_seq[3]);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Operation<sp/>%u<sp/>completed.<sp/>Success:<sp/>%u,<sp/>Failed:<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations,<sp/>failed_operations);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delay<sp/>between<sp/>operations<sp/>to<sp/>prevent<sp/>overwhelming<sp/>the<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(loop_delay);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Extended<sp/>testing<sp/>loop<sp/>completed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Total<sp/>operations:<sp/>%u,<sp/>Successful:<sp/>%u,<sp/>Failed:<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations,<sp/>failed_operations);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Success<sp/>rate:<sp/>%.1f%%&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)successful_operations<sp/>/<sp/>operation_count<sp/>*<sp/>100.0f);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>4:<sp/>Cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>4:<sp/>Cleaning<sp/>up<sp/>ESP-IDF<sp/>SPI<sp/>resources...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>spi_bus_remove_device(dev_handle);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Failed<sp/>to<sp/>remove<sp/>SPI<sp/>device:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>SPI<sp/>device<sp/>removed<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>spi_bus_free(SPI_MASTER_HOST);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>Failed<sp/>to<sp/>free<sp/>SPI<sp/>bus:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF:<sp/>SPI<sp/>bus<sp/>freed<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF<sp/>Direct<sp/>SPI<sp/>API<sp/>test<sp/>completed<sp/>successfully!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>confirms<sp/>that<sp/>the<sp/>ESP-IDF<sp/>SPI<sp/>driver<sp/>is<sp/>working<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Any<sp/>issues<sp/>in<sp/>our<sp/>wrapper<sp/>are<sp/>not<sp/>related<sp/>to<sp/>ESP-IDF<sp/>itself&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>test<sp/>ran<sp/>for<sp/>10<sp/>seconds<sp/>with<sp/>%u<sp/>operations,<sp/>proving<sp/>SPI<sp/>stability&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>WRAPPER<sp/>REPLICA<sp/>TEST<sp/>-<sp/>COMPARISON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a67ae5b95806f2e4bbb1f5d26ff68811d" kindref="member">test_spi_espidf_wrapper_replica</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>SPI<sp/>using<sp/>EspSpiBus<sp/>wrapper<sp/>(replicating<sp/>ESP-IDF<sp/>direct<sp/>test)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>test<sp/>runs<sp/>SECOND<sp/>to<sp/>compare<sp/>wrapper<sp/>implementation<sp/>with<sp/>ESP-IDF<sp/>direct<sp/>API&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>this<sp/>test<sp/>fails,<sp/>the<sp/>issue<sp/>is<sp/>with<sp/>our<sp/>wrapper<sp/>implementation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>identical<sp/>configuration<sp/>as<sp/>ESP-IDF<sp/>direct<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>SPI_MASTER_MOSI_IO<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>SPI_MASTER_MISO_IO<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>SPI_MASTER_SCLK_IO<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/>SPI_MASTER_CS_IO<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a3635d488ac95d68d6ff8e8c350e5fe8e" kindref="member">TEST_CS_PIN</ref>;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref><sp/>SPI_MASTER_HOST<sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a213ce791c3dc5e1f014f0e3ed6e0df1f" kindref="member">SPI_HOST_NUM</ref>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SPI_MASTER_FREQ_HZ<sp/>=<sp/>10000000;<sp/></highlight><highlight class="comment">//<sp/>10MHz<sp/>for<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>SPI_MASTER_TIMEOUT_MS<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/>ESP_LOGI(</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus<sp/>Config:<sp/>MOSI=GPIO%d,<sp/>MISO=GPIO%d,<sp/>SCLK=GPIO%d,<sp/>CS=GPIO%d,<sp/>Host=%d,<sp/>Freq=%lu<sp/>Hz&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI_MASTER_MOSI_IO,<sp/>SPI_MASTER_MISO_IO,<sp/>SPI_MASTER_SCLK_IO,<sp/>SPI_MASTER_CS_IO,<sp/>SPI_MASTER_HOST,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI_MASTER_FREQ_HZ);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Create<sp/>EspSpiBus<sp/>configuration<sp/>(matching<sp/>ESP-IDF<sp/>direct<sp/>test)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>1:<sp/>Creating<sp/>EspSpiBus<sp/>configuration...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/>SPI_MASTER_HOST;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/>SPI_MASTER_MOSI_IO;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/>SPI_MASTER_MISO_IO;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/>SPI_MASTER_SCLK_IO;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/>SPI_MASTER_FREQ_HZ;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a1a89b70d19c0f6aa437a27ce9b4dd98b" kindref="member">timeout_ms</ref><sp/>=<sp/>SPI_MASTER_TIMEOUT_MS;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Create<sp/>and<sp/>initialize<sp/>EspSpiBus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>2:<sp/>Creating<sp/>and<sp/>initializing<sp/>EspSpiBus...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>test_bus<sp/>=<sp/>std::make_unique&lt;EspSpiBus&gt;(bus_config);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Failed<sp/>to<sp/>create<sp/>SPI<sp/>bus<sp/>instance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_bus-&gt;Initialize())<sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>SPI<sp/>bus<sp/>initialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>Create<sp/>SPI<sp/>device<sp/>configuration<sp/>(matching<sp/>ESP-IDF<sp/>direct<sp/>test)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>3:<sp/>Creating<sp/>SPI<sp/>device<sp/>configuration...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref><sp/>device_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref><sp/>=<sp/>SPI_MASTER_FREQ_HZ;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__SPI_8h_1aea114d5b636b95dfd58a30f6ad69b776a98c4a77095bf42997b31510181100360" kindref="member">hf_spi_mode_t::HF_SPI_MODE_0</ref>;<sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>mode<sp/>0<sp/>(CPOL=0,<sp/>CPHA=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref><sp/>=<sp/>SPI_MASTER_CS_IO;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a4e2b6297c1a88eb94af71239c806d1b1" kindref="member">queue_size</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a6d75b53df639f8885a6221d68037ac1e" kindref="member">command_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1af95eb7849459ba72587a96fc39fadcbf" kindref="member">address_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1ac245192b5300dbc44412bc94dfc8a952" kindref="member">dummy_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a02d8f3e893f9064d1454d3ec2f12ac7e" kindref="member">duty_cycle_pos</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a2a20e5df64efa366a8d70073638f19f8" kindref="member">cs_ena_pretrans</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a3b942a5ea356a4a69924c0b11c390d54" kindref="member">cs_ena_posttrans</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a040077484b67765d25fa936a47c4848c" kindref="member">flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a44d47408b4e672d262e9f1f263a93f1f" kindref="member">input_delay_ns</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1a14b1dd2e7f8dfd85c5c95207bdd0f5bd" kindref="member">pre_cb</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1aef5e3c25eff3b4ab346f894ec3c1556b" kindref="member">post_cb</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/>device_config.<ref refid="structhf__spi__device__config__t_1afb8e5f293876b8ebe47ee365ed3ddc31" kindref="member">user_ctx</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>4:<sp/>Add<sp/>device<sp/>to<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>4:<sp/>Adding<sp/>SPI<sp/>device<sp/>to<sp/>bus...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index<sp/>=<sp/>test_bus-&gt;CreateDevice(device_config);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Failed<sp/>to<sp/>add<sp/>SPI<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>SPI<sp/>device<sp/>created<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/>device<sp/>=<sp/>test_bus-&gt;GetDevice(device_index);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Failed<sp/>to<sp/>get<sp/>SPI<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>device<sp/>before<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device-&gt;<ref refid="classBaseSpi_1a0ee4d13f589e319c6fbb3d5bb6492784" kindref="member">Initialize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>5:<sp/>Extended<sp/>SPI<sp/>testing<sp/>loop<sp/>(matching<sp/>ESP-IDF<sp/>direct<sp/>test<sp/>exactly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>5:<sp/>Starting<sp/>extended<sp/>SPI<sp/>testing<sp/>loop<sp/>(10<sp/>seconds)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>test_duration<sp/>=<sp/>pdMS_TO_TICKS(10000);<sp/></highlight><highlight class="comment">//<sp/>10<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>loop_delay<sp/>=<sp/>pdMS_TO_TICKS(500);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>500ms<sp/>between<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>TickType_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>uint32_t<sp/>operation_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>uint32_t<sp/>successful_operations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>uint32_t<sp/>failed_operations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Test<sp/>loop<sp/>will<sp/>run<sp/>for<sp/>10<sp/>seconds<sp/>with<sp/>500ms<sp/>delays<sp/>between<sp/>operations&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>This<sp/>provides<sp/>sufficient<sp/>time<sp/>to<sp/>thoroughly<sp/>test<sp/>SPI<sp/>functionality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((xTaskGetTickCount()<sp/>-<sp/>start_time)<sp/>&lt;<sp/>test_duration)<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>operation_count++;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Operation<sp/>%u<sp/>-<sp/>Testing<sp/>SPI<sp/>operations...&quot;</highlight><highlight class="normal">,<sp/>operation_count);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>5a:<sp/>Single<sp/>byte<sp/>transfer<sp/>(matching<sp/>ESP-IDF<sp/>test<sp/>exactly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_byte<sp/>=<sp/>0xAA;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_byte<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(&amp;tx_byte,<sp/>&amp;rx_byte,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Single<sp/>byte<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Single<sp/>byte<sp/>transfer<sp/>%u<sp/>successful:<sp/>TX=0x%02X,<sp/>RX=0x%02X&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count,<sp/>tx_byte,<sp/>rx_byte);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>5b:<sp/>Multi-byte<sp/>transfer<sp/>(matching<sp/>ESP-IDF<sp/>test<sp/>exactly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_data[]<sp/>=<sp/>{0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05};</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_data[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_data,<sp/>rx_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data),<sp/>0);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Multi-byte<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Multi-byte<sp/>transfer<sp/>%u<sp/>successful:<sp/>%zu<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_data));</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>TX:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X]&quot;</highlight><highlight class="normal">,<sp/>tx_data[0],</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_data[1],<sp/>tx_data[2],<sp/>tx_data[3],<sp/>tx_data[4]);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>RX:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X]&quot;</highlight><highlight class="normal">,<sp/>rx_data[0],</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_data[1],<sp/>rx_data[2],<sp/>rx_data[3],<sp/>rx_data[4]);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>5c:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>(16<sp/>bytes,<sp/>matching<sp/>ESP-IDF<sp/>test<sp/>exactly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_seq[16];</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_seq[16];</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tx_seq[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0x10<sp/>+<sp/>i);<sp/></highlight><highlight class="comment">//<sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>device-&gt;<ref refid="classBaseSpi_1a7951cfcc329ab963764013ebe47288c0" kindref="member">Transfer</ref>(tx_seq,<sp/>rx_seq,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_seq),<sp/>0);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>%u<sp/>failed:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseSpi_8h_1a807273faede3a3df0c7059670316c816" kindref="member">HfSpiErrToString</ref>(result).data());</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>failed_operations++;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Sequential<sp/>pattern<sp/>transfer<sp/>%u<sp/>successful:<sp/>%zu<sp/>bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tx_seq));</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>TX<sp/>pattern:<sp/>[0x%02X,<sp/>0x%02X,<sp/>0x%02X,<sp/>0x%02X...]&quot;</highlight><highlight class="normal">,<sp/>tx_seq[0],</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_seq[1],<sp/>tx_seq[2],<sp/>tx_seq[3]);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations++;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Operation<sp/>%u<sp/>completed.<sp/>Success:<sp/>%u,<sp/>Failed:<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations,<sp/>failed_operations);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delay<sp/>between<sp/>operations<sp/>to<sp/>prevent<sp/>overwhelming<sp/>the<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(loop_delay);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Extended<sp/>testing<sp/>loop<sp/>completed!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Total<sp/>operations:<sp/>%u,<sp/>Successful:<sp/>%u,<sp/>Failed:<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>operation_count,</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>successful_operations,<sp/>failed_operations);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus:<sp/>Success<sp/>rate:<sp/>%.1f%%&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)successful_operations<sp/>/<sp/>operation_count<sp/>*<sp/>100.0f);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>6:<sp/>Cleanup<sp/>(automatic<sp/>via<sp/>RAII)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Step<sp/>6:<sp/>Cleaning<sp/>up<sp/>EspSpiBus<sp/>resources<sp/>(automatic<sp/>via<sp/>RAII)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiBus<sp/>Wrapper<sp/>Replica<sp/>test<sp/>completed<sp/>successfully!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>confirms<sp/>that<sp/>our<sp/>wrapper<sp/>implementation<sp/>is<sp/>working<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>test<sp/>ran<sp/>for<sp/>10<sp/>seconds<sp/>with<sp/>%u<sp/>operations,<sp/>proving<sp/>wrapper<sp/>stability&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operation_count);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>create<sp/>test<sp/>bus<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/><ref refid="SpiComprehensiveTest_8cpp_1acfd9bc27388a2c461e0bfbd6e1bfc4d6" kindref="member">create_test_bus_config</ref>(uint32_t<sp/>speed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_dma,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_host_device_t<sp/>host)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref><sp/>bus_config<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a0c4dd06fda8547384c78d1825c2f648c" kindref="member">TEST_MOSI_PIN</ref>;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7743735168a5d92cbdae713b3822100a" kindref="member">TEST_MISO_PIN</ref>;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref><sp/>=<sp/><ref refid="SpiComprehensiveTest_8cpp_1ac9f659cadc5903b57923bdedac9cbec8" kindref="member">TEST_SCLK_PIN</ref>;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a9ae8d2dd0a150205395ab179f14739a8" kindref="member">hf_host_id_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(host);<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>specified<sp/>host<sp/>for<sp/>isolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a6b4b995bf3583a1569714b655a4f46b7" kindref="member">clock_speed_hz</ref><sp/>=<sp/>speed;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>=<sp/>use_dma<sp/>?<sp/>0<sp/>:<sp/>0xFF;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>auto<sp/>DMA,<sp/>0xFF<sp/>=<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>bus_config.<ref refid="structhf__spi__bus__config__t_1a1a89b70d19c0f6aa437a27ce9b4dd98b" kindref="member">timeout_ms</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bus_config;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a38630200c226d53b8f417678637eaa49" kindref="member">verify_transfer_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>tx_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>rx_data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tx_data<sp/>||<sp/>!rx_data)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_data[i]<sp/>!=<sp/>rx_data[i])<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a52aee77997f28a3f6d61c28414586907" kindref="member">generate_test_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint8_t<sp/>seed)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>more<sp/>recognizable<sp/>pattern<sp/>for<sp/>debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>pattern<sp/>that&apos;s<sp/>easy<sp/>to<sp/>identify<sp/>on<sp/>logic<sp/>analyzer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pattern:<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>...,<sp/>0xFF,<sp/>then<sp/>repeat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((seed<sp/>+<sp/>i)<sp/>%<sp/>256);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>we<sp/>don&apos;t<sp/>have<sp/>0x00<sp/>which<sp/>might<sp/>be<sp/>interpreted<sp/>as<sp/>end<sp/>of<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[i]<sp/>==<sp/>0x00)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>0x01;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>distinctive<sp/>patterns<sp/>for<sp/>different<sp/>test<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1ada6c632e3f46f0ef637bc24fb8a679ff" kindref="member">generate_sequential_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint8_t<sp/>start_value)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(start_value<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1abb04d0f4cee46941021957d90f9e90fa" kindref="member">generate_alternating_pattern</ref>(uint8_t*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/>uint8_t<sp/>value1,</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>value2)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer)</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>?<sp/>value1<sp/>:<sp/>value2;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="SpiComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" kindref="member">app_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP32-C6<sp/>SPI<sp/>COMPREHENSIVE<sp/>TEST<sp/>SUITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HardFOC<sp/>Internal<sp/>Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>test<sp/>section<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a200bb35a3a48c625b9cb8d2511d6bd87" kindref="member">print_test_section_status</ref>(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW:<sp/>Run<sp/>ESP-IDF<sp/>vs<sp/>C++<sp/>Wrapper<sp/>comparison<sp/>tests<sp/>FIRST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1abbea0bdd201e394717a3fb30738a46ef" kindref="member">ENABLE_ESPIDF_DIRECT_TEST</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF<sp/>DIRECT<sp/>SPI<sp/>TEST<sp/>(FIRST)&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pure<sp/>ESP-IDF<sp/>SPI<sp/>test<sp/>to<sp/>verify<sp/>driver<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>ESP-IDF<sp/>Direct<sp/>SPI<sp/>API<sp/>test<sp/>(FIRST)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;espidf_direct_api&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a6ca98160b857cc12a2b284b69c74fe32" kindref="member">test_spi_espidf_direct_api</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>ESP-IDF<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a599cf934f90fad6831ef96a59415ed01" kindref="member">ENABLE_ESPIDF_WRAPPER_REPLICA</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP-IDF<sp/>WRAPPER<sp/>REPLICA<sp/>TEST<sp/>(SECOND)&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C++<sp/>wrapper<sp/>replica<sp/>test<sp/>to<sp/>compare<sp/>with<sp/>ESP-IDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>EspSpiBus<sp/>Wrapper<sp/>Replica<sp/>test<sp/>(SECOND)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;espidf_wrapper_replica&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a67ae5b95806f2e4bbb1f5d26ff68811d" kindref="member">test_spi_espidf_wrapper_replica</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>wrapper<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>SPI<sp/>tests<sp/>based<sp/>on<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>CORE<sp/>TESTS&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>functionality<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>core<sp/>SPI<sp/>functionality<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;bus_initialization&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1aeb79c2de56bb56adbc032d6100f8bcbc" kindref="member">test_spi_bus_initialization</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>core<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;bus_deinitialization&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a00ddd4fea56ad4a711bee99e9f563af6" kindref="member">test_spi_bus_deinitialization</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>deinit<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;configuration_validation&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a5203411411b241d41304821b604ddc5c" kindref="member">test_spi_configuration_validation</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>config<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;device_creation&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1af7993d8dccd16ab962cdb871667994d6" kindref="member">test_spi_device_creation</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>device<sp/>creation<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;device_management&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1abf51ed02ec7a137a67b26a6203831a6e" kindref="member">test_spi_device_management</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>device<sp/>management<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a04c9d1eb1ef2d8bc31b56d0b85c9e688" kindref="member">ENABLE_TRANSFER_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>TRANSFER<sp/>TESTS&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>operation<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>SPI<sp/>transfer<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;transfer_basic&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a84f4ee60f44353e5cd9dfa90030aeed1" kindref="member">test_spi_transfer_basic</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>basic<sp/>transfer<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;transfer_modes&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a7be50e16294c7d39ae0c426be6aff263" kindref="member">test_spi_transfer_modes</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>modes<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;transfer_sizes&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a92b637114373ac09a5e09f347fcfdb22" kindref="member">test_spi_transfer_sizes</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>sizes<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;dma_operations&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a353f5355a1bf348502af18264f6a4b5c" kindref="member">test_spi_dma_operations</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>DMA<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>PERFORMANCE<sp/>TESTS&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>and<sp/>multi-device<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>SPI<sp/>performance<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;clock_speeds&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1aed7f3cfbd21ace33126489f7037ff7e4" kindref="member">test_spi_clock_speeds</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>clock<sp/>speeds<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;multi_device_operations&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a664e8b7c03fb0553c8240bd6c2521d34" kindref="member">test_spi_multi_device_operations</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>multi-device<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;performance_benchmarks&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a6361fec9e99d15942af50e9ce794b212" kindref="member">test_spi_performance_benchmarks</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>performance<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" kindref="member">ENABLE_ADVANCED_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>ADVANCED<sp/>TESTS&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced<sp/>features<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>SPI<sp/>advanced<sp/>feature<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;esp_specific_features&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a03c6d2ca5d7f305faf0c67aaa6ebf04c" kindref="member">test_spi_esp_specific_features</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>ESP<sp/>features<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;iomux_optimization&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1af34def94a4a1667cb92db3900739aecc" kindref="member">test_spi_iomux_optimization</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>IOMUX<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;thread_safety&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a8c7ecce600476c4fd3452ee6f181e4c7" kindref="member">test_spi_thread_safety</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>thread<sp/>safety<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab72cc2ae0fb724218e81479185ab38c6" kindref="member">RUN_TEST_SECTION_IF_ENABLED_WITH_PATTERN</ref>(</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="SpiComprehensiveTest_8cpp_1a607ec39049dad2c67f0ab145e0311397" kindref="member">ENABLE_STRESS_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>STRESS<sp/>TESTS&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stress<sp/>and<sp/>error<sp/>handling<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>SPI<sp/>stress<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;error_handling&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a1bd0b0aeb87ff9482977086f1a4f434f" kindref="member">test_spi_error_handling</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>error<sp/>handling<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;timeout_handling&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1aa70bae674d96448d63a52c4c1a8947ae" kindref="member">test_spi_timeout_handling</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>timeout<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;edge_cases&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1ae4222c65c3cd5c863fae89d220a0192b" kindref="member">test_spi_edge_cases</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>edge<sp/>cases<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;bus_acquisition&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a034a2809c638b7bb1608952dedbdfbbd" kindref="member">test_spi_bus_acquisition</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>bus<sp/>acquisition<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;power_management&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a43b879b0e8daf09bce2167c4153fb2c6" kindref="member">test_spi_power_management</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a7bb80345e5681c19686df292fa897daf" kindref="member">flip_test_progress_indicator</ref>();<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>GPIO14<sp/>after<sp/>power<sp/>management<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab7e4c076755ecdf2ad6212cb8f6578ab" kindref="member">print_test_summary</ref>(<ref refid="SpiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI&quot;</highlight><highlight class="normal">,<sp/><ref refid="SpiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10000));</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="examples/esp32/main/SpiComprehensiveTest.cpp"/>
  </compounddef>
</doxygen>
