<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="EspSpi_8cpp" kind="file" language="C++">
    <compoundname>EspSpi.cpp</compoundname>
    <includes refid="EspSpi_8h" local="yes">EspSpi.h</includes>
    <includes refid="memory__utils_8h" local="yes">utils/memory_utils.h</includes>
    <includes local="no">cstring</includes>
    <includes local="yes">esp_err.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="yes">soc/spi_reg.h</includes>
    <incdepgraph>
      <node id="17">
        <label>BaseAdc.h</label>
        <link refid="BaseAdc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>BaseCan.h</label>
        <link refid="BaseCan_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>BaseI2c.h</label>
        <link refid="BaseI2c_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>BasePio.h</label>
        <link refid="BasePio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../../../base/BasePwm.h</label>
        <link refid="BasePwm_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>BaseSpi.h</label>
        <link refid="BaseSpi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>BaseUart.h</label>
        <link refid="BaseUart_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EspSpi.h</label>
        <link refid="EspSpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/EspTypes.h</label>
        <link refid="EspTypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>EspTypes_ADC.h</label>
        <link refid="EspTypes__ADC_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>EspTypes_CAN.h</label>
        <link refid="EspTypes__CAN_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>EspTypes_GPIO.h</label>
        <link refid="EspTypes__GPIO_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>EspTypes_I2C.h</label>
        <link refid="EspTypes__I2C_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>EspTypes_PIO.h</label>
        <link refid="EspTypes__PIO_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>EspTypes_PWM.h</label>
        <link refid="EspTypes__PWM_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>EspTypes_SPI.h</label>
        <link refid="EspTypes__SPI_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>EspTypes_Timer.h</label>
        <link refid="EspTypes__Timer_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>EspTypes_UART.h</label>
        <link refid="EspTypes__UART_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="9">
        <label>RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>utils/memory_utils.h</label>
        <link refid="memory__utils_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/mcu/esp32/EspSpi.cpp</label>
        <link refid="EspSpi_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cstring</label>
      </node>
      <node id="28">
        <label>driver/i2c.h</label>
      </node>
      <node id="41">
        <label>driver/spi_common.h</label>
      </node>
      <node id="34">
        <label>driver/spi_master.h</label>
      </node>
      <node id="19">
        <label>esp_adc/adc_continuous.h</label>
      </node>
      <node id="20">
        <label>esp_adc/adc_oneshot.h</label>
      </node>
      <node id="46">
        <label>esp_err.h</label>
      </node>
      <node id="42">
        <label>esp_log.h</label>
      </node>
      <node id="36">
        <label>esp_timer.h</label>
      </node>
      <node id="11">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="12">
        <label>freertos/semphr.h</label>
      </node>
      <node id="13">
        <label>freertos/task.h</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
      <node id="44">
        <label>new</label>
      </node>
      <node id="47">
        <label>soc/spi_reg.h</label>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="45">
        <label>utility</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="EspSpi_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;EspSpi&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspSpi.cpp" line="48" column="19" bodyfile="src/mcu/esp32/EspSpi.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of MCU-integrated SPI controller for ESP32C6 with ESP-IDF v5.5+ features. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides the implementation for SPI bus communication using the ESP32C6&apos;s built-in SPI peripheral with full ESP-IDF v5.5+ capabilities. The implementation supports:</para>
<para><itemizedlist>
<listitem><para>Full-duplex and half-duplex communication modes</para>
</listitem><listitem><para>DMA-accelerated transfers for high-performance applications</para>
</listitem><listitem><para>Multiple clock sources (APB, XTAL) for power optimization</para>
</listitem><listitem><para>IOMUX pins for maximum performance (up to 80MHz)</para>
</listitem><listitem><para>Advanced timing control with input delay compensation</para>
</listitem><listitem><para>Transaction queuing with interrupt and polling modes</para>
</listitem><listitem><para>Bus acquisition for exclusive device access</para>
</listitem><listitem><para>Comprehensive error handling and validation</para>
</listitem><listitem><para>Thread-safe operations with RTOS mutex protection</para>
</listitem><listitem><para>Small data optimization for transfers &lt;= 32 bits</para>
</listitem><listitem><para>Proper <ref refid="classBaseSpi" kindref="compound">BaseSpi</ref> class integration for portability</para>
</listitem></itemizedlist>
</para>
<para>The implementation closely follows ESP-IDF v5.5 SPI Master driver documentation: <ulink url="https://docs.espressif.com/projects/esp-idf/en/release-v5.5/esp32c6/api-reference/peripherals/spi_master.html">https://docs.espressif.com/projects/esp-idf/en/release-v5.5/esp32c6/api-reference/peripherals/spi_master.html</ulink></para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC</para>
</simplesect>
<simplesect kind="note"><para>Fully compliant with ESP-IDF v5.5 SPI Master driver API </para>
</simplesect>
<simplesect kind="note"><para>Optimized for ESP32C6 hardware capabilities </para>
</simplesect>
<simplesect kind="note"><para>Thread-safe for multi-device SPI bus management </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspSpi_8h" kindref="compound">EspSpi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__utils_8h" kindref="compound">utils/memory_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>additional<sp/>includes<sp/>for<sp/>ESP32C6<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_err.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>esp_err_to_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>portMAX_DELAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>pdMS_TO_TICKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;soc/spi_reg.h&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>SOC<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="EspSpi_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EspSpi&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//======================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP<sp/>SPI<sp/>BUS<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//======================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classEspSpiBus_1afe5fca7a6837b6274ffa885a927edb2f" kindref="member">EspSpiBus::EspSpiBus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref>&amp;<sp/>config)<sp/>noexcept</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>config_(config),<sp/>initialized_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classEspSpiBus_1aa6c27620fbe0b014e6c20ad95d06e5b4" kindref="member">EspSpiBus::~EspSpiBus</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiBus_1af1b10e1d4105c450fc0c20d0ef134ddb" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1a6bfcf437a03ca71293499558973ca750" kindref="member">EspSpiBus::Initialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiBus_1a9c42c64731d332892f30ecb2e262dd2d" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiBus_1a697d0f6da659676a7506145ebbec98f5" kindref="member">initialized_</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>spi_bus_config_t<sp/>bus_cfg<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>bus_cfg.mosi_io_num<sp/>=<sp/><ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a56f13363406cc28437c24c8745d835ed" kindref="member">mosi_pin</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>bus_cfg.miso_io_num<sp/>=<sp/><ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1aab37725899b984d697d2c4e1b20012a7" kindref="member">miso_pin</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>bus_cfg.sclk_io_num<sp/>=<sp/><ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a2447a1a31cf698aead3d668f59ffe162" kindref="member">sclk_pin</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>bus_cfg.quadwp_io_num<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>-1<sp/>unless<sp/>using<sp/>quad<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>bus_cfg.quadhd_io_num<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>-1<sp/>unless<sp/>using<sp/>quad<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP32C6<sp/>allows<sp/>larger<sp/>transfer<sp/>sizes<sp/>with<sp/>proper<sp/>DMA<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>bus_cfg.max_transfer_sz<sp/>=<sp/>(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>!=<sp/>0xFF)<sp/>?<sp/>4092<sp/>:<sp/>64;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enhanced<sp/>flags<sp/>based<sp/>on<sp/>ESP-IDF<sp/>v5.5+<sp/>capabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>bus_cfg.flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a30a9804cc4b3799a4207e669243135ab" kindref="member">use_iomux</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>bus_cfg.flags<sp/>|=<sp/>SPICOMMON_BUSFLAG_IOMUX_PINS;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>ESP32C6-specific<sp/>optimizations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>bus_cfg.flags<sp/>|=<sp/>SPICOMMON_BUSFLAG_MASTER;<sp/></highlight><highlight class="comment">//<sp/>Explicit<sp/>master<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>spi_host_device_t<sp/>host<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_host_device_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dma_chan<sp/>=<sp/>(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(SPI_DMA_DISABLED)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref><sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1a427b68fc1d80cb6358ddcf2f48505805" kindref="member">dma_channel</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>static_cast&lt;int&gt;(SPI_DMA_CH_AUTO));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_bus_initialize(host,<sp/>&amp;bus_cfg,<sp/>dma_chan);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(</highlight><highlight class="stringliteral">&quot;EspSpiBus&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>SPI<sp/>bus:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiBus_1a697d0f6da659676a7506145ebbec98f5" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1ac0f954dce3fa54452afc0d48b4542f33" kindref="member">EspSpiBus::IsInitialized</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiBus_1a9c42c64731d332892f30ecb2e262dd2d" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1a697d0f6da659676a7506145ebbec98f5" kindref="member">initialized_</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1af1b10e1d4105c450fc0c20d0ef134ddb" kindref="member">EspSpiBus::Deinitialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiBus_1a9c42c64731d332892f30ecb2e262dd2d" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspSpiBus_1a697d0f6da659676a7506145ebbec98f5" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Deinitializing<sp/>SPI<sp/>bus&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deinitialize<sp/>all<sp/>devices<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>device<sp/>:<sp/><ref refid="classEspSpiBus_1a4f89488fce018ca532e6753d6f864280" kindref="member">devices_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>&amp;&amp;<sp/>device-&gt;IsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>device-&gt;Deinitialize();<sp/></highlight><highlight class="comment">//<sp/>This<sp/>removes<sp/>from<sp/>ESP-IDF<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiBus_1a4f89488fce018ca532e6753d6f864280" kindref="member">devices_</ref>.clear();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>SPI<sp/>bus<sp/>from<sp/>ESP-IDF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>spi_host_device_t<sp/>host<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_host_device_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_bus_free(host);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>free<sp/>SPI<sp/>bus:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiBus_1a697d0f6da659676a7506145ebbec98f5" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SPI<sp/>bus<sp/>deinitialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1a53555ddb858bd9e9957d2faf30d9c19e" kindref="member">EspSpiBus::CreateDevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref>&amp;<sp/>device_config)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Bus<sp/>must<sp/>be<sp/>initialized<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>C++<sp/>wrapper<sp/>class<sp/>first<sp/>(no<sp/>ESP-IDF<sp/>device<sp/>yet)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>device<sp/>=<sp/><ref refid="namespacehf_1_1utils_1af69771ffbe64d79f38a652012d5d7a93" kindref="member">hf::utils::make_unique_nothrow&lt;EspSpiDevice&gt;</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>device_config);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!device)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspSpi_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>EspSpiDevice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>in<sp/>vector<sp/>(C++<sp/>wrapper<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>devices_.push_back(std::move(device));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/><ref refid="classEspSpiBus_1aa9cf3395ff959ca06d4955bbc64b5c6a" kindref="member">EspSpiBus::GetDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0<sp/>||<sp/>device_index<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>devices_[device_index].get();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>*<sp/><ref refid="classEspSpiBus_1aa9cf3395ff959ca06d4955bbc64b5c6a" kindref="member">EspSpiBus::GetDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0<sp/>||<sp/>device_index<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()))<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>devices_[device_index].get();</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="classEspSpiDevice" kindref="compound">EspSpiDevice</ref>*<sp/><ref refid="classEspSpiBus_1a474a4980339555fa7087c02c695069c5" kindref="member">EspSpiBus::GetEspDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0<sp/>||<sp/>device_index<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>devices_[device_index].get();</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice" kindref="compound">EspSpiDevice</ref>*<sp/><ref refid="classEspSpiBus_1a474a4980339555fa7087c02c695069c5" kindref="member">EspSpiBus::GetEspDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0<sp/>||<sp/>device_index<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>devices_[device_index].get();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">std::size_t<sp/><ref refid="classEspSpiBus_1af0ed4cee7a894357f16e6e6befc31755" kindref="member">EspSpiBus::GetDeviceCount</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiBus_1a9c42c64731d332892f30ecb2e262dd2d" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1a4f89488fce018ca532e6753d6f864280" kindref="member">devices_</ref>.size();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1aa7d4c40e6567f8cf67a280807d6f2095" kindref="member">EspSpiBus::RemoveDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device_index<sp/>&lt;<sp/>0<sp/>||<sp/>device_index<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(devices_.size()))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>device<sp/>(destructor<sp/>will<sp/>call<sp/>spi_bus_remove_device)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>devices_.erase(devices_.begin()<sp/>+<sp/>device_index);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__spi__bus__config__t" kindref="compound">hf_spi_bus_config_t</ref>&amp;<sp/><ref refid="classEspSpiBus_1a55e6ea75454e132acece8a337bc4b16d" kindref="member">EspSpiBus::GetConfig</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">spi_host_device_t<sp/><ref refid="classEspSpiBus_1a61699b15fb8f109b10084e824ec6f3df" kindref="member">EspSpiBus::GetHost</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_host_device_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiBus_1a066b8df253bffacf1e21d729850bf99e" kindref="member">config_</ref>.<ref refid="structhf__spi__bus__config__t_1ad5ae43f8e8ed48d17667740103caf5cf" kindref="member">host</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//======================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP<sp/>SPI<sp/>DEVICE<sp/>IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//======================================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="classEspSpiDevice_1a314ecda5e0dd7eae427ea031edb174d4" kindref="member">EspSpiDevice::EspSpiDevice</ref>(<ref refid="classEspSpiBus" kindref="compound">EspSpiBus</ref>*<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref>&amp;<sp/>config)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classBaseSpi" kindref="compound">BaseSpi</ref>(),<sp/>parent_bus_(parent),<sp/>handle_(nullptr),<sp/>config_(config),<sp/>initialized_(false)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Device<sp/>is<sp/>NOT<sp/>initialized<sp/>yet<sp/>-<sp/>no<sp/>ESP-IDF<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspSpi_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiDevice<sp/>created<sp/>(not<sp/>yet<sp/>initialized),<sp/>CS<sp/>pin<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>config.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="classEspSpiDevice_1a78fbd11aa22825ddcd1f58a43945aee5" kindref="member">EspSpiDevice::~EspSpiDevice</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspSpiDevice_1af45ba6122e82902c728d8c569362b87b" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice_1ae61fd5adb61b7e68e080aad9173a6708" kindref="member">EspSpiDevice::Initialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiDevice_1aa34f977ac3bb19d6319a4e3c1a12b138" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOW<sp/>create<sp/>the<sp/>ESP-IDF<sp/>device<sp/>and<sp/>add<sp/>to<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>spi_device_interface_config_t<sp/>dev_cfg<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>dev_cfg.clock_speed_hz<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a0a17d3f8f8475cc819d1ced9262a94f9" kindref="member">clock_speed_hz</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>dev_cfg.mode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a7f5737b1045c78fc5ed7d8f2b6c9c0cf" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>dev_cfg.spics_io_num<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1af85f2826210e7f6d834a654b92c32470" kindref="member">cs_pin</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>dev_cfg.queue_size<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a4e2b6297c1a88eb94af71239c806d1b1" kindref="member">queue_size</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>dev_cfg.command_bits<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a6d75b53df639f8885a6221d68037ac1e" kindref="member">command_bits</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>dev_cfg.address_bits<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1af95eb7849459ba72587a96fc39fadcbf" kindref="member">address_bits</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>dev_cfg.dummy_bits<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1ac245192b5300dbc44412bc94dfc8a952" kindref="member">dummy_bits</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>dev_cfg.duty_cycle_pos<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a02d8f3e893f9064d1454d3ec2f12ac7e" kindref="member">duty_cycle_pos</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>dev_cfg.cs_ena_pretrans<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a2a20e5df64efa366a8d70073638f19f8" kindref="member">cs_ena_pretrans</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>dev_cfg.cs_ena_posttrans<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a3b942a5ea356a4a69924c0b11c390d54" kindref="member">cs_ena_posttrans</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>dev_cfg.flags<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a040077484b67765d25fa936a47c4848c" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>dev_cfg.input_delay_ns<sp/>=<sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a44d47408b4e672d262e9f1f263a93f1f" kindref="member">input_delay_ns</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>callbacks<sp/>if<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a14b1dd2e7f8dfd85c5c95207bdd0f5bd" kindref="member">pre_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.pre_cb<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">transaction_cb_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a14b1dd2e7f8dfd85c5c95207bdd0f5bd" kindref="member">pre_cb</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aef5e3c25eff3b4ab346f894ec3c1556b" kindref="member">post_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.post_cb<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">transaction_cb_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aef5e3c25eff3b4ab346f894ec3c1556b" kindref="member">post_cb</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>clock<sp/>source<sp/>and<sp/>sampling<sp/>point<sp/>with<sp/>ESP32-C6<sp/>compatible<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>dev_cfg.clock_source<sp/>=<sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aea1017f02ac9424ddaeeb926cb87ed87" kindref="member">clock_source</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_clock_source_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aea1017f02ac9424ddaeeb926cb87ed87" kindref="member">clock_source</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SPI_CLK_SRC_DEFAULT;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>only<sp/>supports<sp/>PHASE_0<sp/>sampling<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aad6fdd431b2279d736a773950b4d62d3" kindref="member">sampling_point</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.sample_point<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">spi_sampling_point_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1aad6fdd431b2279d736a773950b4d62d3" kindref="member">sampling_point</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev_cfg.sample_point<sp/>!=<sp/>SPI_SAMPLING_POINT_PHASE_0)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ESP32-C6<sp/>only<sp/>supports<sp/>PHASE_0<sp/>sampling<sp/>point,<sp/>using<sp/>default&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dev_cfg.sample_point<sp/>=<sp/>SPI_SAMPLING_POINT_PHASE_0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.sample_point<sp/>=<sp/>SPI_SAMPLING_POINT_PHASE_0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>ESP-IDF<sp/>specific<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a040077484b67765d25fa936a47c4848c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="EspTypes__SPI_8h_1a417099038e4036012c13c5520156bb03" kindref="member">HF_SPI_DEVICE_HALFDUPLEX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.flags<sp/>|=<sp/>SPI_DEVICE_HALFDUPLEX;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>.<ref refid="structhf__spi__device__config__t_1a040077484b67765d25fa936a47c4848c" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="EspTypes__SPI_8h_1a9f14895779f47631fd5c65086df77a79" kindref="member">HF_SPI_DEVICE_POSITIVE_CS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>dev_cfg.flags<sp/>|=<sp/>SPI_DEVICE_POSITIVE_CS;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>device<sp/>to<sp/>ESP-IDF<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>spi_host_device_t<sp/>host<sp/>=<sp/><ref refid="classEspSpiDevice_1a79ef01539203d2b3d77a404d962750ff" kindref="member">parent_bus_</ref>-&gt;<ref refid="classEspSpiBus_1a61699b15fb8f109b10084e824ec6f3df" kindref="member">GetHost</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_bus_add_device(host,<sp/>&amp;dev_cfg,<sp/>&amp;<ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>SPI<sp/>device:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiDevice<sp/>initialized<sp/>successfully,<sp/>handle<sp/>%p&quot;</highlight><highlight class="normal">,<sp/><ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice_1a511a9f42ccbfb10d07f839ae907cac3c" kindref="member">EspSpiDevice::MarkAsDeinitialized</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>is<sp/>already<sp/>marked<sp/>as<sp/>deinitialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Marking<sp/>SPI<sp/>device<sp/>as<sp/>deinitialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice_1af45ba6122e82902c728d8c569362b87b" kindref="member">EspSpiDevice::Deinitialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspSpiDevice_1aa34f977ac3bb19d6319a4e3c1a12b138" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>from<sp/>ESP-IDF<sp/>bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_bus_remove_device(<ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>remove<sp/>SPI<sp/>device:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>esp_err_to_name(err));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspSpiDevice<sp/>deinitialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/><ref refid="classEspSpiDevice_1ac7432fd2630032d20f8d2f8388f6e1a5" kindref="member">EspSpiDevice::Transfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref>*<sp/>tx_data,<sp/><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref>*<sp/>rx_data,<sp/><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref><sp/>length,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>timeout_ms<sp/>parameter<sp/>is<sp/>reserved<sp/>for<sp/>future<sp/>use.<sp/>ESP-IDF<sp/>spi_device_transmit()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>the<sp/>queue_size<sp/>timeout<sp/>configured<sp/>during<sp/>device<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>(void)timeout_ms;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>parameter<sp/>warning<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfab9af989242716c13c20a6349577ef37e" kindref="member">hf_spi_err_t::SPI_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfad874554c43f09a6ef971d14da2ad71c3" kindref="member">hf_spi_err_t::SPI_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/><ref refid="EspTypes__SPI_8h_1a4dcadd5ff2f7805dcea910928df464a2" kindref="member">HF_SPI_MAX_TRANSFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfaa0218b73a163db17f65cf041fba397b2" kindref="member">hf_spi_err_t::SPI_ERR_TRANSFER_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tx_data<sp/>&amp;&amp;<sp/>!rx_data)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfabab77a9d5ead069cefbf10fd812cc44f" kindref="member">hf_spi_err_t::SPI_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>spi_transaction_t<sp/>trans<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>trans.length<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(length)<sp/>*<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>expects<sp/>bits,<sp/>not<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>trans.tx_buffer<sp/>=<sp/>tx_data;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>trans.rx_buffer<sp/>=<sp/>rx_data;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Use<sp/>small<sp/>data<sp/>optimization<sp/>for<sp/>transfers<sp/>&lt;=<sp/>32<sp/>bits<sp/>(4<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(length<sp/>&lt;=<sp/>4)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(tx_data)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>trans.flags<sp/>|=<sp/>SPI_TRANS_USE_TXDATA;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::memcpy(trans.tx_data,<sp/>tx_data,<sp/>length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>trans.tx_buffer<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(rx_data)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>trans.flags<sp/>|=<sp/>SPI_TRANS_USE_RXDATA;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>trans.rx_buffer<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_device_transmit(handle_,<sp/>&amp;trans);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>Copy<sp/>received<sp/>data<sp/>for<sp/>small<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(err<sp/>==<sp/>ESP_OK<sp/>&amp;&amp;<sp/>rx_data<sp/>&amp;&amp;<sp/>(trans.flags<sp/>&amp;<sp/>SPI_TRANS_USE_RXDATA))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::memcpy(rx_data,<sp/>trans.rx_data,<sp/>length);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enhanced<sp/>error<sp/>mapping<sp/>based<sp/>on<sp/>ESP-IDF<sp/>v5.5<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_OK:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfad874554c43f09a6ef971d14da2ad71c3" kindref="member">hf_spi_err_t::SPI_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfae8228cf9abcd0e87d2f56af88f28857f" kindref="member">hf_spi_err_t::SPI_ERR_TRANSFER_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NO_MEM:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa5a4b2652aab331ae525b45a2d8706470" kindref="member">hf_spi_err_t::SPI_ERR_OUT_OF_MEMORY</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_STATE:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa167cb34315884191f6a15612a1ed4b84" kindref="member">hf_spi_err_t::SPI_ERR_BUS_BUSY</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa0d7aa63d7340cc897199de50039bf319" kindref="member">hf_spi_err_t::SPI_ERR_TRANSFER_FAILED</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classEspSpiDevice_1a388f9afb603db8d9ddad17018ce2b547" kindref="member">EspSpiDevice::GetDeviceConfig</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">spi_device_handle_t<sp/><ref refid="classEspSpiDevice_1ade3c088859920ff4240eb70eee3bfcdb" kindref="member">EspSpiDevice::GetHandle</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__spi__device__config__t" kindref="compound">hf_spi_device_config_t</ref>&amp;<sp/><ref refid="classEspSpiDevice_1af0abe6968f3dbf158f05f972c19f93d6" kindref="member">EspSpiDevice::GetConfig</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspSpiDevice_1a178c4ca0df69e47b6930c09787d7295b" kindref="member">config_</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/><ref refid="classEspSpiDevice_1a71bd19ff10847fcfb6fa5c1eb06e123b" kindref="member">EspSpiDevice::AcquireBus</ref>(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfab9af989242716c13c20a6349577ef37e" kindref="member">hf_spi_err_t::SPI_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>TickType_t<sp/>ticks<sp/>=<sp/>(timeout_ms<sp/>==<sp/>0)<sp/>?<sp/>portMAX_DELAY<sp/>:<sp/>pdMS_TO_TICKS(timeout_ms);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_device_acquire_bus(handle_,<sp/>ticks);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_OK:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_TIMEOUT:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfaed201d5aa02367fed724a1051164b6a5" kindref="member">hf_spi_err_t::SPI_ERR_BUS_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfad874554c43f09a6ef971d14da2ad71c3" kindref="member">hf_spi_err_t::SPI_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa167cb34315884191f6a15612a1ed4b84" kindref="member">hf_spi_err_t::SPI_ERR_BUS_BUSY</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/><ref refid="classEspSpiDevice_1a8852888daf8fbff32a929144c4735228" kindref="member">EspSpiDevice::ReleaseBus</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classEspSpiDevice_1ad547b708efaac31e0f6dca17d76184e2" kindref="member">initialized_</ref>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfab9af989242716c13c20a6349577ef37e" kindref="member">hf_spi_err_t::SPI_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>spi_device_release_bus(<ref refid="classEspSpiDevice_1a600b28bd83ef66f3645f6ecb56315eb2" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377df" kindref="member">hf_spi_err_t</ref><sp/><ref refid="classEspSpiDevice_1afe4b0f88a3ae65ec19ea1757d44b6bf0" kindref="member">EspSpiDevice::GetActualClockFrequency</ref>(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref>&amp;<sp/>actual_freq_hz)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfab9af989242716c13c20a6349577ef37e" kindref="member">hf_spi_err_t::SPI_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_khz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>spi_device_get_actual_freq(handle_,<sp/>&amp;freq_khz);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_freq_hz<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(freq_khz<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa97ef02822fcfb84b0670dfa0e4f562f4" kindref="member">hf_spi_err_t::SPI_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseSpi_8h_1a349a53792ac48c02b7e7f2d8761377dfa53a4ac40d11c4f658f915b57aaf9f6e4" kindref="member">hf_spi_err_t::SPI_ERR_HARDWARE_FAULT</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/mcu/esp32/EspSpi.cpp"/>
  </compounddef>
</doxygen>
