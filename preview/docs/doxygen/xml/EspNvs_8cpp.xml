<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="EspNvs_8cpp" kind="file" language="C++">
    <compoundname>EspNvs.cpp</compoundname>
    <includes refid="EspNvs_8h" local="yes">EspNvs.h</includes>
    <includes local="no">cstring</includes>
    <includes local="yes">esp_err.h</includes>
    <includes local="yes">esp_log.h</includes>
    <includes local="yes">esp_timer.h</includes>
    <includes local="yes">nvs_flash.h</includes>
    <incdepgraph>
      <node id="3">
        <label>BaseNvs.h</label>
        <link refid="BaseNvs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EspNvs.h</label>
        <link refid="EspNvs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utils/EspTypes_NVS.h</label>
        <link refid="EspTypes__NVS_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="8">
        <label>RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/mcu/esp32/EspNvs.cpp</label>
        <link refid="EspNvs_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>atomic</label>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="17">
        <label>esp_err.h</label>
      </node>
      <node id="18">
        <label>esp_log.h</label>
      </node>
      <node id="19">
        <label>esp_timer.h</label>
      </node>
      <node id="10">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="11">
        <label>freertos/semphr.h</label>
      </node>
      <node id="12">
        <label>freertos/task.h</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="20">
        <label>nvs_flash.h</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;EspNvs&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="73" column="19" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1a56134ef9075eaf7b6622e1a2736697ab" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>constexpr hf_u32_t NVS_INIT_TIMEOUT_MS</definition>
        <argsstring></argsstring>
        <name>NVS_INIT_TIMEOUT_MS</name>
        <initializer>= 5000</initializer>
        <briefdescription>
<para>Initialization timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="76" column="27" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1a5067ec469e1472b8d9dcde905d307fca" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>constexpr hf_u32_t NVS_OPERATION_TIMEOUT_MS</definition>
        <argsstring></argsstring>
        <name>NVS_OPERATION_TIMEOUT_MS</name>
        <initializer>= 1000</initializer>
        <briefdescription>
<para>Single operation timeout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="77" column="27" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1a7fc5e67321118b83c625f7006a9fd270" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>constexpr hf_u32_t NVS_MAX_RETRY_ATTEMPTS</definition>
        <argsstring></argsstring>
        <name>NVS_MAX_RETRY_ATTEMPTS</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Maximum retry attempts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="78" column="27" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1af382ccbb36a465261a9e4abf140202a3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>constexpr hf_u32_t NVS_STATS_UPDATE_INTERVAL_MS</definition>
        <argsstring></argsstring>
        <name>NVS_STATS_UPDATE_INTERVAL_MS</name>
        <initializer>= 30000</initializer>
        <briefdescription>
<para>Statistics update interval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="79" column="27" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1a0d631767574cc8b140716c2ca3868db0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t NVS_MAX_KEY_LENGTH_ESP32</definition>
        <argsstring></argsstring>
        <name>NVS_MAX_KEY_LENGTH_ESP32</name>
        <initializer>= 15</initializer>
        <briefdescription>
<para>ESP32 NVS key length limit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="80" column="25" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1a831639f895a96f16a4c43cff3296b170" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t NVS_MAX_VALUE_SIZE_ESP32</definition>
        <argsstring></argsstring>
        <name>NVS_MAX_VALUE_SIZE_ESP32</name>
        <initializer>=
    4000</initializer>
        <briefdescription>
<para>ESP32 NVS value size limit (conservative) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="81" column="25" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspNvs_8cpp_1ad4289f5994cc5fb6d4b3d47c03978363" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t NVS_MAX_NAMESPACE_LENGTH_ESP32</definition>
        <argsstring></argsstring>
        <name>NVS_MAX_NAMESPACE_LENGTH_ESP32</name>
        <initializer>= 15</initializer>
        <briefdescription>
<para>ESP32 NVS namespace length limit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/mcu/esp32/EspNvs.cpp" line="83" column="25" bodyfile="src/mcu/esp32/EspNvs.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>World-class ESP32-C6 NVS implementation with ESP-IDF v5.5+ advanced features. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides a comprehensive, production-ready NVS (Non-Volatile Storage) implementation for the ESP32-C6 microcontroller using modern ESP-IDF v5.5+ APIs. The implementation leverages all advanced features including encryption support, enhanced error handling, statistics tracking, iterator support, and comprehensive security configurations.</para>
<para>Key Features Implemented:<itemizedlist>
<listitem><para>Modern ESP-IDF v5.5+ NVS API with full thread safety</para>
</listitem><listitem><para>ESP32-C6 HMAC-based encryption support for secure storage</para>
</listitem><listitem><para>Comprehensive error detection and mapping to HardFOC error codes</para>
</listitem><listitem><para>Advanced NVS features: iterators, statistics, partition management</para>
</listitem><listitem><para>Production-ready error handling with graceful degradation</para>
</listitem><listitem><para>Enhanced security with XTS encryption and key management</para>
</listitem><listitem><para>Namespace isolation and management</para>
</listitem><listitem><para>Performance optimization for high-frequency operations</para>
</listitem></itemizedlist>
</para>
<para>Security Features:<itemizedlist>
<listitem><para>HMAC-based encryption scheme (ESP32-C6 specific)</para>
</listitem><listitem><para>XTS encryption for data protection</para>
</listitem><listitem><para>Secure key generation and management</para>
</listitem><listitem><para>eFuse-based key storage for tamper resistance</para>
</listitem><listitem><para>Flash encryption compatibility</para>
</listitem></itemizedlist>
</para>
<para>Performance Optimizations:<itemizedlist>
<listitem><para>Efficient handle management with validation</para>
</listitem><listitem><para>Optimized error code mapping</para>
</listitem><listitem><para>Namespace caching for faster access</para>
</listitem><listitem><para>Intelligent commit strategies for better performance</para>
</listitem><listitem><para>Statistics tracking for performance monitoring</para>
</listitem></itemizedlist>
</para>
<para>Hardware Requirements:<itemizedlist>
<listitem><para>ESP32-C6 microcontroller with NVS partition</para>
</listitem><listitem><para>Properly configured partition table with NVS partition</para>
</listitem><listitem><para>Optional: eFuse keys for encryption (HMAC-based scheme)</para>
</listitem><listitem><para>Adequate flash space for data and metadata</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC</para>
</simplesect>
<simplesect kind="note"><para>This implementation is specifically optimized for ESP32-C6 and production environments. </para>
</simplesect>
<simplesect kind="note"><para>Requires ESP-IDF v5.5 or later for full feature support. </para>
</simplesect>
<simplesect kind="note"><para>Supports both encrypted and non-encrypted NVS partitions. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspNvs_8h" kindref="compound">EspNvs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>standard<sp/>library<sp/>headers<sp/>(must<sp/>be<sp/>outside<sp/>extern<sp/>&quot;C&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_FAMILY_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>C<sp/>headers<sp/>must<sp/>be<sp/>wrapped<sp/>in<sp/>extern<sp/>&quot;C&quot;<sp/>for<sp/>C++<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_err.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvs_flash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CONFIG_NVS_SEC_PROVIDER_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvs_sec_provider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EspNvs&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>===<sp/>Performance<sp/>and<sp/>Reliability<sp/>Constants<sp/>===</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="EspNvs_8cpp_1a56134ef9075eaf7b6622e1a2736697ab" kindref="member">NVS_INIT_TIMEOUT_MS</ref><sp/>=<sp/>5000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="EspNvs_8cpp_1a5067ec469e1472b8d9dcde905d307fca" kindref="member">NVS_OPERATION_TIMEOUT_MS</ref><sp/>=<sp/>1000;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="EspNvs_8cpp_1a7fc5e67321118b83c625f7006a9fd270" kindref="member">NVS_MAX_RETRY_ATTEMPTS</ref><sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="EspNvs_8cpp_1af382ccbb36a465261a9e4abf140202a3" kindref="member">NVS_STATS_UPDATE_INTERVAL_MS</ref><sp/>=<sp/>30000;<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="EspNvs_8cpp_1a0d631767574cc8b140716c2ca3868db0" kindref="member">NVS_MAX_KEY_LENGTH_ESP32</ref><sp/>=<sp/>15;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="EspNvs_8cpp_1a831639f895a96f16a4c43cff3296b170" kindref="member">NVS_MAX_VALUE_SIZE_ESP32</ref><sp/>=</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>4000;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="EspNvs_8cpp_1ad4289f5994cc5fb6d4b3d47c03978363" kindref="member">NVS_MAX_NAMESPACE_LENGTH_ESP32</ref><sp/>=<sp/>15;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSTRUCTOR<sp/>AND<sp/>DESTRUCTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSTRUCTOR<sp/>AND<sp/>DESTRUCTOR<sp/>-<sp/>Enhanced<sp/>for<sp/>ESP32-C6<sp/>Production<sp/>Use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="classEspNvs_1a3abe92b89d2f9be3be2074ed54fa9f99" kindref="member">EspNvs::EspNvs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>namespace_name)<sp/>noexcept</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classBaseNvs" kindref="compound">BaseNvs</ref>(namespace_name),<sp/>nvs_handle_(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>last_error_code_(0)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>**LAZY<sp/>INITIALIZATION**<sp/>-<sp/>Store<sp/>configuration<sp/>but<sp/>do<sp/>NOT<sp/>initialize<sp/>hardware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>EspNvs<sp/>for<sp/>namespace<sp/>&apos;%s&apos;<sp/>-<sp/>LAZY<sp/>INIT&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace_name<sp/>?<sp/>namespace_name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>namespace<sp/>name<sp/>using<sp/>ESP32<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!namespace_name<sp/>||<sp/>strlen(namespace_name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>namespace<sp/>name:<sp/>null<sp/>or<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>error<sp/>but<sp/>allow<sp/>object<sp/>creation<sp/>-<sp/>Initialize()<sp/>will<sp/>fail<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_code_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(namespace_name)<sp/>&gt;<sp/><ref refid="EspNvs_8cpp_1ad4289f5994cc5fb6d4b3d47c03978363" kindref="member">NVS_MAX_NAMESPACE_LENGTH_ESP32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Namespace<sp/>name<sp/>too<sp/>long:<sp/>%zu<sp/>&gt;<sp/>%zu<sp/>characters&quot;</highlight><highlight class="normal">,<sp/>strlen(namespace_name),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspNvs_8cpp_1ad4289f5994cc5fb6d4b3d47c03978363" kindref="member">NVS_MAX_NAMESPACE_LENGTH_ESP32</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_code_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>statistics<sp/>and<sp/>diagnostics<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>statistics_<sp/>=<sp/><ref refid="structhf__nvs__statistics__t" kindref="compound">hf_nvs_statistics_t</ref>{};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>diagnostics_<sp/>=<sp/><ref refid="structhf__nvs__diagnostics__t" kindref="compound">hf_nvs_diagnostics_t</ref>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>last_error_code_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspNvs<sp/>instance<sp/>created<sp/>for<sp/>namespace<sp/>&apos;%s&apos;<sp/>-<sp/>awaiting<sp/>first<sp/>use&quot;</highlight><highlight class="normal">,<sp/>namespace_name_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="classEspNvs_1a8a408fee8b8edec22adbcebade3bf3e2" kindref="member">EspNvs::~EspNvs</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Destroying<sp/>EspNvs<sp/>instance<sp/>for<sp/>namespace<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a68e50ee98bc144e5a7c99a27ed5a7314" kindref="member">namespace_name_</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>final<sp/>statistics<sp/>before<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Final<sp/>stats<sp/>-<sp/>Operations:<sp/>%lu,<sp/>Errors:<sp/>%lu,<sp/>Success<sp/>rate:<sp/>%.1f%%&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref>,<sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1aa75564a08130c2b1fb624fa45ed419b7" kindref="member">total_errors</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref><sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(100.0<sp/>*<sp/>(<ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref><sp/>-<sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1aa75564a08130c2b1fb624fa45ed419b7" kindref="member">total_errors</ref>)<sp/>/</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>clean<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseNvs_1adaba0a72b0c06873b2b01713f1af3d9b" kindref="member">IsInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1a685e74c68591ad27fa0280a1f5244702" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspNvs<sp/>instance<sp/>destroyed<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OVERRIDDEN<sp/>PURE<sp/>VIRTUAL<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a1f1f5efa535235c16318008d08328f76" kindref="member">EspNvs::Initialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseNvs_1adaba0a72b0c06873b2b01713f1af3d9b" kindref="member">IsInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Namespace<sp/>&apos;%s&apos;<sp/>already<sp/>initialized&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a0b4726f0b4fbae76a3801f8afc2fd2d6" kindref="member">hf_nvs_err_t::NVS_ERR_ALREADY_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>())<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Initialize<sp/>failed:<sp/>Invalid<sp/>namespace<sp/>parameter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>NVS<sp/>for<sp/>namespace<sp/>&apos;%s&apos;<sp/>with<sp/>ESP-IDF<sp/>v5.5+<sp/>features&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Initialize<sp/>NVS<sp/>flash<sp/>partition<sp/>with<sp/>modern<sp/>ESP-IDF<sp/>v5.5+<sp/>approach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_flash_init();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_ERR_NVS_NO_FREE_PAGES<sp/>||<sp/>err<sp/>==<sp/>ESP_ERR_NVS_NEW_VERSION_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NVS<sp/>partition<sp/>needs<sp/>formatting<sp/>(error:<sp/>0x%X),<sp/>erasing<sp/>and<sp/>re-initializing&quot;</highlight><highlight class="normal">,<sp/>err);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>and<sp/>retry<sp/>-<sp/>this<sp/>is<sp/>normal<sp/>for<sp/>first-time<sp/>use<sp/>or<sp/>version<sp/>upgrades</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>esp_err_t<sp/>erase_err<sp/>=<sp/>nvs_flash_erase();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erase_err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>erase<sp/>NVS<sp/>partition:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/>erase_err);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1ab85e421f5801e575ad96ad971bb6fa37" kindref="member">last_error_code_</ref><sp/>=<sp/>erase_err;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">ConvertMcuError</ref>(erase_err);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>nvs_flash_init();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>re-initialize<sp/>NVS<sp/>after<sp/>erase:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/>err);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1ab85e421f5801e575ad96ad971bb6fa37" kindref="member">last_error_code_</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">ConvertMcuError</ref>(err);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NVS<sp/>partition<sp/>successfully<sp/>formatted<sp/>and<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NVS<sp/>flash<sp/>initialization<sp/>failed:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/>err);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1ab85e421f5801e575ad96ad971bb6fa37" kindref="member">last_error_code_</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">ConvertMcuError</ref>(err);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Open<sp/>namespace<sp/>with<sp/>proper<sp/>error<sp/>handling<sp/>and<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_open(<ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>(),<sp/>NVS_READWRITE,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>NVS<sp/>namespace<sp/>&apos;%s&apos;:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>(),<sp/>err);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1ab85e421f5801e575ad96ad971bb6fa37" kindref="member">last_error_code_</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">ConvertMcuError</ref>(err);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>3:<sp/>Store<sp/>handle<sp/>and<sp/>mark<sp/>as<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a6835ce423097a5c27ddaefb1be4e2207" kindref="member">nvs_handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>4:<sp/>Log<sp/>successful<sp/>initialization<sp/>with<sp/>handle<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NVS<sp/>namespace<sp/>&apos;%s&apos;<sp/>successfully<sp/>opened<sp/>(handle:<sp/>0x%X)&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>(),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>5:<sp/>Initialize<sp/>statistics<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a530e518acdadc9c6f01a92211753ad09" kindref="member">last_operation_time_us</ref><sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a9f1c94d84d94c8e51f4a03c249aa129e" kindref="member">total_operations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1aa75564a08130c2b1fb624fa45ed419b7" kindref="member">total_errors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a807ec86eac7ce01934982c03c9dd6672" kindref="member">total_reads</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1ad7c4c3871f7ab0af300f50fe84f2fb22" kindref="member">total_writes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a2e348eb0dab3ceff97e2ea7b963f4d33" kindref="member">total_commits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a24db0c1fae68e7bbe576d533a1d8064b" kindref="member">total_erases</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a4a420426685a5bedc037895d575f03f0" kindref="member">last_error</ref><sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a28022b4a28a1934cebe2e10d5099fe54" kindref="member">diagnostics_</ref>.<ref refid="structhf__nvs__diagnostics__t_1a3afc67f366de693b72a1d8d6e72ab552" kindref="member">last_error</ref><sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a28022b4a28a1934cebe2e10d5099fe54" kindref="member">diagnostics_</ref>.<ref refid="structhf__nvs__diagnostics__t_1a0b4e0215414e9e0d1413a3db05240cd0" kindref="member">consecutive_errors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a28022b4a28a1934cebe2e10d5099fe54" kindref="member">diagnostics_</ref>.<ref refid="structhf__nvs__diagnostics__t_1a204fb8657db0238559f9ba5cea751593" kindref="member">system_uptime_ms</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(esp_timer_get_time()<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a28022b4a28a1934cebe2e10d5099fe54" kindref="member">diagnostics_</ref>.<ref refid="structhf__nvs__diagnostics__t_1acdf473aebeb20f3f24cf4f3bed77ac7e" kindref="member">storage_healthy</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1ab85e421f5801e575ad96ad971bb6fa37" kindref="member">last_error_code_</ref><sp/>=<sp/>ESP_OK;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="classBaseNvs_1a14236adcdcc3d0c2ff9e434bd0d75c5a" kindref="member">SetInitialized</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="EspAdc_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;EspNvs<sp/>initialization<sp/>completed<sp/>successfully<sp/>for<sp/>namespace<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/><ref refid="classBaseNvs_1a6dc238eadbd792da526fcbeea4bf58d5" kindref="member">GetNamespace</ref>());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a685e74c68591ad27fa0280a1f5244702" kindref="member">EspNvs::Deinitialize</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseNvs_1adaba0a72b0c06873b2b01713f1af3d9b" kindref="member">IsInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEspNvs_1a6835ce423097a5c27ddaefb1be4e2207" kindref="member">nvs_handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspNvs_1a6835ce423097a5c27ddaefb1be4e2207" kindref="member">nvs_handle_</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>nvs_close(handle);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a6835ce423097a5c27ddaefb1be4e2207" kindref="member">nvs_handle_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="classBaseNvs_1a14236adcdcc3d0c2ff9e434bd0d75c5a" kindref="member">SetInitialized</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a1d18927cd799f168d9fa38bc86438427" kindref="member">EspNvs::SetU32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>value)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SetU32<sp/>failed:<sp/>null<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>empty<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(key)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SetU32<sp/>failed:<sp/>empty<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>key<sp/>too<sp/>long<sp/>(ESP-IDF<sp/>limit:<sp/>NVS_KEY_NAME_MAX_SIZE-1<sp/>=<sp/>15<sp/>chars)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(key)<sp/>&gt;=<sp/>NVS_KEY_NAME_MAX_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SetU32<sp/>failed:<sp/>key<sp/>too<sp/>long<sp/>(%zu<sp/>&gt;=<sp/>%d)&quot;</highlight><highlight class="normal">,<sp/>strlen(key),<sp/>NVS_KEY_NAME_MAX_SIZE);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4afecfb26ba79c585868d2459a8ebfdc37" kindref="member">hf_nvs_err_t::NVS_ERR_KEY_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>invalid<sp/>characters<sp/>(ESP-IDF<sp/>NVS<sp/>key<sp/>constraints)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>strlen(key);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>32<sp/>||<sp/>c<sp/>&gt;<sp/>126<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SetU32<sp/>failed:<sp/>invalid<sp/>character<sp/>&apos;%c&apos;<sp/>(0x%02X)<sp/>at<sp/>position<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>c,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)c,<sp/>i);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>ESP_LOGD(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>U32<sp/>key<sp/>&apos;%s&apos;<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value<sp/>with<sp/>error<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_set_u32(handle,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>U32<sp/>key<sp/>&apos;%s&apos;:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>err);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_code_<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-commit<sp/>for<sp/>data<sp/>consistency<sp/>and<sp/>durability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_commit(handle);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>commit<sp/>U32<sp/>key<sp/>&apos;%s&apos;:<sp/>0x%X&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>err);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_code_<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>ESP_LOGV(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>set<sp/>and<sp/>committed<sp/>U32<sp/>key<sp/>&apos;%s&apos;<sp/>=<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>stats<sp/>on<sp/>successful<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>statistics_.total_writes++;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>statistics_.bytes_written<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref>));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a78016e40f65ad0ea03cda37b2cf05dfa" kindref="member">EspNvs::GetU32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref>&amp;<sp/>value)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_get_u32(handle,<sp/>key,<sp/>&amp;value);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/>conv<sp/>=<sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>UpdateStatistics(conv<sp/>!=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>diagnostics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>statistics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conv<sp/>==<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.bytes_read<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref>));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conv;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a97988762e90b76b94962a3d1758109c5" kindref="member">EspNvs::SetString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>value)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key<sp/>||<sp/>!value)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enforce<sp/>conservative<sp/>maximum<sp/>value<sp/>size<sp/>(includes<sp/>null<sp/>terminator)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>value_len_with_null<sp/>=<sp/>strlen(value)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_len_with_null<sp/>&gt;<sp/>GetMaxValueSize())<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a425a15ffde2218cc0115fc07c19770dc" kindref="member">hf_nvs_err_t::NVS_ERR_VALUE_TOO_LARGE</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_set_str(handle,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-commit<sp/>for<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_commit(handle);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_writes++;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.bytes_written<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(value_len_with_null);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1ac3813f7d3fd39f5493f1a8042fddcf1b" kindref="member">EspNvs::GetString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>actual_size)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>size<sp/>query:<sp/>buffer<sp/>may<sp/>be<sp/>nullptr<sp/>with<sp/>buffer_size==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buffer_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>required_size<sp/>=<sp/>buffer_size;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_get_str(handle,<sp/>key,<sp/>buffer,<sp/>&amp;required_size);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_size)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>*actual_size<sp/>=<sp/>required_size;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/>conv<sp/>=<sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>UpdateStatistics(conv<sp/>!=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>diagnostics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>statistics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conv<sp/>==<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.bytes_read<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(required_size);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conv;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a1aa18744b55b8b15dcc9c35b7867635f" kindref="member">EspNvs::SetBlob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_size)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key<sp/>||<sp/>!data)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_set_blob(handle,<sp/>key,<sp/>data,<sp/>data_size);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-commit<sp/>for<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_commit(handle);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_writes++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.bytes_written<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data_size);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1aba531704bb6f31154c298342853b715c" kindref="member">EspNvs::GetBlob</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>actual_size)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Support<sp/>size<sp/>query:<sp/>buffer<sp/>may<sp/>be<sp/>nullptr<sp/>with<sp/>buffer_size==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buffer_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>required_size<sp/>=<sp/>buffer_size;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_get_blob(handle,<sp/>key,<sp/>buffer,<sp/>&amp;required_size);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_size)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>*actual_size<sp/>=<sp/>required_size;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/>conv<sp/>=<sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>UpdateStatistics(conv<sp/>!=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>diagnostics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>statistics_.last_error<sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conv<sp/>==<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.bytes_read<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(required_size);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conv;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a980345dc9dc0d96627b6ed26581f7cf8" kindref="member">EspNvs::EraseKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_erase_key(handle,<sp/>key);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-commit<sp/>for<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_commit(handle);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_erases++;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a2ac83396eb5f21034a028331c600ad9f" kindref="member">EspNvs::Commit</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>NOT<sp/>auto-initialize<sp/>on<sp/>commit;<sp/>respect<sp/>explicit<sp/>init<sp/>semantics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseNvs_1adaba0a72b0c06873b2b01713f1af3d9b" kindref="member">IsInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(<ref refid="classEspNvs_1a233a141b6079192b95864431b0df9c60" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classEspNvs_1a6835ce423097a5c27ddaefb1be4e2207" kindref="member">nvs_handle_</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_commit(handle);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/>conv<sp/>=<sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">ConvertMcuError</ref>(err);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a9247a33fe05b9a43bf4922bf99e4bdd2" kindref="member">UpdateStatistics</ref>(conv<sp/>!=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><ref refid="classEspNvs_1a28022b4a28a1934cebe2e10d5099fe54" kindref="member">diagnostics_</ref>.<ref refid="structhf__nvs__diagnostics__t_1a3afc67f366de693b72a1d8d6e72ab552" kindref="member">last_error</ref><sp/>=<sp/>conv;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conv<sp/>==<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classEspNvs_1a4d851eb75d04a90ec7b25e77e1db6de5" kindref="member">statistics_</ref>.<ref refid="structhf__nvs__statistics__t_1a2e348eb0dab3ceff97e2ea7b963f4d33" kindref="member">total_commits</ref>++;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>conv;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1a709425e0f37afdeb516447e43d000974" kindref="member">EspNvs::KeyExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_get_str(handle,<sp/>key,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK<sp/>||<sp/>err<sp/>==<sp/>ESP_ERR_NVS_INVALID_LENGTH)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_get_blob(handle,<sp/>key,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK<sp/>||<sp/>err<sp/>==<sp/>ESP_ERR_NVS_INVALID_LENGTH)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>U32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_get_u32(handle,<sp/>key,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>UpdateStatistics(err<sp/>!=<sp/>ESP_OK);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a35a38c5e3ef8287b1122c78b2580cf2b" kindref="member">EspNvs::GetSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>size)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab5eeea814bdab12ef6b85c13febf76e8" kindref="member">hf_nvs_err_t::NVS_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>nvs_handle_t<sp/>handle<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">nvs_handle_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nvs_handle_);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>string<sp/>size<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>required_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>esp_err_t<sp/>err<sp/>=<sp/>nvs_get_str(handle,<sp/>key,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;required_size);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK<sp/>||<sp/>err<sp/>==<sp/>ESP_ERR_NVS_INVALID_LENGTH)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>required_size;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>blob<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>required_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_get_blob(handle,<sp/>key,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;required_size);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK<sp/>||<sp/>err<sp/>==<sp/>ESP_ERR_NVS_INVALID_LENGTH)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>required_size;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>U32<sp/>fixed<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>nvs_get_u32(handle,<sp/>key,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_reads++;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>UpdateStatistics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ConvertMcuError(err);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classEspNvs_1acf2acb4e099ddff5b25dd1bde8fecff5" kindref="member">EspNvs::GetDescription</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ESP32<sp/>NVS<sp/>Storage<sp/>Implementation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ae6cb25d9c1e5e90b6701f49e9a6bd884" kindref="member">EspNvs::GetMaxKeyLength</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__NVS_8h_1a9097ab0c9516e77d3c7a0f5d1ff06f4e" kindref="member">HF_NVS_MAX_KEY_LENGTH</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1ab0816ed77b7f1e54f645c45a001b17be" kindref="member">EspNvs::GetMaxValueSize</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="EspTypes__NVS_8h_1a00dd6a75504fc5428f7dd8eb6dbf4fa8" kindref="member">HF_NVS_MAX_VALUE_SIZE</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1aac27c74c4373d1bc15d313ff6d8c7555" kindref="member">EspNvs::GetStatistics</ref>(<ref refid="structhf__nvs__statistics__t" kindref="compound">hf_nvs_statistics_t</ref>&amp;<sp/>statistics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>statistics<sp/>=<sp/>statistics_;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1a73f32618e8863f25bf70ffed650da20b" kindref="member">EspNvs::GetDiagnostics</ref>(<ref refid="structhf__nvs__diagnostics__t" kindref="compound">hf_nvs_diagnostics_t</ref>&amp;<sp/>diagnostics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref><sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>diagnostics<sp/>=<sp/>diagnostics_;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>HELPER<sp/>FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4" kindref="member">hf_nvs_err_t</ref><sp/><ref refid="classEspNvs_1ae92a0823375c316e604edba55e7978ee" kindref="member">EspNvs::ConvertMcuError</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mcu_error)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Comprehensive<sp/>ESP32-C6<sp/>NVS<sp/>error<sp/>code<sp/>mapping<sp/>for<sp/>ESP-IDF<sp/>v5.5+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mcu_error)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_OK:</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Core<sp/>NVS<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_NOT_FOUND:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a14c81b3c50e314d6f209bab4e37a4e77" kindref="member">hf_nvs_err_t::NVS_ERR_KEY_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_INVALID_HANDLE:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ae5ce3c3896146433182f6b0535145877" kindref="member">hf_nvs_err_t::NVS_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_READ_ONLY:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a2763eab1632bba46ca9222c1666047f1" kindref="member">hf_nvs_err_t::NVS_ERR_READ_ONLY</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_NOT_ENOUGH_SPACE:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a986d04672763fbbbbb8b96a940579ee9" kindref="member">hf_nvs_err_t::NVS_ERR_STORAGE_FULL</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_NO_FREE_PAGES:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a986d04672763fbbbbb8b96a940579ee9" kindref="member">hf_nvs_err_t::NVS_ERR_STORAGE_FULL</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_NEW_VERSION_FOUND:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4af0abae5bf89c9b38f7fe1810e3a53ab4" kindref="member">hf_nvs_err_t::NVS_ERR_CORRUPTED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Version<sp/>mismatch<sp/>indicates<sp/>corruption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>and<sp/>parameter<sp/>validation<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_INVALID_NAME:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>key/namespace<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_KEY_TOO_LONG:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4afecfb26ba79c585868d2459a8ebfdc37" kindref="member">hf_nvs_err_t::NVS_ERR_KEY_TOO_LONG</ref>;<sp/></highlight><highlight class="comment">//<sp/>Key<sp/>name<sp/>too<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_INVALID_LENGTH:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a425a15ffde2218cc0115fc07c19770dc" kindref="member">hf_nvs_err_t::NVS_ERR_VALUE_TOO_LARGE</ref>;<sp/></highlight><highlight class="comment">//<sp/>String/blob<sp/>length<sp/>insufficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_VALUE_TOO_LONG:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a425a15ffde2218cc0115fc07c19770dc" kindref="member">hf_nvs_err_t::NVS_ERR_VALUE_TOO_LARGE</ref>;<sp/></highlight><highlight class="comment">//<sp/>Value<sp/>too<sp/>long<sp/>for<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Encryption-related<sp/>errors<sp/>(ESP32-C6<sp/>specific)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_XTS_ENCR_FAILED:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ad8a199ce86c9ad133a5d732342b970e9" kindref="member">hf_nvs_err_t::NVS_ERR_ENCRYPTION_FAILED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Encryption<sp/>operation<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_XTS_DECR_FAILED:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ab65b6c1d0fa2f46d34184d4da239a92c" kindref="member">hf_nvs_err_t::NVS_ERR_DECRYPTION_FAILED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Decryption<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_XTS_CFG_FAILED:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;<sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>issue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_XTS_CFG_NOT_FOUND:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a7d9765111f333427193c6b69dcb6ed67" kindref="member">hf_nvs_err_t::NVS_ERR_ENCRYPTION_NOT_CONFIGURED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Encryption<sp/>not<sp/>configured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_ENCR_NOT_SUPPORTED:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4add1b8190a58d82cd9a4d8852b4b93d19" kindref="member">hf_nvs_err_t::NVS_ERR_ENCRYPTION_NOT_SUPPORTED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Encryption<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_KEYS_NOT_INITIALIZED:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a7d9765111f333427193c6b69dcb6ed67" kindref="member">hf_nvs_err_t::NVS_ERR_ENCRYPTION_NOT_CONFIGURED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Encryption<sp/>keys<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_CORRUPT_KEY_PART:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a8857fcfb8b6b6f9545092919d732363c" kindref="member">hf_nvs_err_t::NVS_ERR_KEY_PARTITION_CORRUPTED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Key<sp/>partition<sp/>corrupted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_WRONG_ENCRYPTION:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a7c3f052fde4e516843e18e47e4a6950b" kindref="member">hf_nvs_err_t::NVS_ERR_WRONG_ENCRYPTION_SCHEME</ref>;<sp/></highlight><highlight class="comment">//<sp/>Wrong<sp/>encryption<sp/>scheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_NVS_CONTENT_DIFFERS:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4af0abae5bf89c9b38f7fe1810e3a53ab4" kindref="member">hf_nvs_err_t::NVS_ERR_CORRUPTED</ref>;<sp/></highlight><highlight class="comment">//<sp/>Content<sp/>validation<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>parameter<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_ARG:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4ac4acea1b622467a0e604b7a47f720ef1" kindref="member">hf_nvs_err_t::NVS_ERR_INVALID_PARAMETER</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_ERR_INVALID_SIZE:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a425a15ffde2218cc0115fc07c19770dc" kindref="member">hf_nvs_err_t::NVS_ERR_VALUE_TOO_LARGE</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Catch-all<sp/>for<sp/>unknown<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unmapped<sp/>ESP32<sp/>error<sp/>code:<sp/>0x%X<sp/>(%d)&quot;</highlight><highlight class="normal">,<sp/>mcu_error,<sp/>mcu_error);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a176d348f72a44736481bfef20c6114c5" kindref="member">hf_nvs_err_t::NVS_ERR_FAILURE</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>HELPER<sp/>FUNCTIONS<sp/>-<sp/>Production-Ready<sp/>Utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1a9247a33fe05b9a43bf4922bf99e4bdd2" kindref="member">EspNvs::UpdateStatistics</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>error_occurred)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>total<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>statistics_.total_operations++;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>last<sp/>operation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>statistics_.last_operation_time_us<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>error<sp/>count<sp/>and<sp/>diagnostics<sp/>if<sp/>an<sp/>error<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_occurred)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.total_errors++;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.last_error<sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a176d348f72a44736481bfef20c6114c5" kindref="member">hf_nvs_err_t::NVS_ERR_FAILURE</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.last_error<sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4a176d348f72a44736481bfef20c6114c5" kindref="member">hf_nvs_err_t::NVS_ERR_FAILURE</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.consecutive_errors++;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.storage_healthy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics_.last_error<sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.last_error<sp/>=<sp/><ref refid="BaseNvs_8h_1a0a4f43b41760df506a65240a5ca415a4abe2d6c6ee0c358e8ec795db88c44e296" kindref="member">hf_nvs_err_t::NVS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.consecutive_errors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics_.storage_healthy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>system<sp/>uptime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>diagnostics_.system_uptime_ms<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(esp_timer_get_time()<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classEspNvs_1a48fa06f0cf583f10c9d9a430754d664e" kindref="member">EspNvs::IsValidKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>validation<sp/>failed:<sp/>null<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_len<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>validation<sp/>failed:<sp/>empty<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_len<sp/>&gt;<sp/><ref refid="EspNvs_8cpp_1a0d631767574cc8b140716c2ca3868db0" kindref="member">NVS_MAX_KEY_LENGTH_ESP32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>validation<sp/>failed:<sp/>key<sp/>too<sp/>long<sp/>(%zu<sp/>&gt;<sp/>%zu)&quot;</highlight><highlight class="normal">,<sp/>key_len,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspNvs_8cpp_1a0d631767574cc8b140716c2ca3868db0" kindref="member">NVS_MAX_KEY_LENGTH_ESP32</ref>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP32<sp/>NVS<sp/>keys<sp/>must<sp/>be<sp/>ASCII<sp/>and<sp/>not<sp/>contain<sp/>certain<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>key_len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>key[i];</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>32<sp/>||<sp/>c<sp/>&gt;<sp/>126)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Non-printable<sp/>ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>validation<sp/>failed:<sp/>non-printable<sp/>character<sp/>at<sp/>position<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="EspNvs_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Key<sp/>validation<sp/>failed:<sp/>whitespace<sp/>character<sp/>at<sp/>position<sp/>%zu&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HF_MCU_FAMILY_ESP32</highlight></codeline>
    </programlisting>
    <location file="src/mcu/esp32/EspNvs.cpp"/>
  </compounddef>
</doxygen>
