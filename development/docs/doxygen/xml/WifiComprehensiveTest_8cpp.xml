<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="WifiComprehensiveTest_8cpp" kind="file" language="C++">
    <compoundname>WifiComprehensiveTest.cpp</compoundname>
    <includes refid="TestFramework_8h" local="yes">TestFramework.h</includes>
    <includes refid="BaseWifi_8h" local="yes">base/BaseWifi.h</includes>
    <includes refid="EspWifi_8h" local="yes">mcu/esp32/EspWifi.h</includes>
    <incdepgraph>
      <node id="2">
        <label>TestFramework.h</label>
        <link refid="TestFramework_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>examples/esp32/main/WifiComprehensiveTest.cpp</label>
        <link refid="WifiComprehensiveTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>base/BaseWifi.h</label>
        <link refid="BaseWifi_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>mcu/esp32/EspGpio.h</label>
        <link refid="EspGpio_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>mcu/esp32/EspWifi.h</label>
        <link refid="EspWifi_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>EspTypes_GPIO.h</label>
        <link refid="EspTypes__GPIO_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../../utils/McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="34">
        <label>utils/RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>atomic</label>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>driver/gpio.h</label>
      </node>
      <node id="14">
        <label>esp_attr.h</label>
      </node>
      <node id="26">
        <label>esp_event.h</label>
      </node>
      <node id="3">
        <label>esp_log.h</label>
      </node>
      <node id="27">
        <label>esp_mesh.h</label>
      </node>
      <node id="28">
        <label>esp_netif.h</label>
      </node>
      <node id="29">
        <label>esp_smartconfig.h</label>
      </node>
      <node id="4">
        <label>esp_timer.h</label>
      </node>
      <node id="30">
        <label>esp_wifi.h</label>
      </node>
      <node id="5">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="6">
        <label>freertos/queue.h</label>
      </node>
      <node id="7">
        <label>freertos/semphr.h</label>
      </node>
      <node id="8">
        <label>freertos/task.h</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="31">
        <label>lwip/err.h</label>
      </node>
      <node id="32">
        <label>lwip/sys.h</label>
      </node>
      <node id="35">
        <label>memory</label>
      </node>
      <node id="33">
        <label>nvs_flash.h</label>
      </node>
      <node id="36">
        <label>queue</label>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="17">
        <label>string_view</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;WIFI_Test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="32" column="19" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" prot="public" static="yes" mutable="no">
        <type><ref refid="structTestResults" kindref="compound">TestResults</ref></type>
        <definition>TestResults g_test_results</definition>
        <argsstring></argsstring>
        <name>g_test_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="34" column="20" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_CORE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_CORE_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="42" column="23" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1a18cd2ffbdfcfd99fca0f271bedde476b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_INTERFACE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_INTERFACE_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="43" column="23" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_PERFORMANCE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_PERFORMANCE_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="44" column="23" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="WifiComprehensiveTest_8cpp_1a1498811388d24a45a53db97cc52c94e4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_FUNCTIONAL_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_FUNCTIONAL_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="45" column="23" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a68d2748ff7bc597fd50c9269af5b6c75" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_data_structures</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_data_structures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="51" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="51" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a90c22daccbb9110b0e69e3f9b85bf299" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_enums</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_enums</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="118" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="118" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a1fee3940bfd5358e0e2cbedacafbcde8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_error_codes</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_error_codes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="158" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="158" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1afd97d02554edaac2ddec99e9c7d7375c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_interface_validation</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_interface_validation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="186" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="186" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a6bea0341fcc2dc94e671e4e4dc8af66b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_performance_interface</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_performance_interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="225" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="225" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a4993cefa17682c029265fcdc8e1ec30d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_integration_interface</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_integration_interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="256" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="256" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a77a97cefa7c2e0f87f481275767c653c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_stress_interface</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_stress_interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="299" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="299" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1aafb7c78ccba6bff0009060e873b43e08" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_initialization</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_initialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="333" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="333" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a647c761ce290d76365072d1c066418ec" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_access_point_creation</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_access_point_creation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="378" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="378" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1abb9a7b935e2184d2ec573b9d65ae4bdf" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_network_scanning</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_network_scanning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="462" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="462" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1aea644d1ba74bc1e368a04d16343ab035" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_station_connection</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_station_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="522" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="522" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a6791abb7f13941e9791ea4ba71065963" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_power_management</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_power_management</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="590" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="590" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a4f4d0eb5a3fcf4513f8619ebfea5f8fb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_advanced_features</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_advanced_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="643" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="643" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a94ce41073e051577d040ad57caf0081d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_wifi_event_handling</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_wifi_event_handling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="716" column="6" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="716" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="WifiComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void app_main</definition>
        <argsstring>(void)</argsstring>
        <name>app_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/WifiComprehensiveTest.cpp" line="769" column="17" bodyfile="examples/esp32/main/WifiComprehensiveTest.cpp" bodystart="769" bodyend="837"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Comprehensive WiFi testing suite for ESP32-C6 DevKit-M-1 with ESP-IDF v5.5f. </para>
    </briefdescription>
    <detaileddescription>
<para>This test suite provides both interface testing and functional testing of the <ref refid="classEspWifi" kindref="compound">EspWifi</ref> implementation:</para>
<para>INTERFACE TESTS (Default - ENABLED):<itemizedlist>
<listitem><para>Class structure, data types, and interface validation</para>
</listitem><listitem><para>No actual WiFi hardware operations</para>
</listitem><listitem><para>Safe for CI/CD and development environments</para>
</listitem></itemizedlist>
</para>
<para>FUNCTIONAL TESTS (Default - ENABLED):<itemizedlist>
<listitem><para>Real WiFi hardware operations using <ref refid="classEspWifi" kindref="compound">EspWifi</ref> library</para>
</listitem><listitem><para>Access Point creation (visible on phones/computers)</para>
</listitem><listitem><para>Network scanning and discovery</para>
</listitem><listitem><para>Station mode connection attempts</para>
</listitem><listitem><para>Power management and advanced features</para>
</listitem><listitem><para>Event handling and callbacks</para>
</listitem></itemizedlist>
</para>
<para>To enable functional tests, set ENABLE_FUNCTIONAL_TESTS = true</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TestFramework_8h" kindref="compound">TestFramework.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BaseWifi_8h" kindref="compound">base/BaseWifi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspWifi_8h" kindref="compound">mcu/esp32/EspWifi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIFI_Test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structTestResults" kindref="compound">TestResults</ref><sp/><ref refid="WifiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>SECTION<sp/>CONFIGURATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable/disable<sp/>specific<sp/>test<sp/>categories<sp/>by<sp/>setting<sp/>to<sp/>true<sp/>or<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>WiFi<sp/>interface<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>structures,<sp/>enums,<sp/>error<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a18cd2ffbdfcfd99fca0f271bedde476b" kindref="member">ENABLE_INTERFACE_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interface<sp/>validation,<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Performance,<sp/>stress<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a1498811388d24a45a53db97cc52c94e4" kindref="member">ENABLE_FUNCTIONAL_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Real<sp/>WiFi<sp/>functionality<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WIFI<sp/>INTERFACE<sp/>AND<sp/>DATA<sp/>STRUCTURE<sp/>TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a68d2748ff7bc597fd50c9269af5b6c75" kindref="member">test_wifi_data_structures</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>data<sp/>structures...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>station<sp/>config<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>station_config;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestSSID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestPassword&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1ab17e16f345d3be419ac4635abcac681d" kindref="member">bssid_set</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a803122e9c77b8f5d4c026afc64b80efe" kindref="member">scan_method</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1af9150571eac6a1dacf0f02bd9650f152" kindref="member">sort_method</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>70;<sp/></highlight><highlight class="comment">//<sp/>Using<sp/>positive<sp/>value<sp/>for<sp/>unsigned<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a0937e6645ec03df2c5ce62672e20971e" kindref="member">threshold_authmode</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(station_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;TestSSID&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Station<sp/>config<sp/>SSID<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(station_config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>!=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Station<sp/>config<sp/>channel<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>AP<sp/>config<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__ap__config__t" kindref="compound">hf_wifi_ap_config_t</ref><sp/>ap_config;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0b0565f4d761b1e192fd0b96c041808d" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestAP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a398bcfee6f1c4e993c3e74ad4b2347e1" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestAPPassword&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a10f66e7e3276c1b86524929534fcf42e" kindref="member">ssid_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a5a8eb0c04a8f37049c48a1c003369907" kindref="member">channel</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0db71ba44db92be933c654d4fa1ec934" kindref="member">authmode</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a4ec44f492940c72feba4b3c5a0b6cfb9" kindref="member">ssid_hidden</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a182f0a7b237d36109367a1544e6892ec" kindref="member">max_connection</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a2af81bc34be9da0bb13b09aad9f5397c" kindref="member">beacon_interval</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ap_config.<ref refid="structhf__wifi__ap__config__t_1a0b0565f4d761b1e192fd0b96c041808d" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;TestAP&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;AP<sp/>config<sp/>SSID<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ap_config.<ref refid="structhf__wifi__ap__config__t_1a182f0a7b237d36109367a1544e6892ec" kindref="member">max_connection</ref><sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;AP<sp/>config<sp/>max_connection<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>network<sp/>info<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__network__info__t" kindref="compound">hf_wifi_network_info_t</ref><sp/>network_info;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1adb0be4315a17235da186ae21e13a791a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestNetwork&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1ac3bbd2ceed7578e487b93da8f7ce7a2c" kindref="member">security</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1a8ae5e64f7d1eeb47ba40ee63b040fb51" kindref="member">rssi</ref><sp/>=<sp/>-50;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1af78d42c4c2f82438155d9e55fc204810" kindref="member">channel</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1ac358acf115395f8239ec7cb2188853be" kindref="member">hidden</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_info.<ref refid="structhf__wifi__network__info__t_1adb0be4315a17235da186ae21e13a791a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;TestNetwork&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>info<sp/>SSID<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_info.<ref refid="structhf__wifi__network__info__t_1a8ae5e64f7d1eeb47ba40ee63b040fb51" kindref="member">rssi</ref><sp/>!=<sp/>-50)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>info<sp/>RSSI<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>data<sp/>structures<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a90c22daccbb9110b0e69e3f9b85bf299" kindref="member">test_wifi_enums</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>enums...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>WiFi<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>modes<sp/>=<sp/>{<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>,<sp/><ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca3fc28648422633c38422074f7e669b" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_ACCESS_POINT</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca1d3cacf20db7c218457051dd366355" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION_AP</ref>,<sp/><ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0a66f56d841febc3a864de6c6c6ee8aa" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_DISABLED</ref>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mode<sp/>:<sp/>modes)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WiFi<sp/>mode<sp/>value:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mode));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>security<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>security_types<sp/>=<sp/>{<ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7a6c2ac93b7b92dd01285966d81b4c4b25" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_OPEN</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7ab85ee9acdcf05f4292466424bb367fae" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WEP</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7a61175b78017b936fe7ad931cdd68c6be" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA_PSK</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7a39e69301ced8ebe5a680fcd9815e7bd4" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA_WPA2_PSK</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7a754aac58426b4ce19008820b1f1a522f" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_ENTERPRISE</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7ab021c8178594863a7243ac31669a87c6" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA3_PSK</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7acfafdeb953cbc1d7516fd6fa712edb02" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_WPA3_PSK</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7a51a49eb7d86d083a25ccf28389d190eb" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA3_ENTERPRISE</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7ab076e40f2ed7a08a4c9c292e4bfe443e" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WAPI_PSK</ref>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>security<sp/>:<sp/>security_types)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Security<sp/>type<sp/>value:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(security));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>power<sp/>save<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>power_modes<sp/>=<sp/>{<ref refid="group__wifi_1ggafd37336bb8e3a8528795ddfdbd9d5760a68443ff772c7fe9941de5f9748a217c3" kindref="member">hf_wifi_power_save_t::HF_WIFI_POWER_SAVE_NONE</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggafd37336bb8e3a8528795ddfdbd9d5760ad3af4c0f47b830b1e61108c98feecdf4" kindref="member">hf_wifi_power_save_t::HF_WIFI_POWER_SAVE_MIN_MODEM</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__wifi_1ggafd37336bb8e3a8528795ddfdbd9d5760a0a226388d21c3335ab7f7f84f895613a" kindref="member">hf_wifi_power_save_t::HF_WIFI_POWER_SAVE_MAX_MODEM</ref>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>power_mode<sp/>:<sp/>power_modes)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Power<sp/>save<sp/>mode<sp/>value:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(power_mode));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>enums<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a1fee3940bfd5358e0e2cbedacafbcde8" kindref="member">test_wifi_error_codes</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>error<sp/>codes...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>error<sp/>code<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error_string<sp/>=<sp/><ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(<ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_string<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>string<sp/>for<sp/>WIFI_SUCCESS<sp/>incorrect:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(error_string).c_str());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error_string_failure<sp/>=<sp/><ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(<ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a15a38f8eb5a3cd0e0b96296563daa3f3" kindref="member">hf_wifi_err_t::WIFI_ERR_FAILURE</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_string_failure<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;General<sp/>failure&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>string<sp/>for<sp/>WIFI_ERR_FAILURE<sp/>incorrect:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(error_string_failure).c_str());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error_string_invalid<sp/>=<sp/><ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(<ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a55cd1f05f28416cdd4a9bb2eadec0e73" kindref="member">hf_wifi_err_t::WIFI_ERR_INVALID_PARAM</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_string_invalid<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>parameter&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>string<sp/>for<sp/>WIFI_ERR_INVALID_PARAM<sp/>incorrect:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(error_string_invalid).c_str());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>error<sp/>codes<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1afd97d02554edaac2ddec99e9c7d7375c" kindref="member">test_wifi_interface_validation</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>interface<sp/>validation...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>that<sp/>we<sp/>can<sp/>create<sp/>and<sp/>manipulate<sp/>WiFi-related<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>config;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestNetwork&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestPassword123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>80;<sp/></highlight><highlight class="comment">//<sp/>Using<sp/>positive<sp/>value<sp/>for<sp/>unsigned<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>data<sp/>was<sp/>set<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;TestNetwork&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interface<sp/>test:<sp/>SSID<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>!=<sp/>11)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interface<sp/>test:<sp/>Channel<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>!=<sp/>80)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interface<sp/>test:<sp/>RSSI<sp/>threshold<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>MAC<sp/>address<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>uint8_t<sp/>mac_address[6]<sp/>=<sp/>{0x12,<sp/>0x34,<sp/>0x56,<sp/>0x78,<sp/>0x9A,<sp/>0xBC};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>MAC<sp/>address<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mac_address[0]<sp/>!=<sp/>0x12<sp/>||<sp/>mac_address[5]<sp/>!=<sp/>0xBC)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Interface<sp/>test:<sp/>MAC<sp/>address<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>interface<sp/>validation<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a6bea0341fcc2dc94e671e4e4dc8af66b" kindref="member">test_wifi_performance_interface</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>interface<sp/>performance...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>data<sp/>structure<sp/>creation<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1000;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>config;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestSSID&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestPassword&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>i<sp/>%<sp/>14;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>50<sp/>+<sp/>(i<sp/>%<sp/>50);<sp/></highlight><highlight class="comment">//<sp/>Using<sp/>positive<sp/>values<sp/>for<sp/>unsigned<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>data<sp/>was<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;TestSSID&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Performance<sp/>test<sp/>failed<sp/>at<sp/>iteration<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration_us<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration_ms<sp/>=<sp/>duration_us<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Performance<sp/>test<sp/>completed:<sp/>1000<sp/>config<sp/>creations<sp/>in<sp/>%lld<sp/>ms<sp/>(%lld<sp/>us<sp/>per<sp/>operation)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration_ms,<sp/>duration_us<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>interface<sp/>performance<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a4993cefa17682c029265fcdc8e1ec30d" kindref="member">test_wifi_integration_interface</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>interface<sp/>integration...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>comprehensive<sp/>data<sp/>structure<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>station_config;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationTest&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationPassword&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>station_config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>70;<sp/></highlight><highlight class="comment">//<sp/>Using<sp/>positive<sp/>value<sp/>for<sp/>unsigned<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__ap__config__t" kindref="compound">hf_wifi_ap_config_t</ref><sp/>ap_config;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0b0565f4d761b1e192fd0b96c041808d" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationAP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a398bcfee6f1c4e993c3e74ad4b2347e1" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationAPPass&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a5a8eb0c04a8f37049c48a1c003369907" kindref="member">channel</ref><sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a182f0a7b237d36109367a1544e6892ec" kindref="member">max_connection</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__network__info__t" kindref="compound">hf_wifi_network_info_t</ref><sp/>network_info;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1adb0be4315a17235da186ae21e13a791a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationNetwork&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1ac3bbd2ceed7578e487b93da8f7ce7a2c" kindref="member">security</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7ab021c8178594863a7243ac31669a87c6" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA3_PSK</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1a8ae5e64f7d1eeb47ba40ee63b040fb51" kindref="member">rssi</ref><sp/>=<sp/>-45;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1af78d42c4c2f82438155d9e55fc204810" kindref="member">channel</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>all<sp/>configurations<sp/>are<sp/>set<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(station_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationTest&quot;</highlight><highlight class="normal"><sp/>||<sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0b0565f4d761b1e192fd0b96c041808d" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationAP&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>network_info.<ref refid="structhf__wifi__network__info__t_1adb0be4315a17235da186ae21e13a791a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;IntegrationNetwork&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Integration<sp/>test:<sp/>SSID<sp/>values<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(station_config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>!=<sp/>6<sp/>||<sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a5a8eb0c04a8f37049c48a1c003369907" kindref="member">channel</ref><sp/>!=<sp/>11<sp/>||<sp/>network_info.<ref refid="structhf__wifi__network__info__t_1af78d42c4c2f82438155d9e55fc204810" kindref="member">channel</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Integration<sp/>test:<sp/>Channel<sp/>values<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(network_info.<ref refid="structhf__wifi__network__info__t_1ac3bbd2ceed7578e487b93da8f7ce7a2c" kindref="member">security</ref><sp/>!=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7ab021c8178594863a7243ac31669a87c6" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA3_PSK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Integration<sp/>test:<sp/>Security<sp/>type<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>interface<sp/>integration<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a77a97cefa7c2e0f87f481275767c653c" kindref="member">test_wifi_stress_interface</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>interface<sp/>stress...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stress<sp/>test<sp/>with<sp/>rapid<sp/>data<sp/>structure<sp/>creation<sp/>and<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>config;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StressTest&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StressPass&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>(i<sp/>%<sp/>14)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>30<sp/>+<sp/>(i<sp/>%<sp/>70);<sp/></highlight><highlight class="comment">//<sp/>Using<sp/>positive<sp/>values<sp/>for<sp/>unsigned<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a803122e9c77b8f5d4c026afc64b80efe" kindref="member">scan_method</ref><sp/>=<sp/>i<sp/>%<sp/>2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1af9150571eac6a1dacf0f02bd9650f152" kindref="member">sort_method</ref><sp/>=<sp/>(i<sp/>%<sp/>2)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structhf__wifi__station__config__t_1a0937e6645ec03df2c5ce62672e20971e" kindref="member">threshold_authmode</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="group__wifi_1gaa433fd9116606cbe69d1feeb748f41f7" kindref="member">hf_wifi_security_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i<sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;StressTest&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i))<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Stress<sp/>test<sp/>failed<sp/>at<sp/>iteration<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>&lt;<sp/>1<sp/>||<sp/>config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>&gt;<sp/>14)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Stress<sp/>test:<sp/>Invalid<sp/>channel<sp/>at<sp/>iteration<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>interface<sp/>stress<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FUNCTIONAL<sp/>WIFI<sp/>TESTS<sp/>(ACTUAL<sp/>WIFI<sp/>OPERATIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1aafb7c78ccba6bff0009060e873b43e08" kindref="member">test_wifi_initialization</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>initialization<sp/>and<sp/>mode<sp/>switching...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>WiFi<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wifi.<ref refid="classEspWifi_1a8ac15d4e7a8156eafa7b2850495c3083" kindref="member">IsInitialized</ref>())<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WiFi<sp/>not<sp/>marked<sp/>as<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>mode<sp/>switching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1ad572aec1ea4575004b5639a386948c04" kindref="member">SetMode</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca3fc28648422633c38422074f7e669b" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_ACCESS_POINT</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>AP<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="group__wifi_1ga90ab2c8a51fc7cb116b659df115407b9" kindref="member">hf_wifi_mode_t</ref><sp/>current_mode<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a916f331fe7258222a58f213dec3e3a0b" kindref="member">GetMode</ref>();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_mode<sp/>!=<sp/><ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca3fc28648422633c38422074f7e669b" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_ACCESS_POINT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Mode<sp/>not<sp/>set<sp/>correctly,<sp/>expected<sp/>AP<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>deinitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a08a5f89824b7d4f845cecabc4278f356" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deinitialize<sp/>WiFi:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>delay<sp/>to<sp/>ensure<sp/>proper<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(500));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>WiFi<sp/>initialization<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a647c761ce290d76365072d1c066418ec" kindref="member">test_wifi_access_point_creation</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>Access<sp/>Point<sp/>creation<sp/>and<sp/>management...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>in<sp/>AP<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca3fc28648422633c38422074f7e669b" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_ACCESS_POINT</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi<sp/>in<sp/>AP<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>Access<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__ap__config__t" kindref="compound">hf_wifi_ap_config_t</ref><sp/>ap_config;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0b0565f4d761b1e192fd0b96c041808d" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ESP32-C6_TestAP&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a398bcfee6f1c4e993c3e74ad4b2347e1" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;testpassword123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a10f66e7e3276c1b86524929534fcf42e" kindref="member">ssid_len</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Auto-detect<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a5a8eb0c04a8f37049c48a1c003369907" kindref="member">channel</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a0db71ba44db92be933c654d4fa1ec934" kindref="member">authmode</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a4ec44f492940c72feba4b3c5a0b6cfb9" kindref="member">ssid_hidden</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a182f0a7b237d36109367a1544e6892ec" kindref="member">max_connection</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>ap_config.<ref refid="structhf__wifi__ap__config__t_1a2af81bc34be9da0bb13b09aad9f5397c" kindref="member">beacon_interval</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a2a2b0ecff30d6d953da490565c8ca0b9" kindref="member">ConfigureAccessPoint</ref>(ap_config);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>AP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>Access<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a1f140a31ef650411478818c285aef64b" kindref="member">StartAccessPoint</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>AP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>moment<sp/>for<sp/>AP<sp/>to<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(2000));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>AP<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wifi.<ref refid="classEspWifi_1a5a1d456000d644dfd8282673ba4f5009" kindref="member">IsAccessPointActive</ref>())<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Access<sp/>Point<sp/>not<sp/>marked<sp/>as<sp/>active&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>connected<sp/>station<sp/>count<sp/>(should<sp/>be<sp/>0<sp/>initially)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>station_count<sp/>=<sp/>wifi.<ref refid="classEspWifi_1abf1bc4660bcef2ae9d213b5f93f3ca8c" kindref="member">GetConnectedStationCount</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>stations:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>station_count);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>MAC<sp/>address<sp/>retrieval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ap_mac[6];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a98c82d71b4bf54dfaa20c305fae750d2" kindref="member">GetMacAddress</ref>(ap_mac,<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Interface<sp/>1<sp/>for<sp/>AP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>AP<sp/>MAC<sp/>address:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;AP<sp/>MAC<sp/>Address:<sp/>%02X:%02X:%02X:%02X:%02X:%02X&quot;</highlight><highlight class="normal">,<sp/>ap_mac[0],<sp/>ap_mac[1],<sp/>ap_mac[2],</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ap_mac[3],<sp/>ap_mac[4],<sp/>ap_mac[5]);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>AP<sp/>running<sp/>for<sp/>15<sp/>seconds<sp/>so<sp/>you<sp/>can<sp/>see<sp/>it<sp/>on<sp/>your<sp/>phone</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Access<sp/>Point<sp/>&apos;ESP32-C6_TestAP&apos;<sp/>is<sp/>now<sp/>running<sp/>for<sp/>15<sp/>seconds...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Refresh<sp/>your<sp/>phone&apos;s<sp/>WiFi<sp/>list<sp/>to<sp/>see<sp/>the<sp/>network!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>shorter<sp/>delay<sp/>to<sp/>avoid<sp/>test<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(15000));<sp/></highlight><highlight class="comment">//<sp/>15<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>connected<sp/>station<sp/>count<sp/>after<sp/>15<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>final_station_count<sp/>=<sp/>wifi.<ref refid="classEspWifi_1abf1bc4660bcef2ae9d213b5f93f3ca8c" kindref="member">GetConnectedStationCount</ref>();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>stations<sp/>after<sp/>15<sp/>seconds:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>final_station_count);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>Access<sp/>Point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aeec25630ed35de561df39b358418e566" kindref="member">StopAccessPoint</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>stop<sp/>AP:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Access<sp/>Point<sp/>creation<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NOTE:<sp/>Look<sp/>for<sp/>&apos;ESP32-C6_TestAP&apos;<sp/>network<sp/>on<sp/>your<sp/>phone/computer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1abb9a7b935e2184d2ec573b9d65ae4bdf" kindref="member">test_wifi_network_scanning</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>network<sp/>scanning<sp/>functionality...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>in<sp/>station<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi<sp/>in<sp/>station<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>moment<sp/>for<sp/>WiFi<sp/>to<sp/>fully<sp/>initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>network<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1af8eb0906128aeb938eb5822a910d7d63" kindref="member">StartScan</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>5000);<sp/></highlight><highlight class="comment">//<sp/>Show<sp/>hidden,<sp/>active<sp/>scan,<sp/>5s<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>scan:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>scan<sp/>to<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan_wait_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(wifi.<ref refid="classEspWifi_1a43e97cdf4af2c05b2e68031add87d782" kindref="member">IsScanning</ref>()<sp/>&amp;&amp;<sp/>scan_wait_count<sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(500));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>scan_wait_count++;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Waiting<sp/>for<sp/>scan<sp/>to<sp/>complete...<sp/>(%d/20)&quot;</highlight><highlight class="normal">,<sp/>scan_wait_count);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wifi.<ref refid="classEspWifi_1a43e97cdf4af2c05b2e68031add87d782" kindref="member">IsScanning</ref>())<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Scan<sp/>did<sp/>not<sp/>complete<sp/>within<sp/>timeout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>scan<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>std::vector&lt;hf_wifi_network_info_t&gt;<sp/>networks;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a5397db2984b1531639511dee9c013a9f" kindref="member">GetScanResults</ref>(networks,<sp/>20);<sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>to<sp/>20<sp/>networks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>scan<sp/>results:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>%zu<sp/>networks:&quot;</highlight><highlight class="normal">,<sp/>networks.size());</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>networks.size()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Show<sp/>first<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>network<sp/>=<sp/>networks[i];</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%zu.<sp/>SSID:<sp/>&apos;%s&apos;,<sp/>RSSI:<sp/>%d<sp/>dBm,<sp/>Channel:<sp/>%d,<sp/>Security:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>network.ssid.c_str(),<sp/>network.rssi,<sp/>network.channel,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(network.security));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(networks.size()<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>...<sp/>and<sp/>%zu<sp/>more<sp/>networks&quot;</highlight><highlight class="normal">,<sp/>networks.size()<sp/>-<sp/>10);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Network<sp/>scanning<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1aea644d1ba74bc1e368a04d16343ab035" kindref="member">test_wifi_station_connection</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>station<sp/>mode<sp/>connection<sp/>(will<sp/>attempt<sp/>to<sp/>connect<sp/>to<sp/>test<sp/>network)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>in<sp/>station<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi<sp/>in<sp/>station<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>station<sp/>(using<sp/>a<sp/>test<sp/>network<sp/>that<sp/>may<sp/>not<sp/>exist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="structhf__wifi__station__config__t" kindref="compound">hf_wifi_station_config_t</ref><sp/>sta_config;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TestNetwork_ESP32&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a18939a056d90423a88c5f31412f93fce" kindref="member">password</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;testpassword123&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1ab17e16f345d3be419ac4635abcac681d" kindref="member">bssid_set</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1ae92c8cdb70a56a99ad11d433c18925e6" kindref="member">channel</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a803122e9c77b8f5d4c026afc64b80efe" kindref="member">scan_method</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>scan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1af9150571eac6a1dacf0f02bd9650f152" kindref="member">sort_method</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>by<sp/>signal<sp/>strength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a8fdad64ca7df7590d9e1a3a4c25fec56" kindref="member">threshold_rssi</ref><sp/>=<sp/>70;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a0937e6645ec03df2c5ce62672e20971e" kindref="member">threshold_authmode</ref><sp/>=<sp/><ref refid="group__wifi_1ggaa433fd9116606cbe69d1feeb748f41f7aad0d41f83861d8543a42673076f66bbc" kindref="member">hf_wifi_security_t::HF_WIFI_SECURITY_WPA2_PSK</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1af9d85df22e5b2f7f0e4a9f083a68e27b" kindref="member">ConfigureStation</ref>(sta_config);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>station:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>connect<sp/>(will<sp/>likely<sp/>fail,<sp/>but<sp/>tests<sp/>the<sp/>functionality)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>connect<sp/>to<sp/>&apos;%s&apos;...&quot;</highlight><highlight class="normal">,<sp/>sta_config.<ref refid="structhf__wifi__station__config__t_1a9bec5a9a39cf0f7827fa697c46ed338a" kindref="member">ssid</ref>.c_str());</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1ac4dc5a2ff0d3699cb5dfc7dabe2e4522" kindref="member">Connect</ref>(10000);<sp/></highlight><highlight class="comment">//<sp/>10<sp/>second<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>connected<sp/>to<sp/>network!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>connection<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>connected_ssid<sp/>=<sp/>wifi.<ref refid="classEspWifi_1af65c3becf925791207bc7333be78d3ef" kindref="member">GetConnectedSsid</ref>();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rssi<sp/>=<sp/>wifi.<ref refid="classEspWifi_1accc189589995ac17cd27a9ba60d63c9a" kindref="member">GetRssi</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>channel<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a3807a44527938991f110f33e70ab0caa" kindref="member">GetChannel</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connected<sp/>to:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>connected_ssid.c_str());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RSSI:<sp/>%d<sp/>dBm&quot;</highlight><highlight class="normal">,<sp/>rssi);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>channel);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>IP<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhf__wifi__ip__info__t" kindref="compound">hf_wifi_ip_info_t</ref><sp/>ip_info;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a91b02d2cc3f0a1bc3a93bef5ac1767f0" kindref="member">GetIpInfo</ref>(ip_info);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;IP:<sp/>%d.%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>(ip_info.<ref refid="structhf__wifi__ip__info__t_1afd5bebba14fc1d13e67eff14ee7253b4" kindref="member">ip</ref><sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>0xFF,<sp/>(ip_info.<ref refid="structhf__wifi__ip__info__t_1afd5bebba14fc1d13e67eff14ee7253b4" kindref="member">ip</ref><sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ip_info.<ref refid="structhf__wifi__ip__info__t_1afd5bebba14fc1d13e67eff14ee7253b4" kindref="member">ip</ref><sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF,<sp/>(ip_info.<ref refid="structhf__wifi__ip__info__t_1afd5bebba14fc1d13e67eff14ee7253b4" kindref="member">ip</ref><sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1af8511154338b1285cb386ba2cde71158" kindref="member">Disconnect</ref>();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disconnect:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>failed<sp/>(expected):<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>normal<sp/>if<sp/>the<sp/>test<sp/>network<sp/>doesn&apos;t<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Station<sp/>connection<sp/>test<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a6791abb7f13941e9791ea4ba71065963" kindref="member">test_wifi_power_management</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>power<sp/>management<sp/>features...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>WiFi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>power<sp/>save<sp/>mode<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a3d22fc24922e5e4d08531fdeaacfe371" kindref="member">SetPowerSave</ref>(<ref refid="group__wifi_1ggafd37336bb8e3a8528795ddfdbd9d5760ad3af4c0f47b830b1e61108c98feecdf4" kindref="member">hf_wifi_power_save_t::HF_WIFI_POWER_SAVE_MIN_MODEM</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>power<sp/>save<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>power<sp/>save<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="group__wifi_1gafd37336bb8e3a8528795ddfdbd9d5760" kindref="member">hf_wifi_power_save_t</ref><sp/>current_power_save<sp/>=<sp/>wifi.<ref refid="classEspWifi_1acc350fad8c7d5563b6dcff4fdbc3c8a6" kindref="member">GetPowerSave</ref>();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_power_save<sp/>!=<sp/><ref refid="group__wifi_1ggafd37336bb8e3a8528795ddfdbd9d5760ad3af4c0f47b830b1e61108c98feecdf4" kindref="member">hf_wifi_power_save_t::HF_WIFI_POWER_SAVE_MIN_MODEM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Power<sp/>save<sp/>mode<sp/>not<sp/>set<sp/>correctly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Power<sp/>save<sp/>mode<sp/>set<sp/>to:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(current_power_save));</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>channel<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aa24463dc5e86cc6c851044213ce711d3" kindref="member">SetChannel</ref>(6);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>channel:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>uint8_t<sp/>current_channel<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a3807a44527938991f110f33e70ab0caa" kindref="member">GetChannel</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>current_channel);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>MAC<sp/>address<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>uint8_t<sp/>current_mac[6];</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a98c82d71b4bf54dfaa20c305fae750d2" kindref="member">GetMacAddress</ref>(current_mac,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Station<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>MAC<sp/>address:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Station<sp/>MAC:<sp/>%02X:%02X:%02X:%02X:%02X:%02X&quot;</highlight><highlight class="normal">,<sp/>current_mac[0],<sp/>current_mac[1],</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_mac[2],<sp/>current_mac[3],<sp/>current_mac[4],<sp/>current_mac[5]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Power<sp/>management<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a4f4d0eb5a3fcf4513f8619ebfea5f8fb" kindref="member">test_wifi_advanced_features</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>advanced<sp/>features...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>with<sp/>advanced<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="structEspWifiAdvancedConfig" kindref="compound">EspWifiAdvancedConfig</ref><sp/>advanced_config;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a0f91e24acf08df67f5818bad2732f76b" kindref="member">enable_power_save</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a877eb7a4269be41830bb985cf3f107a4" kindref="member">power_save_type</ref><sp/>=<sp/>WIFI_PS_MIN_MODEM;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1aa5e2c52e3acbffb30c141557611b6c90" kindref="member">tx_power</ref><sp/>=<sp/>15;<sp/></highlight><highlight class="comment">//<sp/>15<sp/>dBm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1adb5829534aff88bc43132405156460de" kindref="member">bandwidth</ref><sp/>=<sp/>WIFI_BW_HT20;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a9ef437b1859d6b66338575b279381cfa" kindref="member">enable_ampdu_rx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1af1824808925ba37cb5a2ef0ef0413f01" kindref="member">enable_ampdu_tx</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a4eb23f1ab59c951fef8112cf91e5fb1c" kindref="member">enable_fast_connect</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a53e256af71c849df31c83d41c98dbae6" kindref="member">enable_pmf_required</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a3c0742f820dc69240755884b768916eb" kindref="member">enable_wpa3_transition</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1accff74a0b5f3012513dcd8efe92c74f8" kindref="member">enable_11r</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a43255aa1401cd585ebaedf078418c0a0" kindref="member">enable_11k</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1ae5113461b081c5528eeb4e92c2891d99" kindref="member">enable_11v</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a9e39b99083705d31f54dc2b51bb9f73e" kindref="member">enable_enterprise</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1a5c3d817992e443084bc0fe131a4a9576" kindref="member">enable_mesh</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>advanced_config.<ref refid="structEspWifiAdvancedConfig_1ac492f389202e623ebe5fafb50765c9d9" kindref="member">enable_smartconfig</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>WiFi<sp/>with<sp/>advanced<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>advanced_wifi(&amp;advanced_config);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>advanced_wifi.Initialize(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>advanced<sp/>WiFi:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>advanced<sp/>configuration<sp/>retrieval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><ref refid="structEspWifiAdvancedConfig" kindref="compound">EspWifiAdvancedConfig</ref><sp/>retrieved_config;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>advanced_wifi.GetAdvancedConfig(retrieved_config);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>advanced<sp/>config:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>config<sp/>-<sp/>TX<sp/>Power:<sp/>%d<sp/>dBm&quot;</highlight><highlight class="normal">,<sp/>retrieved_config.<ref refid="structEspWifiAdvancedConfig_1aa5e2c52e3acbffb30c141557611b6c90" kindref="member">tx_power</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>config<sp/>-<sp/>Power<sp/>Save:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieved_config.<ref refid="structEspWifiAdvancedConfig_1a0f91e24acf08df67f5818bad2732f76b" kindref="member">enable_power_save</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>config<sp/>-<sp/>A-MPDU<sp/>RX:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieved_config.<ref refid="structEspWifiAdvancedConfig_1a9ef437b1859d6b66338575b279381cfa" kindref="member">enable_ampdu_rx</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Advanced<sp/>config<sp/>-<sp/>A-MPDU<sp/>TX:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieved_config.<ref refid="structEspWifiAdvancedConfig_1af1824808925ba37cb5a2ef0ef0413f01" kindref="member">enable_ampdu_tx</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>TX<sp/>power<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>advanced_wifi.SetTxPower(18);<sp/></highlight><highlight class="comment">//<sp/>18<sp/>dBm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>TX<sp/>power:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>int8_t<sp/>current_tx_power<sp/>=<sp/>advanced_wifi.GetTxPower();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>TX<sp/>power:<sp/>%d<sp/>dBm&quot;</highlight><highlight class="normal">,<sp/>current_tx_power);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>bandwidth<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>advanced_wifi.SetBandwidth(WIFI_BW_HT40);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>bandwidth:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>wifi_bandwidth_t<sp/>current_bandwidth<sp/>=<sp/>advanced_wifi.GetBandwidth();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>bandwidth:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(current_bandwidth));</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Advanced<sp/>features<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a94ce41073e051577d040ad57caf0081d" kindref="member">test_wifi_event_handling</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>WiFi<sp/>event<sp/>handling...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="classEspWifi" kindref="compound">EspWifi</ref><sp/>wifi;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>WiFi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8" kindref="member">hf_wifi_err_t</ref><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1aba6a1fd280dbcd23fee9281eaaef7a20" kindref="member">Initialize</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9a0e0c4b5a5bf02b61ca5aa7db0cf00ea0" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_STATION</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>WiFi:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>event<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>event_received<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><ref refid="group__wifi_1gafc36eb4cdfaf0c2ea45afeaac3ad13c9" kindref="member">hf_wifi_event_callback_t</ref><sp/>callback<sp/>=<sp/>[&amp;event_received](<ref refid="group__wifi_1ga0fc5cd83d2820476528dba010f9ccfbb" kindref="member">hf_wifi_event_t</ref><sp/>event,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>event_data)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WiFi<sp/>event<sp/>received:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(event));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>event_received<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a3fb1805a09d9f9ff00bd15a9af693d88" kindref="member">RegisterEventCallback</ref>(callback);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>register<sp/>event<sp/>callback:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>some<sp/>events<sp/>by<sp/>changing<sp/>modes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1ad572aec1ea4575004b5639a386948c04" kindref="member">SetMode</ref>(<ref refid="group__wifi_1gga90ab2c8a51fc7cb116b659df115407b9aca3fc28648422633c38422074f7e669b" kindref="member">hf_wifi_mode_t::HF_WIFI_MODE_ACCESS_POINT</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>AP<sp/>mode:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>a<sp/>moment<sp/>for<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Unregister<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>wifi.<ref refid="classEspWifi_1a9cd11cd1acebc5455ca6b7357987daa9" kindref="member">UnregisterEventCallback</ref>();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="BaseWifi_8h_1a0d4cc4d0f717f7a4e0287c31be9f4da8a23d810fd453be783ee7acbe5126e5c78" kindref="member">hf_wifi_err_t::WIFI_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>unregister<sp/>event<sp/>callback:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(<ref refid="group__wifi_1gad6a1454d2409e5f92e89682f8a37676a" kindref="member">HfWifiErrToString</ref>(err)).c_str());</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Event<sp/>handling<sp/>test<sp/>completed<sp/>(events<sp/>may<sp/>have<sp/>been<sp/>received)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Event<sp/>handling<sp/>test<sp/>successful&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MAIN<sp/>TEST<sp/>EXECUTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="WifiComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" kindref="member">app_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP32-C6<sp/>WIFI<sp/>COMPREHENSIVE<sp/>TEST<sp/>SUITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HardFOC<sp/>Internal<sp/>Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Target:<sp/>ESP32-C6<sp/>DevKit-M-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>ESP-IDF:<sp/>v5.5+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Features:<sp/>WiFi,<sp/>Access<sp/>Point,<sp/>Network<sp/>Scanning,<sp/>Station<sp/>Connection,<sp/>Power<sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Management,<sp/>Advanced<sp/>Features,<sp/>Event<sp/>Handling,<sp/>Functional<sp/>Tests<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/>Architecture:<sp/>noexcept<sp/>(no<sp/>exception<sp/>handling)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(1000));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>test<sp/>section<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a200bb35a3a48c625b9cb8d2511d6bd87" kindref="member">print_test_section_status</ref>(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>WiFi<sp/>tests<sp/>based<sp/>on<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="WifiComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI<sp/>CORE<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>Structure<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>WiFi<sp/>data<sp/>structure<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;data_structures&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a68d2748ff7bc597fd50c9269af5b6c75" kindref="member">test_wifi_data_structures</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;enums&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a90c22daccbb9110b0e69e3f9b85bf299" kindref="member">test_wifi_enums</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;error_codes&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a1fee3940bfd5358e0e2cbedacafbcde8" kindref="member">test_wifi_error_codes</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="WifiComprehensiveTest_8cpp_1a18cd2ffbdfcfd99fca0f271bedde476b" kindref="member">ENABLE_INTERFACE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI<sp/>INTERFACE<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interface<sp/>Validation<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>WiFi<sp/>interface<sp/>validation<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;interface_validation&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1afd97d02554edaac2ddec99e9c7d7375c" kindref="member">test_wifi_interface_validation</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;integration_interface&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a4993cefa17682c029265fcdc8e1ec30d" kindref="member">test_wifi_integration_interface</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="WifiComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI<sp/>PERFORMANCE<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>and<sp/>Stress<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>WiFi<sp/>performance<sp/>and<sp/>stress<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;performance_interface&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a6bea0341fcc2dc94e671e4e4dc8af66b" kindref="member">test_wifi_performance_interface</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;stress_interface&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a77a97cefa7c2e0f87f481275767c653c" kindref="member">test_wifi_stress_interface</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="WifiComprehensiveTest_8cpp_1a1498811388d24a45a53db97cc52c94e4" kindref="member">ENABLE_FUNCTIONAL_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI<sp/>FUNCTIONAL<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functional<sp/>WiFi<sp/>Tests<sp/>(ACTUAL<sp/>WIFI<sp/>OPERATIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>WiFi<sp/>functional<sp/>tests<sp/>(REAL<sp/>WIFI<sp/>OPERATIONS)...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>These<sp/>tests<sp/>will<sp/>use<sp/>actual<sp/>WiFi<sp/>hardware!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_initialization&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1aafb7c78ccba6bff0009060e873b43e08" kindref="member">test_wifi_initialization</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_access_point&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a647c761ce290d76365072d1c066418ec" kindref="member">test_wifi_access_point_creation</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_network_scanning&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1abb9a7b935e2184d2ec573b9d65ae4bdf" kindref="member">test_wifi_network_scanning</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_station_connection&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1aea644d1ba74bc1e368a04d16343ab035" kindref="member">test_wifi_station_connection</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_power_management&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a6791abb7f13941e9791ea4ba71065963" kindref="member">test_wifi_power_management</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_advanced_features&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a4f4d0eb5a3fcf4513f8619ebfea5f8fb" kindref="member">test_wifi_advanced_features</ref>,<sp/>16384,<sp/>1);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;wifi_event_handling&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a94ce41073e051577d040ad57caf0081d" kindref="member">test_wifi_event_handling</ref>,<sp/>16384,<sp/>1););</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>final<sp/>summary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab7e4c076755ecdf2ad6212cb8f6578ab" kindref="member">print_test_summary</ref>(<ref refid="WifiComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WIFI&quot;</highlight><highlight class="normal">,<sp/><ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIFI<sp/>COMPREHENSIVE<sp/>TEST<sp/>SUITE<sp/>COMPLETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HardFOC<sp/>Internal<sp/>Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="WifiComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>system<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10000));</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="examples/esp32/main/WifiComprehensiveTest.cpp"/>
  </compounddef>
</doxygen>
