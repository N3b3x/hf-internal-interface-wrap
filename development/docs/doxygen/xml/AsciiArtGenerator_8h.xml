<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="AsciiArtGenerator_8h" kind="file" language="C++">
    <compoundname>AsciiArtGenerator.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="AsciiArtComprehensiveTest_8cpp" local="yes">examples/esp32/main/AsciiArtComprehensiveTest.cpp</includedby>
    <includedby refid="GpioComprehensiveTest_8cpp" local="yes">examples/esp32/main/GpioComprehensiveTest.cpp</includedby>
    <includedby refid="AsciiArtGenerator_8cpp" local="yes">src/utils/AsciiArtGenerator.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>inc/utils/AsciiArtGenerator.h</label>
        <link refid="AsciiArtGenerator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>examples/esp32/main/AsciiArtComprehensiveTest.cpp</label>
        <link refid="AsciiArtComprehensiveTest_8cpp"/>
      </node>
      <node id="3">
        <label>examples/esp32/main/GpioComprehensiveTest.cpp</label>
        <link refid="GpioComprehensiveTest_8cpp"/>
      </node>
      <node id="1">
        <label>inc/utils/AsciiArtGenerator.h</label>
        <link refid="AsciiArtGenerator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/utils/AsciiArtGenerator.cpp</label>
        <link refid="AsciiArtGenerator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classAsciiArtGenerator" prot="public">AsciiArtGenerator</innerclass>
    <briefdescription>
<para>Simple ASCII art generator. </para>
    </briefdescription>
    <detaileddescription>
<para>This file provides a simple ASCII art generator that creates large, stylized text from input strings. It focuses only on generating plain ASCII art without formatting - formatting is handled by the Logger system.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classAsciiArtGenerator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classAsciiArtGenerator" kindref="compound">AsciiArtGenerator</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classAsciiArtGenerator_1a90b8da25407accbe12ed5fa67346e98a" kindref="member">AsciiArtGenerator</ref>()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classAsciiArtGenerator_1aeab9a32548c2fefbda9c345c402b99c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classAsciiArtGenerator_1aeab9a32548c2fefbda9c345c402b99c4" kindref="member">~AsciiArtGenerator</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1a5fbd853ebc4fcd647c90c307d4b09eaa" kindref="member">Generate</ref>(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>input)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1a8c964526be3777137b7178e0c5899256" kindref="member">AddCustomCharacter</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character,<sp/>const<sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&amp;<sp/>art_lines)<sp/>noexcept;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1a8c389f7e432f659b2f0e188f69ec7474" kindref="member">RemoveCustomCharacter</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)<sp/>noexcept;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1a3c7febff5e83919dc6088971d1be2dc9" kindref="member">ClearCustomCharacters</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1a623a5ea7b217aa2d20fbfc85b4fd0b61" kindref="member">IsCharacterSupported</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classAsciiArtGenerator_1ab42dc9fb7f379e7ba51431295a207258" kindref="member">GetSupportedCharacters</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>MEMBERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classAsciiArtGenerator_1a3c0a763b63befc2fec4113db17968a03" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&gt;<sp/><ref refid="classAsciiArtGenerator_1a3c0a763b63befc2fec4113db17968a03" kindref="member">custom_characters_</ref>;<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/><ref refid="classAsciiArtGenerator_1ad4b133fd0762afa26339bb2650eab228" kindref="member">GetCharacterArt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="inc/utils/AsciiArtGenerator.h"/>
  </compounddef>
</doxygen>
