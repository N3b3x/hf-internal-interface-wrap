<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structhf__nvs__capabilities__t" kind="struct" language="C++" prot="public">
    <compoundname>hf_nvs_capabilities_t</compoundname>
    <includes refid="EspTypes__NVS_8h" local="no">EspTypes_NVS.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a30251edaa0f83ca63430cf61ce4f0ba3" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hf_nvs_capabilities_t::max_namespaces</definition>
        <argsstring></argsstring>
        <name>max_namespaces</name>
        <qualifiedname>hf_nvs_capabilities_t::max_namespaces</qualifiedname>
        <briefdescription>
<para>Maximum namespaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="109" column="10" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1ae47180670acbbc7ca5c67264d8f53108" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hf_nvs_capabilities_t::max_keys_per_namespace</definition>
        <argsstring></argsstring>
        <name>max_keys_per_namespace</name>
        <qualifiedname>hf_nvs_capabilities_t::max_keys_per_namespace</qualifiedname>
        <briefdescription>
<para>Maximum keys per namespace. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="110" column="10" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a35ad86193e5214b4cd0fd228ca79d508" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hf_nvs_capabilities_t::max_key_length</definition>
        <argsstring></argsstring>
        <name>max_key_length</name>
        <qualifiedname>hf_nvs_capabilities_t::max_key_length</qualifiedname>
        <briefdescription>
<para>Maximum key length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="111" column="10" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1ac797bf5d2d0ad433ecb41332c87fb8a4" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hf_nvs_capabilities_t::max_value_size</definition>
        <argsstring></argsstring>
        <name>max_value_size</name>
        <qualifiedname>hf_nvs_capabilities_t::max_value_size</qualifiedname>
        <briefdescription>
<para>Maximum value size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="112" column="10" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a96ddf04bb913e0967df0ba28c4371ad2" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hf_nvs_capabilities_t::flash_sector_size</definition>
        <argsstring></argsstring>
        <name>flash_sector_size</name>
        <qualifiedname>hf_nvs_capabilities_t::flash_sector_size</qualifiedname>
        <briefdescription>
<para>Flash sector size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="113" column="10" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a0db73ea48c19f9f62383d9ced6ef2e7e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_nvs_capabilities_t::supports_encryption</definition>
        <argsstring></argsstring>
        <name>supports_encryption</name>
        <qualifiedname>hf_nvs_capabilities_t::supports_encryption</qualifiedname>
        <briefdescription>
<para>Encryption support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="114" column="8" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1aed25a4381da34ed61f41496eae77b8fc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_nvs_capabilities_t::supports_hmac_encryption</definition>
        <argsstring></argsstring>
        <name>supports_hmac_encryption</name>
        <qualifiedname>hf_nvs_capabilities_t::supports_hmac_encryption</qualifiedname>
        <briefdescription>
<para>HMAC encryption support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="115" column="8" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a56c576b20942aea101189f90471a1288" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_nvs_capabilities_t::supports_xts_encryption</definition>
        <argsstring></argsstring>
        <name>supports_xts_encryption</name>
        <qualifiedname>hf_nvs_capabilities_t::supports_xts_encryption</qualifiedname>
        <briefdescription>
<para>XTS encryption support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="116" column="8" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1ab9b752d6daf7d3899375846747ebd2fe" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_nvs_capabilities_t::supports_atomic_operations</definition>
        <argsstring></argsstring>
        <name>supports_atomic_operations</name>
        <qualifiedname>hf_nvs_capabilities_t::supports_atomic_operations</qualifiedname>
        <briefdescription>
<para>Atomic operations support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="117" column="8" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__nvs__capabilities__t_1a9141725a7918dc37664bcb87b19b447c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_nvs_capabilities_t::supports_wear_leveling</definition>
        <argsstring></argsstring>
        <name>supports_wear_leveling</name>
        <qualifiedname>hf_nvs_capabilities_t::supports_wear_leveling</qualifiedname>
        <briefdescription>
<para>Wear leveling support. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="118" column="8" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="118" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structhf__nvs__capabilities__t_1aade4d0e7880b1d69f0691b2188410522" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hf_nvs_capabilities_t::hf_nvs_capabilities_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>hf_nvs_capabilities_t</name>
        <qualifiedname>hf_nvs_capabilities_t::hf_nvs_capabilities_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="120" column="3" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="120" bodyend="125"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ESP32 NVS capabilities information. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/mcu/esp32/utils/EspTypes_NVS.h" line="108" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_NVS.h" bodystart="108" bodyend="126"/>
    <listofallmembers>
      <member refid="structhf__nvs__capabilities__t_1a96ddf04bb913e0967df0ba28c4371ad2" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>flash_sector_size</name></member>
      <member refid="structhf__nvs__capabilities__t_1aade4d0e7880b1d69f0691b2188410522" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>hf_nvs_capabilities_t</name></member>
      <member refid="structhf__nvs__capabilities__t_1a35ad86193e5214b4cd0fd228ca79d508" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>max_key_length</name></member>
      <member refid="structhf__nvs__capabilities__t_1ae47180670acbbc7ca5c67264d8f53108" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>max_keys_per_namespace</name></member>
      <member refid="structhf__nvs__capabilities__t_1a30251edaa0f83ca63430cf61ce4f0ba3" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>max_namespaces</name></member>
      <member refid="structhf__nvs__capabilities__t_1ac797bf5d2d0ad433ecb41332c87fb8a4" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>max_value_size</name></member>
      <member refid="structhf__nvs__capabilities__t_1ab9b752d6daf7d3899375846747ebd2fe" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>supports_atomic_operations</name></member>
      <member refid="structhf__nvs__capabilities__t_1a0db73ea48c19f9f62383d9ced6ef2e7e" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>supports_encryption</name></member>
      <member refid="structhf__nvs__capabilities__t_1aed25a4381da34ed61f41496eae77b8fc" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>supports_hmac_encryption</name></member>
      <member refid="structhf__nvs__capabilities__t_1a9141725a7918dc37664bcb87b19b447c" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>supports_wear_leveling</name></member>
      <member refid="structhf__nvs__capabilities__t_1a56c576b20942aea101189f90471a1288" prot="public" virt="non-virtual"><scope>hf_nvs_capabilities_t</scope><name>supports_xts_encryption</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
