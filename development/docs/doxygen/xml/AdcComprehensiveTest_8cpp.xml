<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="AdcComprehensiveTest_8cpp" kind="file" language="C++">
    <compoundname>AdcComprehensiveTest.cpp</compoundname>
    <includes refid="BaseAdc_8h" local="yes">base/BaseAdc.h</includes>
    <includes refid="EspAdc_8h" local="yes">mcu/esp32/EspAdc.h</includes>
    <includes refid="EspTypes__ADC_8h" local="yes">mcu/esp32/utils/EspTypes_ADC.h</includes>
    <includes refid="TestFramework_8h" local="yes">TestFramework.h</includes>
    <includes local="yes">hal/adc_types.h</includes>
    <incdepgraph>
      <node id="1">
        <label>examples/esp32/main/AdcComprehensiveTest.cpp</label>
        <link refid="AdcComprehensiveTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>TestFramework.h</label>
        <link refid="TestFramework_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>base/BaseAdc.h</label>
        <link refid="BaseAdc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>BaseCan.h</label>
        <link refid="BaseCan_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>BaseI2c.h</label>
        <link refid="BaseI2c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>BasePio.h</label>
        <link refid="BasePio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../../../base/BasePwm.h</label>
        <link refid="BasePwm_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>BaseSpi.h</label>
        <link refid="BaseSpi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>BaseUart.h</label>
        <link refid="BaseUart_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mcu/esp32/EspAdc.h</label>
        <link refid="EspAdc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>mcu/esp32/EspGpio.h</label>
        <link refid="EspGpio_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>utils/EspTypes.h</label>
        <link refid="EspTypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>EspTypes_ADC.h</label>
        <link refid="EspTypes__ADC_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>EspTypes_CAN.h</label>
        <link refid="EspTypes__CAN_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>EspTypes_GPIO.h</label>
        <link refid="EspTypes__GPIO_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>EspTypes_I2C.h</label>
        <link refid="EspTypes__I2C_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>EspTypes_PIO.h</label>
        <link refid="EspTypes__PIO_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>EspTypes_PWM.h</label>
        <link refid="EspTypes__PWM_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>EspTypes_SPI.h</label>
        <link refid="EspTypes__SPI_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>EspTypes_Timer.h</label>
        <link refid="EspTypes__Timer_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>EspTypes_UART.h</label>
        <link refid="EspTypes__UART_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="10">
        <label>RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>array</label>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>cstring</label>
      </node>
      <node id="42">
        <label>driver/gpio.h</label>
      </node>
      <node id="27">
        <label>driver/i2c.h</label>
      </node>
      <node id="34">
        <label>driver/spi_master.h</label>
      </node>
      <node id="43">
        <label>esp_adc/adc_cali.h</label>
      </node>
      <node id="44">
        <label>esp_adc/adc_cali_scheme.h</label>
      </node>
      <node id="18">
        <label>esp_adc/adc_continuous.h</label>
      </node>
      <node id="45">
        <label>esp_adc/adc_filter.h</label>
      </node>
      <node id="46">
        <label>esp_adc/adc_monitor.h</label>
      </node>
      <node id="19">
        <label>esp_adc/adc_oneshot.h</label>
      </node>
      <node id="51">
        <label>esp_attr.h</label>
      </node>
      <node id="47">
        <label>esp_log.h</label>
      </node>
      <node id="36">
        <label>esp_timer.h</label>
      </node>
      <node id="11">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="49">
        <label>freertos/queue.h</label>
      </node>
      <node id="12">
        <label>freertos/semphr.h</label>
      </node>
      <node id="13">
        <label>freertos/task.h</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="53">
        <label>hal/adc_types.h</label>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="41">
        <label>memory</label>
      </node>
      <node id="52">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="structadc__queue__message__t" prot="public">adc_queue_message_t</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;ADC_Test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="33" column="19" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" prot="public" static="yes" mutable="no">
        <type><ref refid="structTestResults" kindref="compound">TestResults</ref></type>
        <definition>TestResults g_test_results</definition>
        <argsstring></argsstring>
        <name>g_test_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="35" column="20" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref></type>
        <definition>constexpr hf_channel_id_t TEST_CHANNEL_1</definition>
        <argsstring></argsstring>
        <name>TEST_CHANNEL_1</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="38" column="34" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref></type>
        <definition>constexpr hf_channel_id_t TEST_CHANNEL_2</definition>
        <argsstring></argsstring>
        <name>TEST_CHANNEL_2</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="39" column="34" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref></type>
        <definition>constexpr hf_channel_id_t TEST_CHANNEL_3</definition>
        <argsstring></argsstring>
        <name>TEST_CHANNEL_3</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="40" column="34" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1aa2da33ea24f065eeec74cc7af8d125f1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MIN_VALID_VOLTAGE_MV</definition>
        <argsstring></argsstring>
        <name>MIN_VALID_VOLTAGE_MV</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="43" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a585859d3bdab8d34c1a4c6c50288c13f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MAX_VALID_VOLTAGE_MV</definition>
        <argsstring></argsstring>
        <name>MAX_VALID_VOLTAGE_MV</name>
        <initializer>= 3200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="44" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1ac306121a958d7006004e1776eb84078f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t VOLTAGE_DIVIDER_EXPECTED_MV</definition>
        <argsstring></argsstring>
        <name>VOLTAGE_DIVIDER_EXPECTED_MV</name>
        <initializer>= 1650</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="47" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a520dbb536e85a0cf6cf50e06d27c91b1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t VOLTAGE_DIVIDER_TOLERANCE_MV</definition>
        <argsstring></argsstring>
        <name>VOLTAGE_DIVIDER_TOLERANCE_MV</name>
        <initializer>= 150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="48" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a95957d2dd1668840b166b73854056df6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t GROUND_TOLERANCE_MV</definition>
        <argsstring></argsstring>
        <name>GROUND_TOLERANCE_MV</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="49" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a5a308841610a9c3e3584ddac3b0be458" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t POTENTIOMETER_MAX_MV</definition>
        <argsstring></argsstring>
        <name>POTENTIOMETER_MAX_MV</name>
        <initializer>= 3300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="50" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t ADC_12BIT_MAX_VALUE</definition>
        <argsstring></argsstring>
        <name>ADC_12BIT_MAX_VALUE</name>
        <initializer>= 4095</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="53" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a5fc743b78ba81e8fc1f78dc487c4fd84" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t ADC_12BIT_MID_VALUE</definition>
        <argsstring></argsstring>
        <name>ADC_12BIT_MID_VALUE</name>
        <initializer>= 2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="54" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1ae985615f79b29251914c17a086371210" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t ADC_VOLTAGE_SCALE_FACTOR</definition>
        <argsstring></argsstring>
        <name>ADC_VOLTAGE_SCALE_FACTOR</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="55" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a0ff417fbcddd7b277abba7bc7acabd28" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MONITOR_TEST_DURATION_MS</definition>
        <argsstring></argsstring>
        <name>MONITOR_TEST_DURATION_MS</name>
        <initializer>= 15000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="58" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1adcb4047f9af7e581cc2fffdfefd1b549" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MONITOR_UPDATE_INTERVAL_MS</definition>
        <argsstring></argsstring>
        <name>MONITOR_UPDATE_INTERVAL_MS</name>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="59" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a13a93a4718b34788068e15e23b8d8822" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MONITOR_THRESHOLD_SEPARATION_MV</definition>
        <argsstring></argsstring>
        <name>MONITOR_THRESHOLD_SEPARATION_MV</name>
        <initializer>= 800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="60" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1ae6f08600e5b40e184bbd85285cbc6e7f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t MONITOR_THRESHOLD_OFFSET_MV</definition>
        <argsstring></argsstring>
        <name>MONITOR_THRESHOLD_OFFSET_MV</name>
        <initializer>= 400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="61" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a62b9da4597800648b02525866adcf3ae" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t PERFORMANCE_NUM_CONVERSIONS</definition>
        <argsstring></argsstring>
        <name>PERFORMANCE_NUM_CONVERSIONS</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="64" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1ac90bfec6da69d9c8bf1301ad096bdd48" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t PERFORMANCE_MAX_TIME_US</definition>
        <argsstring></argsstring>
        <name>PERFORMANCE_MAX_TIME_US</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="65" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a9d65b02a0300cb5c00f356e0cda27057" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t CONTINUOUS_TEST_DURATION_MS</definition>
        <argsstring></argsstring>
        <name>CONTINUOUS_TEST_DURATION_MS</name>
        <initializer>= 2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="68" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a0a33412431ee4b59b74369f43b23e460" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t CONTINUOUS_SAMPLES_PER_FRAME</definition>
        <argsstring></argsstring>
        <name>CONTINUOUS_SAMPLES_PER_FRAME</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="69" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a36af6c8c29c7ebb832f729f5fc2c4804" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t CONTINUOUS_MAX_STORE_FRAMES</definition>
        <argsstring></argsstring>
        <name>CONTINUOUS_MAX_STORE_FRAMES</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="70" column="27" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" prot="public" static="yes" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t adc_data_queue</definition>
        <argsstring></argsstring>
        <name>adc_data_queue</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="78" column="22" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" prot="public" static="yes" mutable="no">
        <type>volatile bool</type>
        <definition>volatile bool continuous_test_active</definition>
        <argsstring></argsstring>
        <name>continuous_test_active</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="79" column="22" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" prot="public" static="yes" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t continuous_samples_received</definition>
        <argsstring></argsstring>
        <name>continuous_samples_received</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="80" column="26" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a870969aed402e568f00ae5ecd90882a6" prot="public" static="yes" mutable="no">
        <type>volatile bool</type>
        <definition>volatile bool monitor_test_active</definition>
        <argsstring></argsstring>
        <name>monitor_test_active</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="83" column="22" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" prot="public" static="yes" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t high_threshold_count</definition>
        <argsstring></argsstring>
        <name>high_threshold_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="84" column="26" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" prot="public" static="yes" mutable="no">
        <type>volatile uint32_t</type>
        <definition>volatile uint32_t low_threshold_count</definition>
        <argsstring></argsstring>
        <name>low_threshold_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="85" column="26" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" prot="public" static="yes" mutable="no">
        <type>volatile uint64_t</type>
        <definition>volatile uint64_t last_monitor_event_time</definition>
        <argsstring></argsstring>
        <name>last_monitor_event_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="86" column="26" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_CORE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_CORE_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="94" column="23" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a367a8de50caab51fe1ae324e0ce489a5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_CONVERSION_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_CONVERSION_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="96" column="23" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_ADVANCED_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_ADVANCED_TESTS</name>
        <initializer>=
    true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="98" column="23" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="AdcComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool ENABLE_PERFORMANCE_TESTS</definition>
        <argsstring></argsstring>
        <name>ENABLE_PERFORMANCE_TESTS</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="100" column="23" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a22e33d3caac71550681d8f8cee80de0d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_hardware_validation</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_hardware_validation</name>
        <briefdescription>
<para>Test hardware setup validation. </para>
        </briefdescription>
        <detaileddescription>
<para>Validates the expected hardware connections before running other tests </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="289" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="289" bodyend="363" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a32f9a6942d6f8dd6146056eae88d54ea" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_initialization</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_initialization</name>
        <briefdescription>
<para>Test ADC initialization and basic setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="368" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="368" bodyend="403" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a8fc35c1fcda3d9ef714f649416bd74a7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_channel_configuration</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_channel_configuration</name>
        <briefdescription>
<para>Test ADC channel configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="408" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="408" bodyend="450" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a2c1dceda8a69d0327f24f8006b02cae6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_basic_conversion</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_basic_conversion</name>
        <briefdescription>
<para>Test basic ADC conversion functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="455" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="455" bodyend="519" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a67d069e784d537e456dc2306195a7af4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_calibration</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_calibration</name>
        <briefdescription>
<para>Test ADC calibration functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="524" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="524" bodyend="564" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a6f5cf41c91382d0015b9d56d84b568a3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_multiple_channels</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_multiple_channels</name>
        <briefdescription>
<para>Test reading from multiple ADC channels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="569" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="569" bodyend="641" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a8d6ce47f62aea0a979618c8a074e8ba4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_averaging</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_averaging</name>
        <briefdescription>
<para>Test ADC averaging functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="646" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="646" bodyend="697" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="109" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1aa432eb06b934c9bd7db25767b6ca6fd1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_continuous_mode</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_continuous_mode</name>
        <briefdescription>
<para>Test ADC continuous mode functionality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="702" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="702" bodyend="819" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1afd78ac718b1da1334fcfffd29c60598f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_monitor_thresholds</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_monitor_thresholds</name>
        <briefdescription>
<para>Test ADC monitor threshold functionality with proper ESP-IDF sequence. </para>
        </briefdescription>
        <detaileddescription>
<para>Tests threshold monitoring on the potentiometer channel (GPIO0)</para>
<para>Proper ESP-IDF v5.5 sequence:<orderedlist>
<listitem><para>Use oneshot mode to read baseline voltage from potentiometer</para>
</listitem><listitem><para>Stop oneshot mode and setup continuous mode with monitor</para>
</listitem><listitem><para>Configure monitor -&gt; Register callbacks -&gt; Enable monitor -&gt; Start continuous</para>
</listitem></orderedlist>
</para>
<para>Expected hardware setup:<itemizedlist>
<listitem><para>GPIO0: Connected to potentiometer (0-3.3V variable) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="833" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="833" bodyend="1211" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a7bc4ca596e10c2ded9a23cabbc3d951e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_error_handling</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_error_handling</name>
        <briefdescription>
<para>Test ADC error handling. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="1216" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="1216" bodyend="1276" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a65818d9ae4c68ab31260af9c08f5d809" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_statistics</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_statistics</name>
        <briefdescription>
<para>Test ADC statistics and diagnostics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="1281" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="1281" bodyend="1347" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="113" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1aae4cbe1277fd36a165e3609ca2f3ac9a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_adc_performance</definition>
        <argsstring>() noexcept</argsstring>
        <name>test_adc_performance</name>
        <briefdescription>
<para>Test ADC performance characteristics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="1352" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="1352" bodyend="1394" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool initialize_test_adc</definition>
        <argsstring>(EspAdc &amp;adc) noexcept</argsstring>
        <name>initialize_test_adc</name>
        <param>
          <type><ref refid="classEspAdc" kindref="compound">EspAdc</ref> &amp;</type>
          <declname>adc</declname>
        </param>
        <briefdescription>
<para>Initialize ADC for testing with proper configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="153" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="153" bodyend="161" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool configure_test_channels</definition>
        <argsstring>(EspAdc &amp;adc) noexcept</argsstring>
        <name>configure_test_channels</name>
        <param>
          <type><ref refid="classEspAdc" kindref="compound">EspAdc</ref> &amp;</type>
          <declname>adc</declname>
        </param>
        <briefdescription>
<para>Configure test channels with appropriate settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="166" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="166" bodyend="218" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="118" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a49d26ef3a8d18b2b47c3aa81bc20c49e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool validate_voltage_reading</definition>
        <argsstring>(uint32_t voltage_mv, const char *channel_name) noexcept</argsstring>
        <name>validate_voltage_reading</name>
        <param>
          <type>uint32_t</type>
          <declname>voltage_mv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>channel_name</declname>
        </param>
        <briefdescription>
<para>Validate if voltage reading is within reasonable range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="223" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="223" bodyend="232" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a469b9ca631f8e14c4cbb45ee102f514c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool continuous_callback</definition>
        <argsstring>(const hf_adc_continuous_data_t *data, void *user_data) noexcept</argsstring>
        <name>continuous_callback</name>
        <param>
          <type>const <ref refid="structhf__adc__continuous__data__t" kindref="compound">hf_adc_continuous_data_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Continuous mode callback function (ISR-safe) - extracts latest voltage in real-time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="237" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="237" bodyend="262" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setup_adc_config</definition>
        <argsstring>(hf_adc_unit_config_t &amp;config, hf_adc_mode_t mode) noexcept</argsstring>
        <name>setup_adc_config</name>
        <param>
          <type><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044" kindref="member">hf_adc_mode_t</ref></type>
          <declname>mode</declname>
          <defval><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref></defval>
        </param>
        <briefdescription>
<para>Setup ADC configuration with test channels pre-configured. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="127" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="127" bodyend="148" declfile="examples/esp32/main/AdcComprehensiveTest.cpp" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1af27f6afa257763e81799a31cee1a993f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void monitor_callback</definition>
        <argsstring>(const hf_adc_monitor_event_t *event, void *user_data) noexcept</argsstring>
        <name>monitor_callback</name>
        <param>
          <type>const <ref refid="structhf__adc__monitor__event__t" kindref="compound">hf_adc_monitor_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Monitor callback function for threshold testing (ISR-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="267" column="6" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="267" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="AdcComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void app_main</definition>
        <argsstring>(void)</argsstring>
        <name>app_main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/esp32/main/AdcComprehensiveTest.cpp" line="1396" column="17" bodyfile="examples/esp32/main/AdcComprehensiveTest.cpp" bodystart="1396" bodyend="1492"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Comprehensive ADC testing suite for ESP32-C6 DevKit-M-1 (noexcept) </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains a dedicated, comprehensive test suite for the <ref refid="classEspAdc" kindref="compound">EspAdc</ref> class targeting ESP32-C6 with ESP-IDF v5.5+. It provides thorough testing of all ADC functionalities including basic operations, calibration, continuous conversion, and hardware-specific capabilities.</para>
<para>Hardware Configuration (ESP32-C6 DevKit-M-1):<itemizedlist>
<listitem><para>GPIO3 (ADC1_CH3) - Connect to 3.3V via voltage divider (should read ~1.65V)</para>
</listitem><listitem><para>GPIO0 (ADC1_CH0) - Connect to potentiometer center tap (0-3.3V variable for monitor testing)</para>
</listitem><listitem><para>GPIO1 (ADC1_CH1) - Connect to ground via 10k resistor (should read ~0V)</para>
</listitem></itemizedlist>
</para>
<para>Monitor Test Requirements:<itemizedlist>
<listitem><para>Adjust potentiometer on GPIO0 during monitor test to trigger thresholds</para>
</listitem><listitem><para>Test will set thresholds automatically based on initial reading</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BaseAdc_8h" kindref="compound">base/BaseAdc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspAdc_8h" kindref="compound">mcu/esp32/EspAdc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspTypes__ADC_8h" kindref="compound">mcu/esp32/utils/EspTypes_ADC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TestFramework_8h" kindref="compound">TestFramework.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>headers<sp/>for<sp/>ADC<sp/>continuous<sp/>mode<sp/>data<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hal/adc_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ADC_Test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structTestResults" kindref="compound">TestResults</ref><sp/><ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>configuration<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/><ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref><sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>GPIO3<sp/>-<sp/>ADC1_CH3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/><ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>GPIO0<sp/>-<sp/>ADC1_CH0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/><ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>GPIO1<sp/>-<sp/>ADC1_CH1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expected<sp/>voltage<sp/>ranges<sp/>for<sp/>test<sp/>validation<sp/>(in<sp/>millivolts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1aa2da33ea24f065eeec74cc7af8d125f1" kindref="member">MIN_VALID_VOLTAGE_MV</ref><sp/>=<sp/>100;<sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>valid<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a585859d3bdab8d34c1a4c6c50288c13f" kindref="member">MAX_VALID_VOLTAGE_MV</ref><sp/>=<sp/>3200;<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>valid<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hardware<sp/>test<sp/>voltage<sp/>expectations<sp/>(in<sp/>millivolts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1ac306121a958d7006004e1776eb84078f" kindref="member">VOLTAGE_DIVIDER_EXPECTED_MV</ref><sp/>=<sp/>1650;<sp/></highlight><highlight class="comment">//<sp/>3.3V<sp/>/<sp/>2<sp/>=<sp/>1.65V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a520dbb536e85a0cf6cf50e06d27c91b1" kindref="member">VOLTAGE_DIVIDER_TOLERANCE_MV</ref><sp/>=<sp/>150;<sp/></highlight><highlight class="comment">//<sp/>±150mV<sp/>tolerance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a95957d2dd1668840b166b73854056df6" kindref="member">GROUND_TOLERANCE_MV</ref><sp/>=<sp/>300;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ground<sp/>should<sp/>be<sp/>&lt;<sp/>300mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5a308841610a9c3e3584ddac3b0be458" kindref="member">POTENTIOMETER_MAX_MV</ref><sp/>=<sp/>3300;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Potentiometer<sp/>max<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ADC<sp/>technical<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" kindref="member">ADC_12BIT_MAX_VALUE</ref><sp/>=<sp/>4095;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12-bit<sp/>ADC<sp/>maximum<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5fc743b78ba81e8fc1f78dc487c4fd84" kindref="member">ADC_12BIT_MID_VALUE</ref><sp/>=<sp/>2048;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12-bit<sp/>ADC<sp/>mid-scale<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1ae985615f79b29251914c17a086371210" kindref="member">ADC_VOLTAGE_SCALE_FACTOR</ref><sp/>=<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>mV<sp/>to<sp/>V<sp/>conversion<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Monitor<sp/>test<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a0ff417fbcddd7b277abba7bc7acabd28" kindref="member">MONITOR_TEST_DURATION_MS</ref><sp/>=<sp/>15000;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>15<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1adcb4047f9af7e581cc2fffdfefd1b549" kindref="member">MONITOR_UPDATE_INTERVAL_MS</ref><sp/>=<sp/>2000;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>second<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a13a93a4718b34788068e15e23b8d8822" kindref="member">MONITOR_THRESHOLD_SEPARATION_MV</ref><sp/>=<sp/>800;<sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>threshold<sp/>separation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1ae6f08600e5b40e184bbd85285cbc6e7f" kindref="member">MONITOR_THRESHOLD_OFFSET_MV</ref><sp/>=<sp/>400;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Threshold<sp/>offset<sp/>from<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performance<sp/>test<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a62b9da4597800648b02525866adcf3ae" kindref="member">PERFORMANCE_NUM_CONVERSIONS</ref><sp/>=<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>conversions<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1ac90bfec6da69d9c8bf1301ad096bdd48" kindref="member">PERFORMANCE_MAX_TIME_US</ref><sp/>=<sp/>1000;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>acceptable<sp/>time<sp/>per<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Continuous<sp/>mode<sp/>test<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a9d65b02a0300cb5c00f356e0cda27057" kindref="member">CONTINUOUS_TEST_DURATION_MS</ref><sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a0a33412431ee4b59b74369f43b23e460" kindref="member">CONTINUOUS_SAMPLES_PER_FRAME</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a36af6c8c29c7ebb832f729f5fc2c4804" kindref="member">CONTINUOUS_MAX_STORE_FRAMES</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>test<sp/>data<sp/>for<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structadc__queue__message__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structadc__queue__message__t" kindref="compound">adc_queue_message_t</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structadc__queue__message__t_1a3a061e2d958466414ef03180cdc02c97" kindref="member">sample_count</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structadc__queue__message__t_1abce6177e500fe14214f7cb85297f2022" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" kindref="member">continuous_samples_received</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>test<sp/>data<sp/>for<sp/>monitor<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a870969aed402e568f00ae5ecd90882a6" kindref="member">monitor_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" kindref="member">last_monitor_event_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST<sp/>SECTION<sp/>CONFIGURATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable/disable<sp/>specific<sp/>test<sp/>categories<sp/>by<sp/>setting<sp/>to<sp/>true<sp/>or<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Core<sp/>ADC<sp/>functionality<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Hardware<sp/>validation,<sp/>initialization,<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a367a8de50caab51fe1ae324e0ce489a5" kindref="member">ENABLE_CONVERSION_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>conversion,<sp/>calibration,<sp/>multiple<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" kindref="member">ENABLE_ADVANCED_TESTS</ref><sp/>=</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Averaging,<sp/>continuous<sp/>mode,<sp/>monitor<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Error<sp/>handling,<sp/>statistics,<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a22e33d3caac71550681d8f8cee80de0d" kindref="member">test_hardware_validation</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a32f9a6942d6f8dd6146056eae88d54ea" kindref="member">test_adc_initialization</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a8fc35c1fcda3d9ef714f649416bd74a7" kindref="member">test_adc_channel_configuration</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a2c1dceda8a69d0327f24f8006b02cae6" kindref="member">test_adc_basic_conversion</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a67d069e784d537e456dc2306195a7af4" kindref="member">test_adc_calibration</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a6f5cf41c91382d0015b9d56d84b568a3" kindref="member">test_adc_multiple_channels</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a8d6ce47f62aea0a979618c8a074e8ba4" kindref="member">test_adc_averaging</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1aa432eb06b934c9bd7db25767b6ca6fd1" kindref="member">test_adc_continuous_mode</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1afd78ac718b1da1334fcfffd29c60598f" kindref="member">test_adc_monitor_thresholds</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7bc4ca596e10c2ded9a23cabbc3d951e" kindref="member">test_adc_error_handling</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a65818d9ae4c68ab31260af9c08f5d809" kindref="member">test_adc_statistics</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1aae4cbe1277fd36a165e3609ca2f3ac9a" kindref="member">test_adc_performance</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(<ref refid="classEspAdc" kindref="compound">EspAdc</ref>&amp;<sp/>adc)<sp/>noexcept;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(<ref refid="classEspAdc" kindref="compound">EspAdc</ref>&amp;<sp/>adc)<sp/>noexcept;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a49d26ef3a8d18b2b47c3aa81bc20c49e" kindref="member">validate_voltage_reading</ref>(uint32_t<sp/>voltage_mv,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>channel_name)<sp/>noexcept;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a469b9ca631f8e14c4cbb45ee102f514c" kindref="member">continuous_callback</ref>(const<sp/><ref refid="structhf__adc__continuous__data__t" kindref="compound">hf_adc_continuous_data_t</ref>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)<sp/>noexcept;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(<ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref>&amp;<sp/>config,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044" kindref="member">hf_adc_mode_t</ref><sp/>mode<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044" kindref="member">hf_adc_mode_t</ref>::<ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">ONESHOT</ref>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(<ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref>&amp;<sp/>config,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044" kindref="member">hf_adc_mode_t</ref><sp/>mode)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>config<sp/>=<sp/>{};<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>config.unit_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>config.mode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>config.bit_width<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pre-configure<sp/>all<sp/>test<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>].channel_id<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>].attenuation<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>].bitwidth<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>].enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>].channel_id<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>].attenuation<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>].bitwidth<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>].enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>].channel_id<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>].attenuation<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>].bitwidth<sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>config.channel_configs[<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>].enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(<ref refid="classEspAdc" kindref="compound">EspAdc</ref>&amp;<sp/>adc)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adc.EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>ADC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>initialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(<ref refid="classEspAdc" kindref="compound">EspAdc</ref>&amp;<sp/>adc)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>test<sp/>channels<sp/>with<sp/>12dB<sp/>attenuation<sp/>for<sp/>full<sp/>3.3V<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Channel<sp/>0<sp/>(GPIO0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.ConfigureChannel(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Channel<sp/>1<sp/>(GPIO1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.ConfigureChannel(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Channel<sp/>2<sp/>(GPIO2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.ConfigureChannel(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>all<sp/>test<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.EnableChannel(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>channel<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.EnableChannel(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>channel<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>adc.EnableChannel(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>channel<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>test<sp/>channels<sp/>configured<sp/>and<sp/>enabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a49d26ef3a8d18b2b47c3aa81bc20c49e" kindref="member">validate_voltage_reading</ref>(uint32_t<sp/>voltage_mv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>channel_name)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voltage_mv<sp/>&lt;<sp/>MIN_VALID_VOLTAGE_MV<sp/>||<sp/>voltage_mv<sp/>&gt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1a585859d3bdab8d34c1a4c6c50288c13f" kindref="member">MAX_VALID_VOLTAGE_MV</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%s<sp/>voltage<sp/>%lu<sp/>mV<sp/>outside<sp/>valid<sp/>range<sp/>[%lu<sp/>-<sp/>%lu<sp/>mV]&quot;</highlight><highlight class="normal">,<sp/>channel_name,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage_mv,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aa2da33ea24f065eeec74cc7af8d125f1" kindref="member">MIN_VALID_VOLTAGE_MV</ref>,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a585859d3bdab8d34c1a4c6c50288c13f" kindref="member">MAX_VALID_VOLTAGE_MV</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%s<sp/>voltage:<sp/>%lu<sp/>mV<sp/>[VALID]&quot;</highlight><highlight class="normal">,<sp/>channel_name,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a469b9ca631f8e14c4cbb45ee102f514c" kindref="member">continuous_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__adc__continuous__data__t" kindref="compound">hf_adc_continuous_data_t</ref>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>(void)user_data;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>parameter<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>continuous<sp/>mode<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>samples<sp/>received</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" kindref="member">continuous_samples_received</ref><sp/>+=<sp/>data-&gt;conversion_count;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>minimal<sp/>data<sp/>to<sp/>queue<sp/>for<sp/>processing<sp/>in<sp/>main<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structadc__queue__message__t" kindref="compound">adc_queue_message_t</ref><sp/>msg;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="structadc__queue__message__t_1a3a061e2d958466414ef03180cdc02c97" kindref="member">sample_count</ref><sp/>=<sp/>data-&gt;conversion_count;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="structadc__queue__message__t_1abce6177e500fe14214f7cb85297f2022" kindref="member">timestamp</ref><sp/>=<sp/>data-&gt;timestamp_us;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseType_t<sp/>higher_priority_task_woken<sp/>=<sp/>pdFALSE;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xQueueSendFromISR(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>,<sp/>&amp;msg,<sp/>&amp;higher_priority_task_woken);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>higher_priority_task_woken<sp/>==<sp/>pdTRUE;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>yield<sp/>to<sp/>higher<sp/>priority<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1af27f6afa257763e81799a31cee1a993f" kindref="member">monitor_callback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhf__adc__monitor__event__t" kindref="compound">hf_adc_monitor_event_t</ref>*<sp/>event,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>(void)user_data;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>parameter<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1a870969aed402e568f00ae5ecd90882a6" kindref="member">monitor_test_active</ref><sp/>||<sp/>event<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>counters<sp/>based<sp/>on<sp/>event<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;event_type<sp/>==<sp/><ref refid="EspTypes__ADC_8h_1acb5a927e5861c1dc726aa5e27097764ea36242206902527592cc6da6d4308432d" kindref="member">hf_adc_monitor_event_type_t::HIGH_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref>++;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;event_type<sp/>==<sp/><ref refid="EspTypes__ADC_8h_1acb5a927e5861c1dc726aa5e27097764eae70e931d1521d99c7b1502fbf6d8274d" kindref="member">hf_adc_monitor_event_type_t::LOW_THRESH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>++;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>timestamp<sp/>of<sp/>last<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" kindref="member">last_monitor_event_time</ref><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;timestamp_us;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a22e33d3caac71550681d8f8cee80de0d" kindref="member">test_hardware_validation</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Validating<sp/>hardware<sp/>setup...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>connections:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>GPIO3:<sp/>3.3V<sp/>via<sp/>voltage<sp/>divider<sp/>(should<sp/>read<sp/>~1.65V)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>GPIO0:<sp/>Potentiometer<sp/>center<sp/>tap<sp/>(variable<sp/>0-3.3V)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>GPIO1:<sp/>Ground<sp/>via<sp/>10kΩ<sp/>resistor<sp/>(should<sp/>read<sp/>~0V)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>channels<sp/>and<sp/>validate<sp/>hardware<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO3<sp/>-<sp/>High<sp/>reference<sp/>(should<sp/>be<sp/>~1.65V<sp/>from<sp/>voltage<sp/>divider)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>uint32_t<sp/>high_voltage_mv;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_adc.ReadSingleVoltage(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>high_voltage_mv)<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO3<sp/>(HIGH):<sp/>%lu<sp/>mV&quot;</highlight><highlight class="normal">,<sp/>high_voltage_mv);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(high_voltage_mv<sp/>&lt;<sp/>(<ref refid="AdcComprehensiveTest_8cpp_1ac306121a958d7006004e1776eb84078f" kindref="member">VOLTAGE_DIVIDER_EXPECTED_MV</ref><sp/>-<sp/><ref refid="AdcComprehensiveTest_8cpp_1a520dbb536e85a0cf6cf50e06d27c91b1" kindref="member">VOLTAGE_DIVIDER_TOLERANCE_MV</ref>)<sp/>||</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high_voltage_mv<sp/>&gt;<sp/>(<ref refid="AdcComprehensiveTest_8cpp_1ac306121a958d7006004e1776eb84078f" kindref="member">VOLTAGE_DIVIDER_EXPECTED_MV</ref><sp/>+<sp/><ref refid="AdcComprehensiveTest_8cpp_1a520dbb536e85a0cf6cf50e06d27c91b1" kindref="member">VOLTAGE_DIVIDER_TOLERANCE_MV</ref>))<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GPIO3:<sp/>Expected<sp/>~%lu<sp/>mV<sp/>(actual<sp/>voltage<sp/>divider<sp/>ratio),<sp/>got<sp/>%lu<sp/>mV<sp/>-<sp/>check<sp/>voltage<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;divider!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1ac306121a958d7006004e1776eb84078f" kindref="member">VOLTAGE_DIVIDER_EXPECTED_MV</ref>,<sp/>high_voltage_mv);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO3:<sp/>Hardware<sp/>connection<sp/>verified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>GPIO3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO1<sp/>-<sp/>Low<sp/>reference<sp/>(should<sp/>be<sp/>~0V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>uint32_t<sp/>low_voltage_mv;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_adc.ReadSingleVoltage(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>,<sp/>low_voltage_mv)<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO1<sp/>(LOW):<sp/>%lu<sp/>mV&quot;</highlight><highlight class="normal">,<sp/>low_voltage_mv);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(low_voltage_mv<sp/>&gt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1a95957d2dd1668840b166b73854056df6" kindref="member">GROUND_TOLERANCE_MV</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO1:<sp/>Expected<sp/>~0mV,<sp/>got<sp/>%lu<sp/>mV<sp/>-<sp/>check<sp/>ground<sp/>connection!&quot;</highlight><highlight class="normal">,<sp/>low_voltage_mv);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO1:<sp/>Hardware<sp/>connection<sp/>verified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>GPIO1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GPIO0<sp/>-<sp/>Variable<sp/>(potentiometer<sp/>-<sp/>just<sp/>check<sp/>it&apos;s<sp/>reasonable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>uint32_t<sp/>pot_voltage_mv;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_adc.ReadSingleVoltage(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/>pot_voltage_mv)<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO0<sp/>(POT):<sp/>%lu<sp/>mV&quot;</highlight><highlight class="normal">,<sp/>pot_voltage_mv);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pot_voltage_mv<sp/>&gt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5a308841610a9c3e3584ddac3b0be458" kindref="member">POTENTIOMETER_MAX_MV</ref>)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO0:<sp/>%lu<sp/>mV<sp/>seems<sp/>high<sp/>-<sp/>check<sp/>potentiometer<sp/>connection&quot;</highlight><highlight class="normal">,<sp/>pot_voltage_mv);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO0:<sp/>Potentiometer<sp/>reading<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>GPIO0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>hardware_ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hardware_ok)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Hardware<sp/>validation<sp/>passed<sp/>-<sp/>all<sp/>connections<sp/>verified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[FAILED]<sp/>Hardware<sp/>validation<sp/>failed<sp/>-<sp/>check<sp/>connections<sp/>before<sp/>proceeding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hardware_ok;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a32f9a6942d6f8dd6146056eae88d54ea" kindref="member">test_adc_initialization</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>initialization...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>ADC<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>uint8_t<sp/>max_channels<sp/>=<sp/>test_adc.GetMaxChannels();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_channels<sp/>!=<sp/>7)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>has<sp/>7<sp/>ADC<sp/>channels<sp/>(0-6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>max<sp/>channels:<sp/>%d<sp/>(expected<sp/>7)&quot;</highlight><highlight class="normal">,<sp/>max_channels);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>channel<sp/>availability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>7;<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsChannelAvailable(ch))<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%ld<sp/>should<sp/>be<sp/>available&quot;</highlight><highlight class="normal">,<sp/>ch);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>invalid<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_adc.IsChannelAvailable(7))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>7<sp/>should<sp/>not<sp/>be<sp/>available<sp/>on<sp/>ESP32-C6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>initialization<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a8fc35c1fcda3d9ef714f649416bd74a7" kindref="member">test_adc_channel_configuration</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>channel<sp/>configuration...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>channels<sp/>are<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsChannelEnabled(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>))<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>should<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsChannelEnabled(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>))<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>should<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsChannelEnabled(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>))<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>should<sp/>be<sp/>enabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>disabling<sp/>a<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.DisableChannel(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>disable<sp/>channel<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_adc.IsChannelEnabled(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>))<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>should<sp/>be<sp/>disabled&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>channel<sp/>configuration<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a2c1dceda8a69d0327f24f8006b02cae6" kindref="member">test_adc_basic_conversion</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>basic<sp/>ADC<sp/>conversion...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>raw<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>uint32_t<sp/>raw_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ReadSingleRaw(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>raw_value);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>raw<sp/>value<sp/>from<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_value<sp/>&gt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" kindref="member">ADC_12BIT_MAX_VALUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Raw<sp/>value<sp/>%lu<sp/>exceeds<sp/>12-bit<sp/>maximum<sp/>(%lu)&quot;</highlight><highlight class="normal">,<sp/>raw_value,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" kindref="member">ADC_12BIT_MAX_VALUE</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>raw<sp/>reading:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>),</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_value);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>voltage<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>uint32_t<sp/>voltage_mv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadSingleVoltage(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>voltage<sp/>from<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1a49d26ef3a8d18b2b47c3aa81bc20c49e" kindref="member">validate_voltage_reading</ref>(voltage_mv,<sp/></highlight><highlight class="stringliteral">&quot;CH1&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>BaseAdc<sp/>interface<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voltage_v<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadChannelV(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/>voltage_v);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>voltage<sp/>(V)<sp/>from<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadChannelCount(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/>count);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>count<sp/>from<sp/>channel<sp/>%lu:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu:<sp/>%.3fV,<sp/>count:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>),</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage_v,<sp/>count);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Basic<sp/>ADC<sp/>conversion<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a67d069e784d537e456dc2306195a7af4" kindref="member">test_adc_calibration</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>calibration...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>adc_cfg.<ref refid="structhf__adc__unit__config__t_1a0408122facaca850618d55a337663c04" kindref="member">calibration_config</ref>.<ref refid="structhf__adc__calibration__config__t_1a8df0f9715e45be1004ae9952d87bfbb7" kindref="member">enable_calibration</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>calibration<sp/>for<sp/>different<sp/>attenuation<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.InitializeCalibration(<ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>calibration:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>calibration<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsCalibrationAvailable(<ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Calibration<sp/>not<sp/>available<sp/>for<sp/>12dB<sp/>attenuation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>necessarily<sp/>a<sp/>failure,<sp/>continue<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Calibration<sp/>available<sp/>for<sp/>12dB<sp/>attenuation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>raw<sp/>to<sp/>voltage<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>test_raw<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5fc743b78ba81e8fc1f78dc487c4fd84" kindref="member">ADC_12BIT_MID_VALUE</ref>;<sp/></highlight><highlight class="comment">//<sp/>Mid-scale<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>converted_voltage<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>test_adc.RawToVoltage(test_raw,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>,<sp/>converted_voltage);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Raw<sp/>%lu<sp/>converted<sp/>to<sp/>%lu<sp/>mV&quot;</highlight><highlight class="normal">,<sp/>test_raw,<sp/>converted_voltage);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Raw<sp/>to<sp/>voltage<sp/>conversion<sp/>failed:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>calibration<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a6f5cf41c91382d0015b9d56d84b568a3" kindref="member">test_adc_multiple_channels</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>multiple<sp/>ADC<sp/>channels...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>multiple<sp/>channel<sp/>reading<sp/>using<sp/>BaseAdc<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/>channels[]<sp/>=<sp/>{<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>};</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>uint32_t<sp/>readings[3]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voltages[3]<sp/>=<sp/>{0.0f};</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ReadMultipleChannels(channels,<sp/>3,<sp/>readings,<sp/>voltages);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>multiple<sp/>channels:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>readings<sp/>with<sp/>hardware-specific<sp/>expectations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%ld<sp/>(GPIO%ld):<sp/>raw=%lu,<sp/>voltage=%.3fV&quot;</highlight><highlight class="normal">,<sp/>channels[i],<sp/>channels[i],</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readings[i],<sp/>voltages[i]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readings[i]<sp/>&gt;<sp/>4095)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%ld<sp/>raw<sp/>reading<sp/>%lu<sp/>exceeds<sp/>12-bit<sp/>maximum&quot;</highlight><highlight class="normal">,<sp/>channels[i],<sp/>readings[i]);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>voltage_mv<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(voltages[i]<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hardware-specific<sp/>validation<sp/>based<sp/>on<sp/>expected<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels[i]<sp/>==<sp/><ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>GPIO3<sp/>-<sp/>High<sp/>reference<sp/>(~3.3V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voltage_mv<sp/>&lt;<sp/>2800<sp/>||<sp/>voltage_mv<sp/>&gt;<sp/>3300)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO3<sp/>(HIGH):<sp/>Expected<sp/>~3.3V,<sp/>got<sp/>%lu<sp/>mV<sp/>-<sp/>check<sp/>voltage<sp/>divider<sp/>connection&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage_mv);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO3<sp/>(HIGH):<sp/>%lu<sp/>mV<sp/>-<sp/>within<sp/>expected<sp/>range&quot;</highlight><highlight class="normal">,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels[i]<sp/>==<sp/><ref refid="AdcComprehensiveTest_8cpp_1a1030605b0be67c2ae03ccb1a2ca9cc2b" kindref="member">TEST_CHANNEL_3</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>GPIO1<sp/>-<sp/>Low<sp/>reference<sp/>(~0V)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voltage_mv<sp/>&gt;<sp/>300)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO1<sp/>(LOW):<sp/>Expected<sp/>~0V,<sp/>got<sp/>%lu<sp/>mV<sp/>-<sp/>check<sp/>ground<sp/>connection&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage_mv);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO1<sp/>(LOW):<sp/>%lu<sp/>mV<sp/>-<sp/>within<sp/>expected<sp/>range&quot;</highlight><highlight class="normal">,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels[i]<sp/>==<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>GPIO0<sp/>-<sp/>Variable<sp/>(potentiometer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voltage_mv<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>voltage_mv<sp/>&lt;=<sp/>3300)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO0<sp/>(POT):<sp/>%lu<sp/>mV<sp/>-<sp/>potentiometer<sp/>reading&quot;</highlight><highlight class="normal">,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GPIO0<sp/>(POT):<sp/>%lu<sp/>mV<sp/>-<sp/>outside<sp/>valid<sp/>range&quot;</highlight><highlight class="normal">,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>channel_name[16];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(channel_name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(channel_name),<sp/></highlight><highlight class="stringliteral">&quot;CH%ld&quot;</highlight><highlight class="normal">,<sp/>channels[i]);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1a49d26ef3a8d18b2b47c3aa81bc20c49e" kindref="member">validate_voltage_reading</ref>(voltage_mv,<sp/>channel_name))<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%ld<sp/>voltage<sp/>validation<sp/>failed,<sp/>but<sp/>continuing<sp/>test&quot;</highlight><highlight class="normal">,<sp/>channels[i]);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>Multiple<sp/>ADC<sp/>channels<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a8d6ce47f62aea0a979618c8a074e8ba4" kindref="member">test_adc_averaging</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>averaging...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>averaging<sp/>with<sp/>different<sp/>sample<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>uint16_t<sp/>sample_counts[]<sp/>=<sp/>{1,<sp/>4,<sp/>8,<sp/>16};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sample_counts)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sample_counts[0]);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>averaged_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ReadAveraged(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>sample_counts[i],<sp/>averaged_value);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>averaged<sp/>value<sp/>with<sp/>%d<sp/>samples:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>sample_counts[i],</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>averaged<sp/>over<sp/>%d<sp/>samples:<sp/>%lu&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>),<sp/>sample_counts[i],<sp/>averaged_value);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(averaged_value<sp/>&gt;<sp/>4095)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Averaged<sp/>value<sp/>%lu<sp/>exceeds<sp/>12-bit<sp/>maximum&quot;</highlight><highlight class="normal">,<sp/>averaged_value);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>BaseAdc<sp/>averaging<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voltage_v<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ReadChannelV(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>,<sp/>voltage_v,<sp/>8,<sp/>10);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>averaged<sp/>voltage:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>%lu<sp/>averaged<sp/>voltage<sp/>(8<sp/>samples,<sp/>10ms<sp/>between):<sp/>%.3fV&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>),<sp/>voltage_v);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>averaging<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1aa432eb06b934c9bd7db25767b6ca6fd1" kindref="member">test_adc_continuous_mode</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>continuous<sp/>mode...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>queue<sp/>for<sp/>continuous<sp/>mode<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref><sp/>=<sp/>xQueueCreate(10,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structadc__queue__message__t" kindref="compound">adc_queue_message_t</ref>));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>ADC<sp/>data<sp/>queue&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ab1fa9dd3af034b3ef4291579aa673c07" kindref="member">hf_adc_mode_t::CONTINUOUS</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>adc_cfg.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a5368296c2faab03b7221b29e82e79b0b" kindref="member">sample_freq_hz</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>adc_cfg.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a5887e33011fff3996f506dcbc8a0ab8a" kindref="member">samples_per_frame</ref><sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a0a33412431ee4b59b74369f43b23e460" kindref="member">CONTINUOUS_SAMPLES_PER_FRAME</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>adc_cfg.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a3c2cdd0243704479f95ff6daa05ca28d" kindref="member">max_store_frames</ref><sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a36af6c8c29c7ebb832f729f5fc2c4804" kindref="member">CONTINUOUS_MAX_STORE_FRAMES</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ConfigureContinuous(adc_cfg.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>continuous<sp/>mode:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.SetContinuousCallback(<ref refid="AdcComprehensiveTest_8cpp_1a469b9ca631f8e14c4cbb45ee102f514c" kindref="member">continuous_callback</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>continuous<sp/>callback:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" kindref="member">continuous_samples_received</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.StartContinuous();</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>continuous<sp/>mode:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!test_adc.IsContinuousRunning())<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Continuous<sp/>mode<sp/>should<sp/>be<sp/>running&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Continuous<sp/>mode<sp/>started,<sp/>collecting<sp/>data<sp/>for<sp/>%lu<sp/>ms...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a9d65b02a0300cb5c00f356e0cda27057" kindref="member">CONTINUOUS_TEST_DURATION_MS</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>and<sp/>collect<sp/>data<sp/>using<sp/>adc_continuous_read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>uint32_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="CanComprehensiveTest_8cpp_1a0432340a642ae2362801068955fec287" kindref="member">messages_received</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>uint8_t<sp/>read_buffer[256];</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>uint32_t<sp/>bytes_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS<sp/>-<sp/>start_time)<sp/>&lt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1a9d65b02a0300cb5c00f356e0cda27057" kindref="member">CONTINUOUS_TEST_DURATION_MS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>read<sp/>data<sp/>from<sp/>continuous<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>read_result<sp/>=</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_adc.ReadContinuousData(read_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buffer),<sp/>bytes_read,<sp/>100);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref><sp/>&amp;&amp;<sp/>bytes_read<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="CanComprehensiveTest_8cpp_1a0432340a642ae2362801068955fec287" kindref="member">messages_received</ref>++;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ESP32-C6<sp/>uses<sp/>TYPE2<sp/>format:<sp/>12-bit<sp/>data<sp/>in<sp/>32-bit<sp/>structure<sp/>(4<sp/>bytes<sp/>per<sp/>sample)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>samples_in_buffer<sp/>=<sp/>bytes_read<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" kindref="member">continuous_samples_received</ref><sp/>+=<sp/>samples_in_buffer;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGD(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Read<sp/>%lu<sp/>bytes<sp/>(%lu<sp/>samples)<sp/>from<sp/>continuous<sp/>ADC&quot;</highlight><highlight class="normal">,<sp/>bytes_read,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_in_buffer);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0aa7037778c0674435cfbc1c50de899286" kindref="member">hf_adc_err_t::ADC_ERR_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>data<sp/>available,<sp/>continue<sp/>waiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Continuous<sp/>read<sp/>error:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(read_result));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a94158ee88a892418a49c706b819f1a78" kindref="member">continuous_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.StopContinuous();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>stop<sp/>continuous<sp/>mode:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Continuous<sp/>mode<sp/>test<sp/>completed:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Messages<sp/>received:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/><ref refid="CanComprehensiveTest_8cpp_1a0432340a642ae2362801068955fec287" kindref="member">messages_received</ref>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Total<sp/>samples:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a34b9da85b3eba3a1f9ca105cfe20401f" kindref="member">continuous_samples_received</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Test<sp/>duration:<sp/>%lu<sp/>ms&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a9d65b02a0300cb5c00f356e0cda27057" kindref="member">CONTINUOUS_TEST_DURATION_MS</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>vQueueDelete(<ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a02251c6ef152433a2ac243fa5b36b051" kindref="member">adc_data_queue</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="CanComprehensiveTest_8cpp_1a0432340a642ae2362801068955fec287" kindref="member">messages_received</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>continuous<sp/>mode<sp/>data<sp/>received&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>continuous<sp/>mode<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1afd78ac718b1da1334fcfffd29c60598f" kindref="member">test_adc_monitor_thresholds</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>monitor<sp/>thresholds<sp/>with<sp/>interactive<sp/>guidance...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hardware<sp/>setup<sp/>required:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>GPIO0:<sp/>Connect<sp/>to<sp/>potentiometer<sp/>(0-3.3V)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>You<sp/>will<sp/>be<sp/>guided<sp/>through<sp/>the<sp/>test<sp/>step<sp/>by<sp/>step&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="HardwareTypes_8h_1ae0889610252306068bb566d31b5494c7" kindref="member">hf_channel_id_t</ref><sp/>MONITOR_CHANNEL<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaed3ca6b22762fe76bdcf5aa0f9ebe6e" kindref="member">TEST_CHANNEL_2</ref>;<sp/></highlight><highlight class="comment">//<sp/>GPIO0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>1:<sp/>Use<sp/>oneshot<sp/>mode<sp/>to<sp/>get<sp/>baseline<sp/>voltage<sp/>from<sp/>potentiometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MONITOR<sp/>THRESHOLD<sp/>TEST<sp/>-<sp/>STEP<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Please<sp/>adjust<sp/>your<sp/>potentiometer<sp/>to<sp/>CENTER<sp/>position<sp/>(around<sp/>1.5-2.0V)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>This<sp/>will<sp/>be<sp/>used<sp/>as<sp/>the<sp/>baseline<sp/>for<sp/>setting<sp/>thresholds.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Monitoring<sp/>voltage<sp/>for<sp/>5<sp/>seconds<sp/>-<sp/>adjust<sp/>potentiometer<sp/>now...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>oneshot<sp/>ADC<sp/>for<sp/>baseline<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>oneshot_config;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(oneshot_config,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>oneshot_adc(oneshot_config);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(oneshot_adc))<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>oneshot<sp/>ADC<sp/>for<sp/>baseline<sp/>reading&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>and<sp/>enable<sp/>the<sp/>potentiometer<sp/>channel<sp/>for<sp/>oneshot<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>oneshot_adc.ConfigureChannel(MONITOR_CHANNEL,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>oneshot<sp/>monitor<sp/>channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>oneshot_adc.EnableChannel(MONITOR_CHANNEL);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>oneshot<sp/>monitor<sp/>channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Monitor<sp/>voltage<sp/>during<sp/>stabilization<sp/>period<sp/>using<sp/>oneshot<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>uint32_t<sp/>stabilization_start<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>uint32_t<sp/>stabilization_last_print_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>uint32_t<sp/>baseline_voltage_mv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>uint32_t<sp/>valid_readings<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>uint64_t<sp/>voltage_sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Using<sp/>oneshot<sp/>mode<sp/>for<sp/>baseline<sp/>voltage<sp/>monitoring&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS<sp/>-<sp/>stabilization_start)<sp/>&lt;<sp/>5000)<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>voltage<sp/>every<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_time<sp/>-<sp/>stabilization_last_print_time<sp/>&gt;=<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>voltage_mv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>read_result<sp/>=<sp/>oneshot_adc.ReadSingleVoltage(MONITOR_CHANNEL,<sp/>voltage_mv);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elapsed_sec<sp/>=<sp/>(current_time<sp/>-<sp/>stabilization_start)<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;⏱️<sp/><sp/>%2lu/5<sp/>sec<sp/>|<sp/>Potentiometer:<sp/>%4lu<sp/>mV<sp/>(%.3fV)<sp/>|<sp/>Target:<sp/>1.5-2.0V&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_sec,<sp/>voltage_mv,<sp/>voltage_mv<sp/>/<sp/>1000.0f);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>for<sp/>average<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage_sum<sp/>+=<sp/>voltage_mv;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_readings++;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;⏱️<sp/><sp/>%2lu/5<sp/>sec<sp/>|<sp/>Failed<sp/>to<sp/>read<sp/>oneshot<sp/>voltage:<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(current_time<sp/>-<sp/>stabilization_start)<sp/>/<sp/>1000,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(read_result));</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stabilization_last_print_time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>every<sp/>100ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>baseline<sp/>voltage<sp/>from<sp/>accumulated<sp/>readings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(valid_readings<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>baseline_voltage_mv<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(voltage_sum<sp/>/<sp/>valid_readings);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>any<sp/>valid<sp/>baseline<sp/>voltage<sp/>readings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Baseline<sp/>voltage:<sp/>%lu<sp/>mV<sp/>(averaged<sp/>from<sp/>%lu<sp/>readings)&quot;</highlight><highlight class="normal">,<sp/>baseline_voltage_mv,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_readings);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>baseline<sp/>is<sp/>in<sp/>reasonable<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseline_voltage_mv<sp/>&lt;<sp/>500<sp/>||<sp/>baseline_voltage_mv<sp/>&gt;<sp/>2800)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Baseline<sp/>voltage<sp/>(%lu<sp/>mV)<sp/>is<sp/>near<sp/>rail<sp/>-<sp/>test<sp/>may<sp/>be<sp/>limited&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_voltage_mv);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>2:<sp/>Setup<sp/>continuous<sp/>mode<sp/>with<sp/>monitor<sp/>(proper<sp/>ESP-IDF<sp/>sequence)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>up<sp/>continuous<sp/>mode<sp/>with<sp/>monitor<sp/>thresholds...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>thresholds<sp/>based<sp/>on<sp/>baseline<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>uint32_t<sp/>high_thresh_mv<sp/>=<sp/>baseline_voltage_mv<sp/>+<sp/><ref refid="AdcComprehensiveTest_8cpp_1ae6f08600e5b40e184bbd85285cbc6e7f" kindref="member">MONITOR_THRESHOLD_OFFSET_MV</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>uint32_t<sp/>low_thresh_mv<sp/>=<sp/>baseline_voltage_mv<sp/>-<sp/><ref refid="AdcComprehensiveTest_8cpp_1ae6f08600e5b40e184bbd85285cbc6e7f" kindref="member">MONITOR_THRESHOLD_OFFSET_MV</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamp<sp/>to<sp/>valid<sp/>ADC<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>high_thresh_mv<sp/>=<sp/>(high_thresh_mv<sp/>&gt;<sp/>3200)<sp/>?<sp/>3200<sp/>:<sp/>high_thresh_mv;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>low_thresh_mv<sp/>=<sp/>(low_thresh_mv<sp/>&lt;<sp/>200)<sp/>?<sp/>200<sp/>:<sp/>low_thresh_mv;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>voltage<sp/>thresholds<sp/>to<sp/>raw<sp/>ADC<sp/>values<sp/>(use<sp/>proper<sp/>conversion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>uint32_t<sp/>high_thresh_raw<sp/>=<sp/>(high_thresh_mv<sp/>*<sp/><ref refid="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" kindref="member">ADC_12BIT_MAX_VALUE</ref>)<sp/>/<sp/>3300;<sp/></highlight><highlight class="comment">//<sp/>3.3V<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>uint32_t<sp/>low_thresh_raw<sp/>=<sp/>(low_thresh_mv<sp/>*<sp/><ref refid="AdcComprehensiveTest_8cpp_1a934c39a435ada9b94bb1acd082e45047" kindref="member">ADC_12BIT_MAX_VALUE</ref>)<sp/>/<sp/>3300;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.3V<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Monitor<sp/>thresholds<sp/>based<sp/>on<sp/>baseline<sp/>(%lu<sp/>mV):&quot;</highlight><highlight class="normal">,<sp/>baseline_voltage_mv);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>High:<sp/>%lu<sp/>mV<sp/>(%lu<sp/>counts)&quot;</highlight><highlight class="normal">,<sp/>high_thresh_mv,<sp/>high_thresh_raw);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Low:<sp/><sp/>%lu<sp/>mV<sp/>(%lu<sp/>counts)&quot;</highlight><highlight class="normal">,<sp/>low_thresh_mv,<sp/>low_thresh_raw);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>3:<sp/>Setup<sp/>continuous<sp/>ADC<sp/>with<sp/>monitor<sp/>(following<sp/>ESP-IDF<sp/>sequence)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>continuous<sp/>ADC<sp/>for<sp/>monitor<sp/>testing<sp/>(ONLY<sp/>channel<sp/>0<sp/>for<sp/>maximum<sp/>responsiveness)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>continuous_config;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>continuous_config<sp/>=<sp/>{};<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a913ab26a613a66311a1ff5e98e45541d" kindref="member">unit_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a92dfc178e6e403b9345de8fd21457b2e" kindref="member">mode</ref><sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ab1fa9dd3af034b3ef4291579aa673c07" kindref="member">hf_adc_mode_t::CONTINUOUS</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1abfdb771d34ee7b7a22fca9ce7a2fc983" kindref="member">bit_width</ref><sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a5368296c2faab03b7221b29e82e79b0b" kindref="member">sample_freq_hz</ref><sp/>=<sp/>2000;<sp/></highlight><highlight class="comment">//<sp/>2kHz<sp/>sampling<sp/>for<sp/>faster<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a5887e33011fff3996f506dcbc8a0ab8a" kindref="member">samples_per_frame</ref><sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>.<ref refid="structhf__adc__continuous__config__t_1a3c2cdd0243704479f95ff6daa05ca28d" kindref="member">max_store_frames</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>ONLY<sp/>channel<sp/>0<sp/>(potentiometer)<sp/>for<sp/>maximum<sp/>real-time<sp/>responsiveness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a3ccf2392358d6dc82d361024cc932596" kindref="member">channel_configs</ref>[MONITOR_CHANNEL].<ref refid="structhf__adc__channel__config__t_1a2b26db934b60861f3022743d56359145" kindref="member">channel_id</ref><sp/>=<sp/>MONITOR_CHANNEL;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a3ccf2392358d6dc82d361024cc932596" kindref="member">channel_configs</ref>[MONITOR_CHANNEL].<ref refid="structhf__adc__channel__config__t_1a5d26708ae737fb80e37f0fabeedb9da9" kindref="member">attenuation</ref><sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a3ccf2392358d6dc82d361024cc932596" kindref="member">channel_configs</ref>[MONITOR_CHANNEL].<ref refid="structhf__adc__channel__config__t_1af05c3060c9fbeed3a182bb766ea8ec1d" kindref="member">bitwidth</ref><sp/>=<sp/><ref refid="EspTypes__ADC_8h_1a52bdc752d8f985c73577206a943efcb9aed8e92f8abd7e450b5e3c2450990395d" kindref="member">hf_adc_bitwidth_t::WIDTH_12BIT</ref>;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>continuous_config.<ref refid="structhf__adc__unit__config__t_1a3ccf2392358d6dc82d361024cc932596" kindref="member">channel_configs</ref>[MONITOR_CHANNEL].<ref refid="structhf__adc__channel__config__t_1af58b9abc81efce5d07b589bd4c46d8e4" kindref="member">enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>continuous_adc(continuous_config);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(continuous_adc))<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>continuous<sp/>ADC<sp/>for<sp/>monitor<sp/>test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.ConfigureContinuous(continuous_config.<ref refid="structhf__adc__unit__config__t_1ad81dd7fad6a6dfc7924fbf20f0566837" kindref="member">continuous_config</ref>);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>continuous<sp/>mode:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>continuous<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.SetContinuousCallback(<ref refid="AdcComprehensiveTest_8cpp_1a469b9ca631f8e14c4cbb45ee102f514c" kindref="member">continuous_callback</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>continuous<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>monitor<sp/>with<sp/>proper<sp/>thresholds<sp/>(BEFORE<sp/>starting<sp/>continuous<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__monitor__config__t" kindref="compound">hf_adc_monitor_config_t</ref><sp/>monitor_config;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>monitor_config.<ref refid="structhf__adc__monitor__config__t_1a9959ddf5fe65d51b5aed9f8a98dcd995" kindref="member">monitor_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>monitor_config.<ref refid="structhf__adc__monitor__config__t_1a34dcfb4c02b4c15fddf51b8b3542dee0" kindref="member">channel_id</ref><sp/>=<sp/>MONITOR_CHANNEL;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>monitor_config.<ref refid="structhf__adc__monitor__config__t_1a6365faf3e8775beed6b894c2dc87f617" kindref="member">high_threshold</ref><sp/>=<sp/>high_thresh_raw;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>monitor_config.<ref refid="structhf__adc__monitor__config__t_1ad40f76e5c750037aa6824b29000c8e18" kindref="member">low_threshold</ref><sp/>=<sp/>low_thresh_raw;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.ConfigureMonitor(monitor_config);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>monitor:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>monitor<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.SetMonitorCallback(0,<sp/><ref refid="AdcComprehensiveTest_8cpp_1af27f6afa257763e81799a31cee1a993f" kindref="member">monitor_callback</ref>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>monitor<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>monitor<sp/>(BEFORE<sp/>starting<sp/>continuous<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.SetMonitorEnabled(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>monitor:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOW<sp/>start<sp/>continuous<sp/>mode<sp/>(monitor<sp/>is<sp/>fully<sp/>configured<sp/>and<sp/>enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>continuous_adc.StartContinuous();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>continuous<sp/>mode<sp/>with<sp/>monitor:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>counters<sp/>for<sp/>actual<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" kindref="member">last_monitor_event_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a870969aed402e568f00ae5ecd90882a6" kindref="member">monitor_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STEP<sp/>4:<sp/>Interactive<sp/>threshold<sp/>testing<sp/>with<sp/>continuous<sp/>mode<sp/>+<sp/>monitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MONITOR<sp/>THRESHOLD<sp/>TEST<sp/>-<sp/>STEP<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Now<sp/>turn<sp/>your<sp/>potentiometer<sp/>HIGH<sp/>(above<sp/>%lu<sp/>mV)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high_thresh_mv);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>You<sp/>have<sp/>10<sp/>seconds<sp/>to<sp/>trigger<sp/>the<sp/>HIGH<sp/>threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Current<sp/>baseline:<sp/>%lu<sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseline_voltage_mv);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Monitoring<sp/>for<sp/>HIGH<sp/>threshold<sp/>events...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Monitor<sp/>for<sp/>high<sp/>threshold<sp/>for<sp/>10<sp/>seconds<sp/>using<sp/>REAL-TIME<sp/>callback<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>uint32_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>uint32_t<sp/>elapsed_ms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>uint32_t<sp/>last_high_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>uint32_t<sp/>last_print_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>monitoring<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>uint32_t<sp/>latest_voltage_mv<sp/>=<sp/>baseline_voltage_mv;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elapsed_ms<sp/>&lt;<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>every<sp/>100ms<sp/>for<sp/>responsive<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/>(xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS)<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drain<sp/>ADC<sp/>buffer<sp/>to<sp/>get<sp/>latest<sp/>data<sp/>(ESP-IDF<sp/>best<sp/>practice)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>read_buffer[256];</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drain<sp/>all<sp/>available<sp/>data<sp/>with<sp/>0<sp/>timeout<sp/>(non-blocking,<sp/>get<sp/>freshest<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(continuous_adc.ReadContinuousData(read_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buffer),<sp/>bytes_read,<sp/>0)<sp/>==</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>from<sp/>end<sp/>of<sp/>buffer<sp/>backwards<sp/>to<sp/>get<sp/>the<sp/>most<sp/>recent<sp/>channel<sp/>0<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32_t<sp/>i<sp/>=<sp/>bytes_read<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(adc_digi_output_data_t);<sp/>i<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(adc_digi_output_data_t))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>adc_digi_output_data_t*<sp/>sample<sp/>=</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">adc_digi_output_data_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;read_buffer[i]);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample-&gt;type2.channel<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latest_voltage_mv<sp/>=<sp/>(sample-&gt;type2.data<sp/>*<sp/>3300)<sp/>/<sp/>4095;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>latest<sp/>(most<sp/>recent)<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>updates<sp/>every<sp/>500ms<sp/>using<sp/>LATEST<sp/>drained<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_time<sp/>-<sp/>last_print_time<sp/>&gt;=<sp/>500)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;📈<sp/>%2lu/10<sp/>sec<sp/>|<sp/>Voltage:<sp/>%4lu<sp/>mV<sp/>(%.3fV)<sp/>|<sp/>High<sp/>events:<sp/>%2lu<sp/>|<sp/>Target:<sp/>&gt;%lu<sp/>mV&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>/<sp/>1000,<sp/>latest_voltage_mv,<sp/>latest_voltage_mv<sp/>/<sp/>1000.0f,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref>,<sp/>high_thresh_mv);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>got<sp/>new<sp/>high<sp/>threshold<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>&gt;<sp/>last_high_count)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;🎉<sp/>HIGH<sp/>THRESHOLD<sp/>TRIGGERED!<sp/>Event<sp/>#%lu<sp/>detected&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_high_count<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref>;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_print_time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MONITOR<sp/>THRESHOLD<sp/>TEST<sp/>-<sp/>STEP<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Now<sp/>turn<sp/>your<sp/>potentiometer<sp/>LOW<sp/>(below<sp/>%lu<sp/>mV)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_thresh_mv);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>You<sp/>have<sp/>10<sp/>seconds<sp/>to<sp/>trigger<sp/>the<sp/>LOW<sp/>threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Monitoring<sp/>for<sp/>LOW<sp/>threshold<sp/>events...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Monitor<sp/>for<sp/>low<sp/>threshold<sp/>for<sp/>10<sp/>seconds<sp/>using<sp/>REAL-TIME<sp/>callback<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>start_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>elapsed_ms<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/>uint32_t<sp/>last_low_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>last_print_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(elapsed_ms<sp/>&lt;<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(100));<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>every<sp/>100ms<sp/>for<sp/>responsive<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>elapsed_ms<sp/>=<sp/>(xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS)<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>xTaskGetTickCount()<sp/>*<sp/>portTICK_PERIOD_MS;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drain<sp/>ADC<sp/>buffer<sp/>to<sp/>get<sp/>latest<sp/>data<sp/>(ESP-IDF<sp/>best<sp/>practice)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>read_buffer[256];</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytes_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drain<sp/>all<sp/>available<sp/>data<sp/>with<sp/>0<sp/>timeout<sp/>(non-blocking,<sp/>get<sp/>freshest<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(continuous_adc.ReadContinuousData(read_buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(read_buffer),<sp/>bytes_read,<sp/>0)<sp/>==</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>from<sp/>end<sp/>of<sp/>buffer<sp/>backwards<sp/>to<sp/>get<sp/>the<sp/>most<sp/>recent<sp/>channel<sp/>0<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32_t<sp/>i<sp/>=<sp/>bytes_read<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(adc_digi_output_data_t);<sp/>i<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(adc_digi_output_data_t))<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>adc_digi_output_data_t*<sp/>sample<sp/>=</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">adc_digi_output_data_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;read_buffer[i]);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample-&gt;type2.channel<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latest_voltage_mv<sp/>=<sp/>(sample-&gt;type2.data<sp/>*<sp/>3300)<sp/>/<sp/>4095;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>latest<sp/>(most<sp/>recent)<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>updates<sp/>every<sp/>500ms<sp/>using<sp/>LATEST<sp/>drained<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_time<sp/>-<sp/>last_print_time<sp/>&gt;=<sp/>500)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;📉<sp/>%2lu/10<sp/>sec<sp/>|<sp/>Voltage:<sp/>%4lu<sp/>mV<sp/>(%.3fV)<sp/>|<sp/>Low<sp/>events:<sp/>%2lu<sp/>|<sp/>Target:<sp/>&lt;%lu<sp/>mV&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elapsed_ms<sp/>/<sp/>1000,<sp/>latest_voltage_mv,<sp/>latest_voltage_mv<sp/>/<sp/>1000.0f,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>,<sp/>low_thresh_mv);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>got<sp/>new<sp/>low<sp/>threshold<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>&gt;<sp/>last_low_count)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;🎉<sp/>LOW<sp/>THRESHOLD<sp/>TRIGGERED!<sp/>Event<sp/>#%lu<sp/>detected&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_low_count<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_print_time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a870969aed402e568f00ae5ecd90882a6" kindref="member">monitor_test_active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>continuous_adc.SetMonitorEnabled(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>continuous_adc.StopContinuous();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MONITOR<sp/>THRESHOLD<sp/>TEST<sp/>RESULTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>High<sp/>threshold<sp/>events:<sp/>%2lu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Low<sp/>threshold<sp/>events:<sp/><sp/>%2lu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Total<sp/>events:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%2lu<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>+<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Last<sp/>event<sp/>time:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%llu<sp/>us<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" kindref="member">last_monitor_event_time</ref>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_passed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>⚠️<sp/><sp/>No<sp/>threshold<sp/>events<sp/>detected<sp/>-<sp/>check<sp/>potentiometer<sp/>connection<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/>This<sp/>may<sp/>indicate<sp/>hardware<sp/>setup<sp/>issues<sp/>or<sp/>thresholds<sp/>not<sp/>crossed<sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>fail<sp/>the<sp/>test<sp/>-<sp/>could<sp/>be<sp/>valid<sp/>if<sp/>thresholds<sp/>weren&apos;t<sp/>crossed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>✅<sp/>Both<sp/>HIGH<sp/>and<sp/>LOW<sp/>thresholds<sp/>triggered<sp/>successfully!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>✅<sp/>HIGH<sp/>threshold<sp/>triggered<sp/>successfully!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>✅<sp/>LOW<sp/>threshold<sp/>triggered<sp/>successfully!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a32628b5d43c0c419295e6b433030e224" kindref="member">last_monitor_event_time</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>&gt;<sp/>0<sp/>||<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>❌<sp/>Events<sp/>counted<sp/>but<sp/>no<sp/>timestamp<sp/>recorded<sp/>-<sp/>callback<sp/>issue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>test_passed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_passed)<sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>monitor<sp/>threshold<sp/>test<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1a715ed0e967431154affbe24248d15c90" kindref="member">high_threshold_count</ref><sp/>&gt;<sp/>0<sp/>||<sp/><ref refid="AdcComprehensiveTest_8cpp_1ada69a02ff55b62343cc56cd4dc9f0b9f" kindref="member">low_threshold_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Monitor<sp/>system<sp/>working<sp/>correctly<sp/>-<sp/>events<sp/>detected<sp/>and<sp/>processed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Monitor<sp/>system<sp/>ready<sp/>-<sp/>no<sp/>threshold<sp/>crossings<sp/>during<sp/>test<sp/>period&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[FAILED]<sp/>ADC<sp/>monitor<sp/>threshold<sp/>test<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_passed;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7bc4ca596e10c2ded9a23cabbc3d951e" kindref="member">test_adc_error_handling</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>error<sp/>handling...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>reading<sp/>from<sp/>invalid<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>uint32_t<sp/>raw_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ReadSingleRaw(99,<sp/>raw_value);<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>failed<sp/>to<sp/>read<sp/>from<sp/>invalid<sp/>channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Correctly<sp/>rejected<sp/>invalid<sp/>channel<sp/>read:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>reading<sp/>from<sp/>disabled<sp/>channel<sp/>(use<sp/>a<sp/>channel<sp/>that&apos;s<sp/>not<sp/>in<sp/>our<sp/>test<sp/>set)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadSingleRaw(13,<sp/>raw_value);<sp/></highlight><highlight class="comment">//<sp/>Channel<sp/>13<sp/>is<sp/>not<sp/>configured/enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>failed<sp/>to<sp/>read<sp/>from<sp/>disabled<sp/>channel&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Correctly<sp/>rejected<sp/>disabled<sp/>channel<sp/>read:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>and<sp/>enable<sp/>channel<sp/>for<sp/>valid<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ConfigureChannel(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/><ref refid="EspTypes__ADC_8h_1a98bc196c1369437761fa2459f53ff847a2f3a36ebefed1b370fc9cd8b8f9b087c" kindref="member">hf_adc_atten_t::ATTEN_DB_12</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>configure<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.EnableChannel(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>enable<sp/>channel:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>valid<sp/>read<sp/>should<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadSingleRaw(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>raw_value);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Valid<sp/>channel<sp/>read<sp/>should<sp/>have<sp/>succeeded:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Valid<sp/>channel<sp/>read<sp/>succeeded:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>raw_value);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>null<sp/>pointer<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.ReadMultipleRaw(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>1,<sp/>&amp;raw_value);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Should<sp/>have<sp/>failed<sp/>with<sp/>null<sp/>channel<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Correctly<sp/>rejected<sp/>null<sp/>pointer:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>error<sp/>handling<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a65818d9ae4c68ab31260af9c08f5d809" kindref="member">test_adc_statistics</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>statistics...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0" kindref="member">hf_adc_err_t</ref><sp/>result<sp/>=<sp/>test_adc.ResetStatistics();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>reset<sp/>statistics:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>several<sp/>readings<sp/>to<sp/>generate<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>raw_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>test_adc.ReadSingleRaw(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>raw_value);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(10));</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__statistics__t" kindref="compound">hf_adc_statistics_t</ref><sp/>stats<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.GetStatistics(stats);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>statistics:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>Statistics:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Total<sp/>conversions:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1a7c95ecaf76f1b7548f33913ff7483231" kindref="member">totalConversions</ref>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Successful:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1a6bd23bd1290acf6b5292dfefb70aa9d4" kindref="member">successfulConversions</ref>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Failed:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1abd7cfb4eef5dce706fad92f83ea6286a" kindref="member">failedConversions</ref>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Min<sp/>time:<sp/>%lu<sp/>us&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1ad9344da335b97a18fd6ac0bcfe67852c" kindref="member">minConversionTimeUs</ref>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Max<sp/>time:<sp/>%lu<sp/>us&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1a60b17c5c1d90c76874e71e6494314bdd" kindref="member">maxConversionTimeUs</ref>);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Avg<sp/>time:<sp/>%lu<sp/>us&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1adb8b3a9729725c780346794c4ed39f3a" kindref="member">averageConversionTimeUs</ref>);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>diagnostics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__diagnostics__t" kindref="compound">hf_adc_diagnostics_t</ref><sp/>diagnostics<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>test_adc.GetDiagnostics(diagnostics);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="BaseAdc_8h_1a94bbc20b21e6ef78e95b2cfc5e56b7f0adfe2a6250ec9b82103404aa9825e725f" kindref="member">hf_adc_err_t::ADC_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>diagnostics:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>Diagnostics:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Healthy:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>diagnostics.<ref refid="structhf__adc__diagnostics__t_1a1e0b1c99282c5fe283580316afefc930" kindref="member">adcHealthy</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Enabled<sp/>channels:<sp/>0x%lx&quot;</highlight><highlight class="normal">,<sp/>diagnostics.<ref refid="structhf__adc__diagnostics__t_1ab3dff4df11548bd7762fcd7efc0aac05" kindref="member">enabled_channels</ref>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Last<sp/>error:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(diagnostics.<ref refid="structhf__adc__diagnostics__t_1ad7d7323e43846d6d36770bdf9d186a9e" kindref="member">lastErrorCode</ref>));</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats.<ref refid="structhf__adc__statistics__t_1a7c95ecaf76f1b7548f33913ff7483231" kindref="member">totalConversions</ref><sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>at<sp/>least<sp/>10<sp/>conversions,<sp/>got<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>stats.<ref refid="structhf__adc__statistics__t_1a7c95ecaf76f1b7548f33913ff7483231" kindref="member">totalConversions</ref>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>statistics<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1aae4cbe1277fd36a165e3609ca2f3ac9a" kindref="member">test_adc_performance</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Testing<sp/>ADC<sp/>performance...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><ref refid="structhf__adc__unit__config__t" kindref="compound">hf_adc_unit_config_t</ref><sp/>adc_cfg;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a7d8a4a97b549e849f892963e6905b611" kindref="member">setup_adc_config</ref>(adc_cfg,<sp/><ref refid="EspTypes__ADC_8h_1a3c300a1a8aadf67bdad120935898f044ae875b67b322212bf81da51e697bc4450" kindref="member">hf_adc_mode_t::ONESHOT</ref>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><ref refid="classEspAdc" kindref="compound">EspAdc</ref><sp/>test_adc(adc_cfg);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1af3fa94760986ec6cdafef563d0abbaa1" kindref="member">initialize_test_adc</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="AdcComprehensiveTest_8cpp_1ae238e4640b84a01479123d4ce85d627d" kindref="member">configure_test_channels</ref>(test_adc))<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>test:<sp/>measure<sp/>conversion<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>num_conversions<sp/>=<sp/><ref refid="AdcComprehensiveTest_8cpp_1a62b9da4597800648b02525866adcf3ae" kindref="member">PERFORMANCE_NUM_CONVERSIONS</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>uint64_t<sp/>start_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_conversions;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>raw_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>test_adc.ReadSingleRaw(<ref refid="AdcComprehensiveTest_8cpp_1a9e2fbe7aff7338814f942e086ed3335b" kindref="member">TEST_CHANNEL_1</ref>,<sp/>raw_value);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>uint64_t<sp/>end_time<sp/>=<sp/>esp_timer_get_time();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>uint64_t<sp/>total_time_us<sp/>=<sp/>end_time<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>uint32_t<sp/>avg_time_per_conversion_us<sp/>=<sp/>total_time_us<sp/>/<sp/>num_conversions;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Performance<sp/>Results:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Total<sp/>conversions:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>num_conversions);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Total<sp/>time:<sp/>%llu<sp/>us&quot;</highlight><highlight class="normal">,<sp/>total_time_us);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Average<sp/>per<sp/>conversion:<sp/>%lu<sp/>us&quot;</highlight><highlight class="normal">,<sp/>avg_time_per_conversion_us);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>Conversions<sp/>per<sp/>second:<sp/>%lu&quot;</highlight><highlight class="normal">,<sp/>1000000<sp/>/<sp/>avg_time_per_conversion_us);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>reasonable<sp/>performance<sp/>(should<sp/>be<sp/>faster<sp/>than<sp/>1ms<sp/>per<sp/>conversion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avg_time_per_conversion_us<sp/>&gt;<sp/><ref refid="AdcComprehensiveTest_8cpp_1ac90bfec6da69d9c8bf1301ad096bdd48" kindref="member">PERFORMANCE_MAX_TIME_US</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGW(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>conversion<sp/>seems<sp/>slow:<sp/>%lu<sp/>us<sp/>per<sp/>conversion&quot;</highlight><highlight class="normal">,<sp/>avg_time_per_conversion_us);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[SUCCESS]<sp/>ADC<sp/>performance<sp/>test<sp/>passed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="AdcComprehensiveTest_8cpp_1a630544a7f0a2cc40d8a7fefab7e2fe70" kindref="member">app_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP32-C6<sp/>ADC<sp/>COMPREHENSIVE<sp/>TEST<sp/>SUITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HardFOC<sp/>Internal<sp/>Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Hardware<sp/>Setup<sp/>Required<sp/>(ESP32-C6<sp/>DevKit-M-1):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>-<sp/>GPIO3<sp/>(ADC1_CH3):<sp/>Connect<sp/>to<sp/>3.3V<sp/>via<sp/>voltage<sp/>divider<sp/>(high<sp/>reference)<sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>-<sp/>GPIO0<sp/>(ADC1_CH0):<sp/>Connect<sp/>to<sp/>potentiometer<sp/>center<sp/>tap<sp/>(variable<sp/>0-3.3V)<sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>-<sp/>GPIO1<sp/>(ADC1_CH1):<sp/>Connect<sp/>to<sp/>ground<sp/>via<sp/>10kΩ<sp/>resistor<sp/>(low<sp/>reference)<sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Monitor<sp/>Test:<sp/>Adjust<sp/>potentiometer<sp/>on<sp/>GPIO0<sp/>during<sp/>monitor<sp/>test<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(2000));</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>test<sp/>section<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a200bb35a3a48c625b9cb8d2511d6bd87" kindref="member">print_test_section_status</ref>(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>comprehensive<sp/>ADC<sp/>tests<sp/>based<sp/>on<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a3fe506307d4787f60c81114b2665e6e7" kindref="member">ENABLE_CORE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>CORE<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hardware<sp/>validation<sp/>and<sp/>initialization<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>hardware<sp/>validation<sp/>and<sp/>initialization<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;hardware_validation&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a22e33d3caac71550681d8f8cee80de0d" kindref="member">test_hardware_validation</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;adc_initialization&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a32f9a6942d6f8dd6146056eae88d54ea" kindref="member">test_adc_initialization</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;channel_configuration&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a8fc35c1fcda3d9ef714f649416bd74a7" kindref="member">test_adc_channel_configuration</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1a367a8de50caab51fe1ae324e0ce489a5" kindref="member">ENABLE_CONVERSION_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>CONVERSION<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>conversion<sp/>and<sp/>calibration<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>conversion<sp/>and<sp/>calibration<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;basic_conversion&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a2c1dceda8a69d0327f24f8006b02cae6" kindref="member">test_adc_basic_conversion</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;adc_calibration&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a67d069e784d537e456dc2306195a7af4" kindref="member">test_adc_calibration</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;multiple_channels&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a6f5cf41c91382d0015b9d56d84b568a3" kindref="member">test_adc_multiple_channels</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1abfa5952b4fe92644c9d6cf38c362f1a6" kindref="member">ENABLE_ADVANCED_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>ADVANCED<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced<sp/>features<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>advanced<sp/>feature<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;averaging&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a8d6ce47f62aea0a979618c8a074e8ba4" kindref="member">test_adc_averaging</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;continuous_mode&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aa432eb06b934c9bd7db25767b6ca6fd1" kindref="member">test_adc_continuous_mode</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;monitor_thresholds&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1afd78ac718b1da1334fcfffd29c60598f" kindref="member">test_adc_monitor_thresholds</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1a742c0e25111e9ee95def05464cab957b" kindref="member">RUN_TEST_SECTION_IF_ENABLED</ref>(<ref refid="AdcComprehensiveTest_8cpp_1a362ae025a7b83c898995613ee8fbddc7" kindref="member">ENABLE_PERFORMANCE_TESTS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC<sp/>PERFORMANCE<sp/>TESTS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>and<sp/>error<sp/>handling<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Running<sp/>performance<sp/>and<sp/>error<sp/>handling<sp/>tests...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;error_handling&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a7bc4ca596e10c2ded9a23cabbc3d951e" kindref="member">test_adc_error_handling</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;statistics&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a65818d9ae4c68ab31260af9c08f5d809" kindref="member">test_adc_statistics</ref>,<sp/>8192,<sp/>1);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TestFramework_8h_1a214e38e25939e45e31ae73a073fca47f" kindref="member">RUN_TEST_IN_TASK</ref>(</highlight><highlight class="stringliteral">&quot;performance&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aae4cbe1277fd36a165e3609ca2f3ac9a" kindref="member">test_adc_performance</ref>,<sp/>8192,<sp/>1););</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><ref refid="TestFramework_8h_1ab7e4c076755ecdf2ad6212cb8f6578ab" kindref="member">print_test_summary</ref>(<ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ADC&quot;</highlight><highlight class="normal">,<sp/><ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>.<ref refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" kindref="member">failed_tests</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALL<sp/>ADC<sp/>TESTS<sp/>PASSED!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>ESP32-C6<sp/>ADC<sp/>system<sp/>is<sp/>working<sp/>correctly<sp/>with<sp/>comprehensive<sp/>testing<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>covering<sp/>hardware<sp/>validation,<sp/>initialization,<sp/>calibration,<sp/>single/multi-<sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>channel<sp/>reading,<sp/>continuous<sp/>mode,<sp/>monitor<sp/>thresholds<sp/>with<sp/>bounds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>error<sp/>handling,<sp/>statistics,<sp/>and<sp/>performance<sp/>testing.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Hardware<sp/>connections<sp/>verified:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>GPIO3<sp/>(HIGH)<sp/><sp/><sp/>GPIO0<sp/>(POT)<sp/><sp/><sp/>GPIO1<sp/>(LOW)<sp/><sp/><sp/>Monitor<sp/>System<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;╔══════════════════════════════════════════════════════════════════════════════╗&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOME<sp/>TESTS<sp/>FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Please<sp/>check<sp/>hardware<sp/>connections<sp/>and<sp/>review<sp/>failed<sp/>test<sp/>details<sp/>above.<sp/><sp/><sp/><sp/><sp/>║&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;║<sp/><sp/>Failed<sp/>tests:<sp/>%2d<sp/>/<sp/>%2d<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>.<ref refid="structTestResults_1a0acef46f38f27f0fbb8fa822bb218b3a" kindref="member">failed_tests</ref>,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>.<ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGE(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;╚══════════════════════════════════════════════════════════════════════════════╝&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>running<sp/>and<sp/>periodically<sp/>display<sp/>system<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelay(pdMS_TO_TICKS(30000));<sp/></highlight><highlight class="comment">//<sp/>30<sp/>second<sp/>intervals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP_LOGI(<ref refid="AdcComprehensiveTest_8cpp_1a5a85b9c772bbeb480b209a3e6ea92b4c" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>ADC<sp/>test<sp/>completed.<sp/>System<sp/>running<sp/>normally.<sp/>Tests:<sp/>%d/%d<sp/>passed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>.<ref refid="structTestResults_1a55b5f813fe7b5863b46e03f2c7f761ea" kindref="member">passed_tests</ref>,<sp/><ref refid="AdcComprehensiveTest_8cpp_1aaff89257c54366921eebb8ec1348b1fd" kindref="member">g_test_results</ref>.<ref refid="structTestResults_1afe20b168a13950ffca7296c0c56d4359" kindref="member">total_tests</ref>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="examples/esp32/main/AdcComprehensiveTest.cpp"/>
  </compounddef>
</doxygen>
