<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structhf__esp__can__config__t" kind="struct" language="C++" prot="public">
    <compoundname>hf_esp_can_config_t</compoundname>
    <includes refid="EspCan_8h" local="no">EspCan.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhf__esp__can__config__t_1aed2cc188cee17a17b3d1d0b1957d8629" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>hf_pin_num_t hf_esp_can_config_t::tx_pin</definition>
        <argsstring></argsstring>
        <name>tx_pin</name>
        <qualifiedname>hf_esp_can_config_t::tx_pin</qualifiedname>
        <briefdescription>
<para>TX GPIO pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="67" column="16" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a7187094fce56f62b7e793ade504d3985" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>hf_pin_num_t hf_esp_can_config_t::rx_pin</definition>
        <argsstring></argsstring>
        <name>rx_pin</name>
        <qualifiedname>hf_esp_can_config_t::rx_pin</qualifiedname>
        <briefdescription>
<para>RX GPIO pin number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="68" column="16" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a095fd04a22638ba466d08a0592a27eb7" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::baud_rate</definition>
        <argsstring></argsstring>
        <name>baud_rate</name>
        <qualifiedname>hf_esp_can_config_t::baud_rate</qualifiedname>
        <briefdescription>
<para>Target baud rate in bps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="71" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a3fc23f7e02de25e15735f902fb8d9612" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::sample_point_permill</definition>
        <argsstring></argsstring>
        <name>sample_point_permill</name>
        <qualifiedname>hf_esp_can_config_t::sample_point_permill</qualifiedname>
        <briefdescription>
<para>Sample point in permille (750 = 75%) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="72" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1aaad7a0f20c8dd9c92561ebcfda6031cb" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::secondary_sample_point</definition>
        <argsstring></argsstring>
        <name>secondary_sample_point</name>
        <qualifiedname>hf_esp_can_config_t::secondary_sample_point</qualifiedname>
        <briefdescription>
<para>Secondary sample point for enhanced timing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="73" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1acf4da7f3d267dbcbd2fc1b01adaf12ec" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::tx_queue_depth</definition>
        <argsstring></argsstring>
        <name>tx_queue_depth</name>
        <qualifiedname>hf_esp_can_config_t::tx_queue_depth</qualifiedname>
        <briefdescription>
<para>Transmit queue depth. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="76" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a1c21739fbe4c5ec52272e93fefcfeca0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::rx_queue_depth</definition>
        <argsstring></argsstring>
        <name>rx_queue_depth</name>
        <qualifiedname>hf_esp_can_config_t::rx_queue_depth</qualifiedname>
        <briefdescription>
<para>Receive queue depth (internal) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="77" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a4ea9cefcad04713b957442a2c93186de" prot="public" static="no" mutable="no">
        <type><ref refid="EspTypes__CAN_8h_1ab7f2de3bbd0be41bdd4749610fd787f6" kindref="member">hf_can_controller_id_t</ref></type>
        <definition>hf_can_controller_id_t hf_esp_can_config_t::controller_id</definition>
        <argsstring></argsstring>
        <name>controller_id</name>
        <qualifiedname>hf_esp_can_config_t::controller_id</qualifiedname>
        <briefdescription>
<para>Controller ID (0 for ESP32-C6) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="80" column="26" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1ae61a0e454e12c54a4e5bf233a7c98462" prot="public" static="no" mutable="no">
        <type><ref refid="EspTypes__CAN_8h_1ae4ef9e23b0f4abb1538d7eb8ea653e7e" kindref="member">hf_can_mode_t</ref></type>
        <definition>hf_can_mode_t hf_esp_can_config_t::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <qualifiedname>hf_esp_can_config_t::mode</qualifiedname>
        <briefdescription>
<para>Operating mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="81" column="17" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a6c1b124297def32ddba7003f587e6c4a" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t hf_esp_can_config_t::fail_retry_cnt</definition>
        <argsstring></argsstring>
        <name>fail_retry_cnt</name>
        <qualifiedname>hf_esp_can_config_t::fail_retry_cnt</qualifiedname>
        <briefdescription>
<para>Retry count (-1 = infinite, 0 = single shot) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="82" column="10" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a77ada3296173052baad6719e4bf1c01a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t hf_esp_can_config_t::intr_priority</definition>
        <argsstring></argsstring>
        <name>intr_priority</name>
        <qualifiedname>hf_esp_can_config_t::intr_priority</qualifiedname>
        <briefdescription>
<para>Interrupt priority (0-3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="83" column="11" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a5779506abfcfa1e2befe143b6d80e32c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_esp_can_config_t::enable_self_test</definition>
        <argsstring></argsstring>
        <name>enable_self_test</name>
        <qualifiedname>hf_esp_can_config_t::enable_self_test</qualifiedname>
        <briefdescription>
<para>Enable self-test mode (no ACK required) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="86" column="8" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1aa877c45912cb57a8e245ecfec1f484ef" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_esp_can_config_t::enable_loopback</definition>
        <argsstring></argsstring>
        <name>enable_loopback</name>
        <qualifiedname>hf_esp_can_config_t::enable_loopback</qualifiedname>
        <briefdescription>
<para>Enable loopback mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="87" column="8" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a1d3b817788e36549ad3b491e3a5dd81d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_esp_can_config_t::enable_listen_only</definition>
        <argsstring></argsstring>
        <name>enable_listen_only</name>
        <qualifiedname>hf_esp_can_config_t::enable_listen_only</qualifiedname>
        <briefdescription>
<para>Enable listen-only mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="88" column="8" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a3f57b97d55b34368fde640a3caf67dcd" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_esp_can_config_t::no_receive_rtr</definition>
        <argsstring></argsstring>
        <name>no_receive_rtr</name>
        <qualifiedname>hf_esp_can_config_t::no_receive_rtr</qualifiedname>
        <briefdescription>
<para>Filter out remote frames when using filters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="89" column="8" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1a08fda25ef59f1a53f2ffa53c61650430" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_esp_can_config_t::enable_alerts</definition>
        <argsstring></argsstring>
        <name>enable_alerts</name>
        <qualifiedname>hf_esp_can_config_t::enable_alerts</qualifiedname>
        <briefdescription>
<para>Enable alert monitoring. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="90" column="8" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__esp__can__config__t_1adb5620fb14203fa2a6f06efe1cc457e6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t hf_esp_can_config_t::clk_flags</definition>
        <argsstring></argsstring>
        <name>clk_flags</name>
        <qualifiedname>hf_esp_can_config_t::clk_flags</qualifiedname>
        <briefdescription>
<para>Clock source flags for specific requirements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="93" column="12" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structhf__esp__can__config__t_1aebd9e47edb0f2ebc96649ea94c1e8b61" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hf_esp_can_config_t::hf_esp_can_config_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>hf_esp_can_config_t</name>
        <qualifiedname>hf_esp_can_config_t::hf_esp_can_config_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/EspCan.h" line="95" column="3" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="95" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ESP32 TWAI node configuration structure for ESP-IDF v5.5. </para>
    </briefdescription>
    <detaileddescription>
<para>Comprehensive configuration following ESP-IDF v5.5 node-based API. </para>
    </detaileddescription>
    <location file="inc/mcu/esp32/EspCan.h" line="65" column="1" bodyfile="inc/mcu/esp32/EspCan.h" bodystart="65" bodyend="102"/>
    <listofallmembers>
      <member refid="structhf__esp__can__config__t_1a095fd04a22638ba466d08a0592a27eb7" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>baud_rate</name></member>
      <member refid="structhf__esp__can__config__t_1adb5620fb14203fa2a6f06efe1cc457e6" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>clk_flags</name></member>
      <member refid="structhf__esp__can__config__t_1a4ea9cefcad04713b957442a2c93186de" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>controller_id</name></member>
      <member refid="structhf__esp__can__config__t_1a08fda25ef59f1a53f2ffa53c61650430" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>enable_alerts</name></member>
      <member refid="structhf__esp__can__config__t_1a1d3b817788e36549ad3b491e3a5dd81d" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>enable_listen_only</name></member>
      <member refid="structhf__esp__can__config__t_1aa877c45912cb57a8e245ecfec1f484ef" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>enable_loopback</name></member>
      <member refid="structhf__esp__can__config__t_1a5779506abfcfa1e2befe143b6d80e32c" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>enable_self_test</name></member>
      <member refid="structhf__esp__can__config__t_1a6c1b124297def32ddba7003f587e6c4a" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>fail_retry_cnt</name></member>
      <member refid="structhf__esp__can__config__t_1aebd9e47edb0f2ebc96649ea94c1e8b61" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>hf_esp_can_config_t</name></member>
      <member refid="structhf__esp__can__config__t_1a77ada3296173052baad6719e4bf1c01a" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>intr_priority</name></member>
      <member refid="structhf__esp__can__config__t_1ae61a0e454e12c54a4e5bf233a7c98462" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>mode</name></member>
      <member refid="structhf__esp__can__config__t_1a3f57b97d55b34368fde640a3caf67dcd" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>no_receive_rtr</name></member>
      <member refid="structhf__esp__can__config__t_1a7187094fce56f62b7e793ade504d3985" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>rx_pin</name></member>
      <member refid="structhf__esp__can__config__t_1a1c21739fbe4c5ec52272e93fefcfeca0" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>rx_queue_depth</name></member>
      <member refid="structhf__esp__can__config__t_1a3fc23f7e02de25e15735f902fb8d9612" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>sample_point_permill</name></member>
      <member refid="structhf__esp__can__config__t_1aaad7a0f20c8dd9c92561ebcfda6031cb" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>secondary_sample_point</name></member>
      <member refid="structhf__esp__can__config__t_1aed2cc188cee17a17b3d1d0b1957d8629" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>tx_pin</name></member>
      <member refid="structhf__esp__can__config__t_1acf4da7f3d267dbcbd2fc1b01adaf12ec" prot="public" virt="non-virtual"><scope>hf_esp_can_config_t</scope><name>tx_queue_depth</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
