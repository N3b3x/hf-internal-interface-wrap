<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structhf__can__config__t" kind="struct" language="C++" prot="public">
    <compoundname>hf_can_config_t</compoundname>
    <includes refid="BaseCan_8h" local="no">BaseCan.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhf__can__config__t_1ae8305416add671c70e5987b0348f3ac2" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>hf_pin_num_t hf_can_config_t::tx_pin</definition>
        <argsstring></argsstring>
        <name>tx_pin</name>
        <qualifiedname>hf_can_config_t::tx_pin</qualifiedname>
        <briefdescription>
<para>CAN TX pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="147" column="16" bodyfile="inc/base/BaseCan.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1a8aefaeb22194b8ca5b8e78f868f1c311" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref></type>
        <definition>hf_pin_num_t hf_can_config_t::rx_pin</definition>
        <argsstring></argsstring>
        <name>rx_pin</name>
        <qualifiedname>hf_can_config_t::rx_pin</qualifiedname>
        <briefdescription>
<para>CAN RX pin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="148" column="16" bodyfile="inc/base/BaseCan.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1ae60a9a3946365261658f25b2cf88be30" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1ae912723679c2a3f1d9d45b80157a1f35" kindref="member">hf_baud_rate_t</ref></type>
        <definition>hf_baud_rate_t hf_can_config_t::baudrate</definition>
        <argsstring></argsstring>
        <name>baudrate</name>
        <qualifiedname>hf_can_config_t::baudrate</qualifiedname>
        <briefdescription>
<para>CAN baudrate (bps) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="149" column="18" bodyfile="inc/base/BaseCan.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1adce4f534151270920a93193f1e7dca51" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_can_config_t::loopback_mode</definition>
        <argsstring></argsstring>
        <name>loopback_mode</name>
        <qualifiedname>hf_can_config_t::loopback_mode</qualifiedname>
        <briefdescription>
<para>Enable loopback mode for testing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="150" column="8" bodyfile="inc/base/BaseCan.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1a9b6bece2c40bb4cc7eb2e8025ee45b7a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hf_can_config_t::silent_mode</definition>
        <argsstring></argsstring>
        <name>silent_mode</name>
        <qualifiedname>hf_can_config_t::silent_mode</qualifiedname>
        <briefdescription>
<para>Enable silent mode (listen-only) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="151" column="8" bodyfile="inc/base/BaseCan.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1a0e580ed65a48c3f575e9bdcfb62de184" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref></type>
        <definition>hf_u16_t hf_can_config_t::tx_queue_size</definition>
        <argsstring></argsstring>
        <name>tx_queue_size</name>
        <qualifiedname>hf_can_config_t::tx_queue_size</qualifiedname>
        <briefdescription>
<para>TX queue size (implementation-dependent) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="152" column="12" bodyfile="inc/base/BaseCan.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__can__config__t_1a797a2233ee8936fa74e23a7d4603d0e5" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref></type>
        <definition>hf_u16_t hf_can_config_t::rx_queue_size</definition>
        <argsstring></argsstring>
        <name>rx_queue_size</name>
        <qualifiedname>hf_can_config_t::rx_queue_size</qualifiedname>
        <briefdescription>
<para>RX queue size (implementation-dependent) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="153" column="12" bodyfile="inc/base/BaseCan.h" bodystart="153" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structhf__can__config__t_1ad78879ebabceb4fb8ca96fab342eb6e8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hf_can_config_t::hf_can_config_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>hf_can_config_t</name>
        <qualifiedname>hf_can_config_t::hf_can_config_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseCan.h" line="155" column="3" bodyfile="inc/base/BaseCan.h" bodystart="155" bodyend="157"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Platform-agnostic CAN bus configuration. </para>
    </briefdescription>
    <detaileddescription>
<para>Configuration structure that works across different CAN implementations without exposing MCU-specific types. </para>
    </detaileddescription>
    <location file="inc/base/BaseCan.h" line="146" column="1" bodyfile="inc/base/BaseCan.h" bodystart="146" bodyend="158"/>
    <listofallmembers>
      <member refid="structhf__can__config__t_1ae60a9a3946365261658f25b2cf88be30" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>baudrate</name></member>
      <member refid="structhf__can__config__t_1ad78879ebabceb4fb8ca96fab342eb6e8" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>hf_can_config_t</name></member>
      <member refid="structhf__can__config__t_1adce4f534151270920a93193f1e7dca51" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>loopback_mode</name></member>
      <member refid="structhf__can__config__t_1a8aefaeb22194b8ca5b8e78f868f1c311" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>rx_pin</name></member>
      <member refid="structhf__can__config__t_1a797a2233ee8936fa74e23a7d4603d0e5" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>rx_queue_size</name></member>
      <member refid="structhf__can__config__t_1a9b6bece2c40bb4cc7eb2e8025ee45b7a" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>silent_mode</name></member>
      <member refid="structhf__can__config__t_1ae8305416add671c70e5987b0348f3ac2" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>tx_pin</name></member>
      <member refid="structhf__can__config__t_1a0e580ed65a48c3f575e9bdcfb62de184" prot="public" virt="non-virtual"><scope>hf_can_config_t</scope><name>tx_queue_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
