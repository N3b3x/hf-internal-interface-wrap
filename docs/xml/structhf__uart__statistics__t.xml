<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structhf__uart__statistics__t" kind="struct" language="C++" prot="public">
    <compoundname>hf_uart_statistics_t</compoundname>
    <includes refid="BaseUart_8h" local="no">BaseUart.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhf__uart__statistics__t_1aab1d89b99e028cdd213a27b4b296e2e3" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::tx_byte_count</definition>
        <argsstring></argsstring>
        <name>tx_byte_count</name>
        <qualifiedname>hf_uart_statistics_t::tx_byte_count</qualifiedname>
        <briefdescription>
<para>Total bytes transmitted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="108" column="12" bodyfile="inc/base/BaseUart.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a43088b127b9a4919abcbb35d0cc9b8ad" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::rx_byte_count</definition>
        <argsstring></argsstring>
        <name>rx_byte_count</name>
        <qualifiedname>hf_uart_statistics_t::rx_byte_count</qualifiedname>
        <briefdescription>
<para>Total bytes received. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="109" column="12" bodyfile="inc/base/BaseUart.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a6321d5527cc622fd86a7aced8118484a" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::tx_error_count</definition>
        <argsstring></argsstring>
        <name>tx_error_count</name>
        <qualifiedname>hf_uart_statistics_t::tx_error_count</qualifiedname>
        <briefdescription>
<para>Transmission error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="110" column="12" bodyfile="inc/base/BaseUart.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1ab23a18ad52668ca8f3458c66158e83d3" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::rx_error_count</definition>
        <argsstring></argsstring>
        <name>rx_error_count</name>
        <qualifiedname>hf_uart_statistics_t::rx_error_count</qualifiedname>
        <briefdescription>
<para>Reception error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="111" column="12" bodyfile="inc/base/BaseUart.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a878c20898b5b56e85c997147f283f71d" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::frame_error_count</definition>
        <argsstring></argsstring>
        <name>frame_error_count</name>
        <qualifiedname>hf_uart_statistics_t::frame_error_count</qualifiedname>
        <briefdescription>
<para>Frame error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="112" column="12" bodyfile="inc/base/BaseUart.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1ab7537f75d762bd9847af69997519c501" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::parity_error_count</definition>
        <argsstring></argsstring>
        <name>parity_error_count</name>
        <qualifiedname>hf_uart_statistics_t::parity_error_count</qualifiedname>
        <briefdescription>
<para>Parity error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="113" column="12" bodyfile="inc/base/BaseUart.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1af9c3575d495cdfe73cc37e67012674ea" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::overrun_error_count</definition>
        <argsstring></argsstring>
        <name>overrun_error_count</name>
        <qualifiedname>hf_uart_statistics_t::overrun_error_count</qualifiedname>
        <briefdescription>
<para>Overrun error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="114" column="12" bodyfile="inc/base/BaseUart.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1ac802d16c39c39ce9a0249113ee6b6617" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::noise_error_count</definition>
        <argsstring></argsstring>
        <name>noise_error_count</name>
        <qualifiedname>hf_uart_statistics_t::noise_error_count</qualifiedname>
        <briefdescription>
<para>Noise error count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="115" column="12" bodyfile="inc/base/BaseUart.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a1b8b8578140cf0e6e5b22649a09f9d24" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::break_count</definition>
        <argsstring></argsstring>
        <name>break_count</name>
        <qualifiedname>hf_uart_statistics_t::break_count</qualifiedname>
        <briefdescription>
<para>Break condition count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="116" column="12" bodyfile="inc/base/BaseUart.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a761200538387ff51d156edabe337bf48" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::timeout_count</definition>
        <argsstring></argsstring>
        <name>timeout_count</name>
        <qualifiedname>hf_uart_statistics_t::timeout_count</qualifiedname>
        <briefdescription>
<para>Timeout occurrence count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="117" column="12" bodyfile="inc/base/BaseUart.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1abdfe6413a5772a560b99cdb597440077" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::pattern_detect_count</definition>
        <argsstring></argsstring>
        <name>pattern_detect_count</name>
        <qualifiedname>hf_uart_statistics_t::pattern_detect_count</qualifiedname>
        <briefdescription>
<para>Pattern detection count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="118" column="12" bodyfile="inc/base/BaseUart.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a875aa4730e9e1d667034cfc839fd9958" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref></type>
        <definition>hf_u32_t hf_uart_statistics_t::wakeup_count</definition>
        <argsstring></argsstring>
        <name>wakeup_count</name>
        <qualifiedname>hf_uart_statistics_t::wakeup_count</qualifiedname>
        <briefdescription>
<para>Wakeup event count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="119" column="12" bodyfile="inc/base/BaseUart.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a34c7d189aa502da2a999df952031e898" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1ac4515282abcfccf45fc8855452098d0b" kindref="member">hf_u64_t</ref></type>
        <definition>hf_u64_t hf_uart_statistics_t::last_activity_timestamp</definition>
        <argsstring></argsstring>
        <name>last_activity_timestamp</name>
        <qualifiedname>hf_uart_statistics_t::last_activity_timestamp</qualifiedname>
        <briefdescription>
<para>Last activity timestamp (microseconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="120" column="12" bodyfile="inc/base/BaseUart.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhf__uart__statistics__t_1a5333fd0e33b8fc2c761ed441434f3c9e" prot="public" static="no" mutable="no">
        <type><ref refid="HardwareTypes_8h_1ac4515282abcfccf45fc8855452098d0b" kindref="member">hf_u64_t</ref></type>
        <definition>hf_u64_t hf_uart_statistics_t::initialization_timestamp</definition>
        <argsstring></argsstring>
        <name>initialization_timestamp</name>
        <qualifiedname>hf_uart_statistics_t::initialization_timestamp</qualifiedname>
        <briefdescription>
<para>Initialization timestamp (microseconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="121" column="12" bodyfile="inc/base/BaseUart.h" bodystart="121" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structhf__uart__statistics__t_1adedd7a54a1f5024ccb4b14c21b73cdf3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hf_uart_statistics_t::hf_uart_statistics_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>hf_uart_statistics_t</name>
        <qualifiedname>hf_uart_statistics_t::hf_uart_statistics_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="123" column="3" bodyfile="inc/base/BaseUart.h" bodystart="123" bodyend="127"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>UART operation statistics. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/base/BaseUart.h" line="107" column="1" bodyfile="inc/base/BaseUart.h" bodystart="107" bodyend="128"/>
    <listofallmembers>
      <member refid="structhf__uart__statistics__t_1a1b8b8578140cf0e6e5b22649a09f9d24" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>break_count</name></member>
      <member refid="structhf__uart__statistics__t_1a878c20898b5b56e85c997147f283f71d" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>frame_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1adedd7a54a1f5024ccb4b14c21b73cdf3" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>hf_uart_statistics_t</name></member>
      <member refid="structhf__uart__statistics__t_1a5333fd0e33b8fc2c761ed441434f3c9e" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>initialization_timestamp</name></member>
      <member refid="structhf__uart__statistics__t_1a34c7d189aa502da2a999df952031e898" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>last_activity_timestamp</name></member>
      <member refid="structhf__uart__statistics__t_1ac802d16c39c39ce9a0249113ee6b6617" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>noise_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1af9c3575d495cdfe73cc37e67012674ea" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>overrun_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1ab7537f75d762bd9847af69997519c501" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>parity_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1abdfe6413a5772a560b99cdb597440077" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>pattern_detect_count</name></member>
      <member refid="structhf__uart__statistics__t_1a43088b127b9a4919abcbb35d0cc9b8ad" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>rx_byte_count</name></member>
      <member refid="structhf__uart__statistics__t_1ab23a18ad52668ca8f3458c66158e83d3" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>rx_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1a761200538387ff51d156edabe337bf48" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>timeout_count</name></member>
      <member refid="structhf__uart__statistics__t_1aab1d89b99e028cdd213a27b4b296e2e3" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>tx_byte_count</name></member>
      <member refid="structhf__uart__statistics__t_1a6321d5527cc622fd86a7aced8118484a" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>tx_error_count</name></member>
      <member refid="structhf__uart__statistics__t_1a875aa4730e9e1d667034cfc839fd9958" prot="public" virt="non-virtual"><scope>hf_uart_statistics_t</scope><name>wakeup_count</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
