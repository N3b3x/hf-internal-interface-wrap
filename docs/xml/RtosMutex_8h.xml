<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="RtosMutex_8h" kind="file" language="C++">
    <compoundname>RtosMutex.h</compoundname>
    <includes refid="McuSelect_8h" local="yes">McuSelect.h</includes>
    <includes local="yes">freertos/FreeRTOS.h</includes>
    <includes local="yes">freertos/semphr.h</includes>
    <includes local="yes">freertos/task.h</includes>
    <includes local="no">atomic</includes>
    <includes local="no">cstdint</includes>
    <includedby refid="main_8cpp" local="yes">examples/esp32/main/main.cpp</includedby>
    <includedby refid="EspI2c_8h" local="yes">inc/mcu/esp32/EspI2c.h</includedby>
    <includedby refid="EspNvs_8h" local="yes">inc/mcu/esp32/EspNvs.h</includedby>
    <includedby refid="EspPio_8h" local="yes">inc/mcu/esp32/EspPio.h</includedby>
    <includedby refid="EspPwm_8h" local="yes">inc/mcu/esp32/EspPwm.h</includedby>
    <includedby refid="EspSpi_8h" local="yes">inc/mcu/esp32/EspSpi.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="1">
        <label>inc/utils/RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>atomic</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="4">
        <label>freertos/semphr.h</label>
      </node>
      <node id="5">
        <label>freertos/task.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>examples/common/DummyDevice.hpp</label>
        <link refid="DummyDevice_8hpp"/>
      </node>
      <node id="11">
        <label>examples/esp32/main/advanced_pwm_example.cpp</label>
        <link refid="advanced__pwm__example_8cpp"/>
      </node>
      <node id="2">
        <label>examples/esp32/main/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="3">
        <label>inc/mcu/esp32/EspI2c.h</label>
        <link refid="EspI2c_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inc/mcu/esp32/EspNvs.h</label>
        <link refid="EspNvs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inc/mcu/esp32/EspPio.h</label>
        <link refid="EspPio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>inc/mcu/esp32/EspPwm.h</label>
        <link refid="EspPwm_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>inc/mcu/esp32/EspSpi.h</label>
        <link refid="EspSpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/utils/RtosMutex.h</label>
        <link refid="RtosMutex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/mcu/esp32/EspI2c.cpp</label>
        <link refid="EspI2c_8cpp"/>
      </node>
      <node id="7">
        <label>src/mcu/esp32/EspNvs.cpp</label>
        <link refid="EspNvs_8cpp"/>
      </node>
      <node id="9">
        <label>src/mcu/esp32/EspPio.cpp</label>
        <link refid="EspPio_8cpp"/>
      </node>
      <node id="12">
        <label>src/mcu/esp32/EspPwm.cpp</label>
        <link refid="EspPwm_8cpp"/>
      </node>
      <node id="14">
        <label>src/mcu/esp32/EspSpi.cpp</label>
        <link refid="EspSpi_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classRtosTime" prot="public">RtosTime</innerclass>
    <innerclass refid="classRtosMutex" prot="public">RtosMutex</innerclass>
    <innerclass refid="classRtosSharedMutex" prot="public">RtosSharedMutex</innerclass>
    <innerclass refid="classRtosUniqueLock" prot="public">RtosUniqueLock</innerclass>
    <innerclass refid="classRtosSharedLock" prot="public">RtosSharedLock</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="RtosMutex_8h_1a78c3b693325e0a899165cc97f332ddb8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Mutex</type>
          </param>
        </templateparamlist>
        <type><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&lt; Mutex &gt;</type>
        <definition>using RtosLockGuard =  RtosUniqueLock&lt;Mutex&gt;</definition>
        <argsstring></argsstring>
        <name>RtosLockGuard</name>
        <briefdescription>
<para>Convenience alias for unique lock guard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/utils/RtosMutex.h" line="431" column="1" bodyfile="inc/utils/RtosMutex.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="RtosMutex_8h_1a9852fe87ecd89837ccabec2c340780e9" prot="public" static="no">
        <type><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&lt; <ref refid="classRtosMutex" kindref="compound">RtosMutex</ref> &gt;</type>
        <definition>using MutexLockGuard =  RtosUniqueLock&lt;RtosMutex&gt;</definition>
        <argsstring></argsstring>
        <name>MutexLockGuard</name>
        <briefdescription>
<para>Convenience alias for <ref refid="classRtosMutex" kindref="compound">RtosMutex</ref> lock guard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/utils/RtosMutex.h" line="434" column="1" bodyfile="inc/utils/RtosMutex.h" bodystart="434" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cross-platform RTOS mutex and synchronization primitives. </para>
    </briefdescription>
    <detaileddescription>
<para>This header provides platform-agnostic mutex, lock guard, and timing utilities that work across different RTOS implementations (FreeRTOS on ESP32, STM32, RP2040). The implementation includes standard mutexes, shared mutexes for reader-writer patterns, RAII lock guards, and high-resolution timing functions for synchronization.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC</para>
</simplesect>
<simplesect kind="note"><para>Platform support includes ESP32 (FreeRTOS), STM32 (CMSIS-OS), and RP2040 (FreeRTOS). </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="McuSelect_8h" kindref="compound">McuSelect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HF_MCU_FAMILY_ESP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HF_MCU_FAMILY_STM32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmsis_os.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HF_MCU_FAMILY_RP2040)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;task.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;RTOS<sp/>mutex<sp/>implementation<sp/>not<sp/>available<sp/>for<sp/>this<sp/>MCU<sp/>platform.<sp/>Please<sp/>add<sp/>support<sp/>in<sp/>RtosMutex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classRtosTime" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRtosTime" kindref="compound">RtosTime</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classRtosTime_1a9d76a41e42d89424eac5b99cada0269f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classRtosTime_1a9d76a41e42d89424eac5b99cada0269f" kindref="member">GetCurrentTimeUs</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(xTaskGetTickCount())<sp/>*<sp/>1000<sp/>/<sp/>configTICK_RATE_HZ<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classRtosTime_1af80ef0a2aa094dea670d7806c9e6e5fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TickType_t<sp/><ref refid="classRtosTime_1af80ef0a2aa094dea670d7806c9e6e5fc" kindref="member">MsToTicks</ref>(uint32_t<sp/>ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ms<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>ticks<sp/>=<sp/>pdMS_TO_TICKS(ms);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ticks<sp/>&gt;<sp/>0)<sp/>?<sp/>ticks<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classRtosMutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRtosMutex" kindref="compound">RtosMutex</ref><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classRtosMutex_1a43df3db03d2b669ad7d8767b28e1d85c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex_1a43df3db03d2b669ad7d8767b28e1d85c" kindref="member">RtosMutex</ref>()<sp/>noexcept<sp/>:<sp/><ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>(xSemaphoreCreateMutex())<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classRtosMutex_1a9aa716386b8c8777135b933877581236" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex_1a9aa716386b8c8777135b933877581236" kindref="member">~RtosMutex</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classRtosMutex_1a266b12306d0f31994692eefa90bea9e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex_1a266b12306d0f31994692eefa90bea9e6" kindref="member">RtosMutex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68" refid="classRtosMutex_1a6b3293289431e14af4436448826c7db2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;<sp/><ref refid="classRtosMutex_1a6b3293289431e14af4436448826c7db2" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classRtosMutex_1a8c8602dfb79d8a1fd7ba4deae96b0fd2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex_1a8c8602dfb79d8a1fd7ba4deae96b0fd2" kindref="member">RtosMutex</ref>(<ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/><ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>(other.handle_)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>other.handle_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classRtosMutex_1a4e13695b6995ecd5dbac5e2681b07945" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;<sp/><ref refid="classRtosMutex_1a4e13695b6995ecd5dbac5e2681b07945" kindref="member">operator=</ref>(<ref refid="classRtosMutex" kindref="compound">RtosMutex</ref>&amp;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref><sp/>=<sp/>other.handle_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.handle_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classRtosMutex_1ad906e18270e6d663b1a7251cf014fd90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1ad906e18270e6d663b1a7251cf014fd90" kindref="member">lock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xSemaphoreTake(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>,<sp/>portMAX_DELAY)<sp/>==<sp/>pdTRUE;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classRtosMutex_1a0a923da9285903c8fe090c6d489dc485" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a0a923da9285903c8fe090c6d489dc485" kindref="member">try_lock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xSemaphoreTake(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>,<sp/>0)<sp/>==<sp/>pdTRUE;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classRtosMutex_1a504eb221268dbd671eeb01ea9e9d322d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a504eb221268dbd671eeb01ea9e9d322d" kindref="member">try_lock_for</ref>(uint32_t<sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>ticks<sp/>=<sp/><ref refid="classRtosTime_1af80ef0a2aa094dea670d7806c9e6e5fc" kindref="member">RtosTime::MsToTicks</ref>(timeout_ms);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xSemaphoreTake(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>,<sp/>ticks)<sp/>==<sp/>pdTRUE;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classRtosMutex_1aa994fd43b2c205c871c86b4d95ff7c8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1aa994fd43b2c205c871c86b4d95ff7c8d" kindref="member">unlock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classRtosMutex_1a3d33ecf3c5ad5a0b064c8b2db34a0c8c" refkind="member"><highlight class="normal"><sp/><sp/>SemaphoreHandle_t<sp/><ref refid="classRtosMutex_1a3d33ecf3c5ad5a0b064c8b2db34a0c8c" kindref="member">native_handle</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convenience<sp/>FreeRTOS-style<sp/>API<sp/>-------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classRtosMutex_1a0fff80075d2a83f10e01ddfb21f5d1d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a0fff80075d2a83f10e01ddfb21f5d1d0" kindref="member">Take</ref>(uint32_t<sp/>timeout_ms<sp/>=<sp/>0)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_ms<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a504eb221268dbd671eeb01ea9e9d322d" kindref="member">try_lock_for</ref>(timeout_ms);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1ad906e18270e6d663b1a7251cf014fd90" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classRtosMutex_1ae99adb7d809ad8f23c8ba1f4ff57439f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1ae99adb7d809ad8f23c8ba1f4ff57439f" kindref="member">Give</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosMutex_1aa994fd43b2c205c871c86b4d95ff7c8d" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shared<sp/>lock<sp/>methods<sp/>(delegated<sp/>to<sp/>regular<sp/>mutex<sp/>for<sp/>simplicity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classRtosMutex_1a45e2e0ed77e5f60e89a9ac8ade5d84e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a45e2e0ed77e5f60e89a9ac8ade5d84e8" kindref="member">lock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1ad906e18270e6d663b1a7251cf014fd90" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classRtosMutex_1aa990ba1748147d20221964edb672a853" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1aa990ba1748147d20221964edb672a853" kindref="member">try_lock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a0a923da9285903c8fe090c6d489dc485" kindref="member">try_lock</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classRtosMutex_1a73bb376a2bb9939ca285e15d3d0b1654" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a73bb376a2bb9939ca285e15d3d0b1654" kindref="member">try_lock_shared_for</ref>(uint32_t<sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a504eb221268dbd671eeb01ea9e9d322d" kindref="member">try_lock_for</ref>(timeout_ms);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classRtosMutex_1a1d1aa37f2fa497471320d92b96c76905" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosMutex_1a1d1aa37f2fa497471320d92b96c76905" kindref="member">unlock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosMutex_1aa994fd43b2c205c871c86b4d95ff7c8d" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144" refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" refkind="member"><highlight class="normal"><sp/><sp/>SemaphoreHandle_t<sp/><ref refid="classRtosMutex_1a2518867073aa7e5a4ba234509c62fe72" kindref="member">handle_</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classRtosSharedMutex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149" refid="classRtosSharedMutex_1a4b21cabd9e68393a9acc55879416d201" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex_1a4b21cabd9e68393a9acc55879416d201" kindref="member">RtosSharedMutex</ref>()<sp/>noexcept<sp/>:<sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>(0),<sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>(false)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref><sp/>=<sp/>xSemaphoreCreateMutex();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref><sp/>=<sp/>xSemaphoreCreateMutex();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classRtosSharedMutex_1a5068b5bb809f11d18a9ea2d12c0bc855" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex_1a5068b5bb809f11d18a9ea2d12c0bc855" kindref="member">~RtosSharedMutex</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classRtosSharedMutex_1ae1d3068d9207b5ef477e1ec1ae93c325" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex_1ae1d3068d9207b5ef477e1ec1ae93c325" kindref="member">RtosSharedMutex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164" refid="classRtosSharedMutex_1ac1f9fad931819cd5a4de91ed2d51dce0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;<sp/><ref refid="classRtosSharedMutex_1ac1f9fad931819cd5a4de91ed2d51dce0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classRtosSharedMutex_1a62024c8bd569a61151065b4e6f0c4b12" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex_1a62024c8bd569a61151065b4e6f0c4b12" kindref="member">RtosSharedMutex</ref>(<ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;&amp;<sp/>other)<sp/>noexcept</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>(other.writer_mutex_),<sp/><ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>(other.reader_mutex_),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>(other.readers_.load()),<sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>(other.writer_active_.load())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>other.writer_mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>other.reader_mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>other.readers_.store(0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>other.writer_active_.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classRtosSharedMutex_1a80d49ed02c84fb6018d95354c22ecb51" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;<sp/><ref refid="classRtosSharedMutex_1a80d49ed02c84fb6018d95354c22ecb51" kindref="member">operator=</ref>(<ref refid="classRtosSharedMutex" kindref="compound">RtosSharedMutex</ref>&amp;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vSemaphoreDelete(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref><sp/>=<sp/>other.writer_mutex_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref><sp/>=<sp/>other.reader_mutex_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>.store(other.readers_.load());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(other.writer_active_.load());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.writer_mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.reader_mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.readers_.store(0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.writer_active_.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classRtosSharedMutex_1a31df7dd6f6d49596e5f4ac8d4d081f04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a31df7dd6f6d49596e5f4ac8d4d081f04" kindref="member">lock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>,<sp/>portMAX_DELAY)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>.load()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>taskYIELD();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classRtosSharedMutex_1a48b8bd787b98e2615a4e173d5b51f831" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a48b8bd787b98e2615a4e173d5b51f831" kindref="member">try_lock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>,<sp/>0)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>.load()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classRtosSharedMutex_1a33d777991466c4afe883afdb31b0e0b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a33d777991466c4afe883afdb31b0e0b4" kindref="member">try_lock_for</ref>(uint32_t<sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>ticks<sp/>=<sp/><ref refid="classRtosTime_1af80ef0a2aa094dea670d7806c9e6e5fc" kindref="member">RtosTime::MsToTicks</ref>(timeout_ms);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>,<sp/>ticks)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>elapsed<sp/>=<sp/>xTaskGetTickCount()<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>remaining<sp/>=<sp/>(elapsed<sp/>&lt;<sp/>ticks)<sp/>?<sp/>ticks<sp/>-<sp/>elapsed<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>reader_wait_end<sp/>=<sp/>xTaskGetTickCount()<sp/>+<sp/>remaining;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>.load()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xTaskGetTickCount()<sp/>&gt;=<sp/>reader_wait_end)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>taskYIELD();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classRtosSharedMutex_1a76f381754fe072ce5ac9cc1599da02dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a76f381754fe072ce5ac9cc1599da02dc" kindref="member">unlock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.store(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classRtosSharedMutex_1a3d87877a917e1b7f0429e5cba22d6528" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a3d87877a917e1b7f0429e5cba22d6528" kindref="member">lock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>,<sp/>portMAX_DELAY)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.load())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>++;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>taskYIELD();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classRtosSharedMutex_1a995aa8c3c0e272a34a2e38ab68a0804d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a995aa8c3c0e272a34a2e38ab68a0804d" kindref="member">try_lock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>,<sp/>0)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.load())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>++;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classRtosSharedMutex_1a573ff802346877aba7351fe5ad93d2b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a573ff802346877aba7351fe5ad93d2b2" kindref="member">try_lock_shared_for</ref>(uint32_t<sp/>timeout_ms)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>ticks<sp/>=<sp/><ref refid="classRtosTime_1af80ef0a2aa094dea670d7806c9e6e5fc" kindref="member">RtosTime::MsToTicks</ref>(timeout_ms);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>start_time<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>elapsed<sp/>=<sp/>xTaskGetTickCount()<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elapsed<sp/>&gt;=<sp/>ticks)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>remaining<sp/>=<sp/>ticks<sp/>-<sp/>elapsed;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>,<sp/>remaining)<sp/>!=<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>.load())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>++;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TickType_t<sp/>new_elapsed<sp/>=<sp/>xTaskGetTickCount()<sp/>-<sp/>start_time;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_elapsed<sp/>&gt;=<sp/>ticks)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>taskYIELD();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classRtosSharedMutex_1a88ac4404dc318c5775aed5afa43eb6e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedMutex_1a88ac4404dc318c5775aed5afa43eb6e5" kindref="member">unlock_shared</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xSemaphoreTake(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>,<sp/>portMAX_DELAY)<sp/>==<sp/>pdTRUE)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>.load()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>--;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xSemaphoreGive(<ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309" refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" refkind="member"><highlight class="normal"><sp/><sp/>SemaphoreHandle_t<sp/><ref refid="classRtosSharedMutex_1a6ee2f10bb66fcdec20470c40ea2565cf" kindref="member">writer_mutex_</ref>;</highlight></codeline>
<codeline lineno="310" refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" refkind="member"><highlight class="normal"><sp/><sp/>SemaphoreHandle_t<sp/><ref refid="classRtosSharedMutex_1a67b47d74fbac16a90c9a9a303a6401ed" kindref="member">reader_mutex_</ref>;</highlight></codeline>
<codeline lineno="311" refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;int&gt;<sp/><ref refid="classRtosSharedMutex_1aa99faf6eab2a617aef4727fdc8714a65" kindref="member">readers_</ref>;</highlight></codeline>
<codeline lineno="312" refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;bool&gt;<sp/><ref refid="classRtosSharedMutex_1aac8a222ed7968c8959a56af4e2ebda89" kindref="member">writer_active_</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Mutex&gt;</highlight></codeline>
<codeline lineno="316" refid="classRtosUniqueLock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318" refid="classRtosUniqueLock_1a80c4ce4d9f80c22f4538c471cbf67464" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock_1a80c4ce4d9f80c22f4538c471cbf67464" kindref="member">RtosUniqueLock</ref>(Mutex&amp;<sp/>mutex,<sp/>uint32_t<sp/>timeout_ms<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>(&amp;mutex),<sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref>(false)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_ms<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>=<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>-&gt;try_lock_for(timeout_ms);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>=<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>-&gt;lock();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classRtosUniqueLock_1a59124b82120bbe0b1b98fa5087a9317f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock_1a59124b82120bbe0b1b98fa5087a9317f" kindref="member">~RtosUniqueLock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>-&gt;unlock();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classRtosUniqueLock_1a36f86e2cdda6d07844f07244fdf0f4b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock_1a36f86e2cdda6d07844f07244fdf0f4b9" kindref="member">RtosUniqueLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334" refid="classRtosUniqueLock_1ad5abbbb94f3e8fa10ff48e8ef505e712" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;<sp/><ref refid="classRtosUniqueLock_1ad5abbbb94f3e8fa10ff48e8ef505e712" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="classRtosUniqueLock_1aceef150d143e7a1f76e6f4dc4f4fee1d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock_1aceef150d143e7a1f76e6f4dc4f4fee1d" kindref="member">RtosUniqueLock</ref>(<ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>(other.mutex_),<sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref>(other.locked_)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>other.mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>other.locked_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classRtosUniqueLock_1a8c9bb127ad2d5e4e2a0790c57c0d91de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;<sp/><ref refid="classRtosUniqueLock_1a8c9bb127ad2d5e4e2a0790c57c0d91de" kindref="member">operator=</ref>(<ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock</ref>&amp;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>-&gt;unlock();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref><sp/>=<sp/>other.<ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>=<sp/>other.locked_;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.locked_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classRtosUniqueLock_1a5c85f4016f0a1cbdaa3cdb4134774d25" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock_1a5c85f4016f0a1cbdaa3cdb4134774d25" kindref="member">IsLocked</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classRtosUniqueLock_1a128c64f4cb86d7735dbf4fd0d471d82b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock_1a128c64f4cb86d7735dbf4fd0d471d82b" kindref="member">Unlock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>-&gt;unlock();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366" refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" refkind="member"><highlight class="normal"><sp/><sp/>Mutex*<sp/><ref refid="classRtosUniqueLock_1a7b11552fac4479324f323c969b31f10b" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="367" refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosUniqueLock_1a89ad89a30e33c3e6a43d0bfeac1422de" kindref="member">locked_</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SharedMutex&gt;</highlight></codeline>
<codeline lineno="371" refid="classRtosSharedLock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373" refid="classRtosSharedLock_1a390e5e5ecbebe6c8c68051ddd5c9b015" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock_1a390e5e5ecbebe6c8c68051ddd5c9b015" kindref="member">RtosSharedLock</ref>(SharedMutex&amp;<sp/>mutex,<sp/>uint32_t<sp/>timeout_ms<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>(&amp;mutex),<sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref>(false)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_ms<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>=<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>-&gt;try_lock_shared_for(timeout_ms);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>=<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>-&gt;lock_shared();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="classRtosSharedLock_1ad31862716385d2d71a8f23281e629c93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedLock_1ad31862716385d2d71a8f23281e629c93" kindref="member">~RtosSharedLock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>-&gt;unlock_shared();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classRtosSharedLock_1a5a63852868aa8518d2efb8001839c327" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedLock_1a5a63852868aa8518d2efb8001839c327" kindref="member">RtosSharedLock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389" refid="classRtosSharedLock_1a811dd689ed2e3d32890f52c50ef06a8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;<sp/><ref refid="classRtosSharedLock_1a811dd689ed2e3d32890f52c50ef06a8b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="classRtosSharedLock_1a49bee38b554b8225dd7c9765f1ce25d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedLock_1a49bee38b554b8225dd7c9765f1ce25d4" kindref="member">RtosSharedLock</ref>(<ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>(other.mutex_),<sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref>(other.locked_)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>other.mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>other.locked_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classRtosSharedLock_1a9ec74266ec258bba6b08b19c900ed607" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;<sp/><ref refid="classRtosSharedLock_1a9ec74266ec258bba6b08b19c900ed607" kindref="member">operator=</ref>(<ref refid="classRtosSharedLock" kindref="compound">RtosSharedLock</ref>&amp;&amp;<sp/>other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>-&gt;unlock_shared();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref><sp/>=<sp/>other.<ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>=<sp/>other.locked_;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.mutex_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other.locked_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classRtosSharedLock_1a31f008907ddb7a710b118d834b4cd4bb" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock_1a31f008907ddb7a710b118d834b4cd4bb" kindref="member">IsLocked</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classRtosSharedLock_1a5b7a636663f8073680e3477629f097c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock_1a5b7a636663f8073680e3477629f097c6" kindref="member">Unlock</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>&amp;&amp;<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>-&gt;unlock_shared();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="421" refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" refkind="member"><highlight class="normal"><sp/><sp/>SharedMutex*<sp/><ref refid="classRtosSharedLock_1a5ca2c975cfaf0fd94e681c847a86a410" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="422" refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classRtosSharedLock_1acc180e528b0a6b5158fbc7fba0a0acc5" kindref="member">locked_</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONVENIENCE<sp/>TYPE<sp/>ALIASES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Mutex&gt;</highlight></codeline>
<codeline lineno="431" refid="RtosMutex_8h_1a78c3b693325e0a899165cc97f332ddb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classRtosUniqueLock" kindref="compound">RtosLockGuard</ref><sp/>=<sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;Mutex&gt;</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="RtosMutex_8h_1a9852fe87ecd89837ccabec2c340780e9" refkind="member"><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classRtosUniqueLock" kindref="compound">MutexLockGuard</ref><sp/>=<sp/><ref refid="classRtosUniqueLock" kindref="compound">RtosUniqueLock&lt;RtosMutex&gt;</ref>;</highlight></codeline>
    </programlisting>
    <location file="inc/utils/RtosMutex.h"/>
  </compounddef>
</doxygen>
