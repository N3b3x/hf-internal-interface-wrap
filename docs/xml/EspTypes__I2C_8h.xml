<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="EspTypes__I2C_8h" kind="file" language="C++">
    <compoundname>EspTypes_I2C.h</compoundname>
    <includes refid="BaseI2c_8h" local="yes">BaseI2c.h</includes>
    <includes refid="EspTypes__Base_8h" local="yes">EspTypes_Base.h</includes>
    <includes refid="HardwareTypes_8h" local="yes">HardwareTypes.h</includes>
    <includes refid="McuSelect_8h" local="yes">McuSelect.h</includes>
    <includes local="no">functional</includes>
    <includes local="no">vector</includes>
    <includes local="yes">driver/i2c.h</includes>
    <includedby refid="main_8cpp" local="yes">examples/esp32/main/main.cpp</includedby>
    <includedby refid="EspTypes_8h" local="yes">inc/mcu/esp32/utils/EspTypes.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>BaseI2c.h</label>
        <link refid="BaseI2c_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>EspTypes_Base.h</label>
        <link refid="EspTypes__Base_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/mcu/esp32/utils/EspTypes_I2C.h</label>
        <link refid="EspTypes__I2C_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>McuSelect.h</label>
        <link refid="McuSelect_8h"/>
      </node>
      <node id="10">
        <label>atomic</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>driver/i2c.h</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="5">
        <label>limits</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>examples/common/DummyDevice.hpp</label>
        <link refid="DummyDevice_8hpp"/>
      </node>
      <node id="2">
        <label>examples/esp32/main/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="4">
        <label>inc/mcu/esp32/EspI2c.h</label>
        <link refid="EspI2c_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inc/mcu/esp32/EspPeriodicTimer.h</label>
        <link refid="EspPeriodicTimer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>inc/mcu/esp32/EspPio.h</label>
        <link refid="EspPio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>inc/mcu/esp32/EspSpi.h</label>
        <link refid="EspSpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inc/mcu/esp32/utils/EspTypes.h</label>
        <link refid="EspTypes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/mcu/esp32/utils/EspTypes_I2C.h</label>
        <link refid="EspTypes__I2C_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/mcu/esp32/EspI2c.cpp</label>
        <link refid="EspI2c_8cpp"/>
      </node>
      <node id="8">
        <label>src/mcu/esp32/EspPeriodicTimer.cpp</label>
        <link refid="EspPeriodicTimer_8cpp"/>
      </node>
      <node id="10">
        <label>src/mcu/esp32/EspPio.cpp</label>
        <link refid="EspPio_8cpp"/>
      </node>
      <node id="12">
        <label>src/mcu/esp32/EspSpi.cpp</label>
        <link refid="EspSpi_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structhf__i2c__async__result__t" prot="public">hf_i2c_async_result_t</innerclass>
    <innerclass refid="structhf__i2c__master__bus__config__t" prot="public">hf_i2c_master_bus_config_t</innerclass>
    <innerclass refid="structhf__i2c__device__config__t" prot="public">hf_i2c_device_config_t</innerclass>
    <innerclass refid="structhf__i2c__slave__config__t" prot="public">hf_i2c_slave_config_t</innerclass>
    <innerclass refid="structhf__i2c__transaction__buffer__t" prot="public">hf_i2c_transaction_buffer_t</innerclass>
    <innerclass refid="structhf__i2c__multi__buffer__transaction__t" prot="public">hf_i2c_multi_buffer_transaction_t</innerclass>
    <innerclass refid="structhf__i2c__custom__command__t" prot="public">hf_i2c_custom_command_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_clock_source_t</name>
        <enumvalue id="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca25f98fdb9da6e93af206cac8a148cd65" prot="public">
          <name>HF_I2C_CLK_SRC_DEFAULT</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Default clock source. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca83589eb13af178c822750cc2e34d7e9d" prot="public">
          <name>HF_I2C_CLK_SRC_APB</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>APB clock. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca9118475498168851f3512a48a95b444f" prot="public">
          <name>HF_I2C_CLK_SRC_XTAL</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Crystal oscillator. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C clock source selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="63" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_address_bits_t</name>
        <enumvalue id="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5aa828ccf42a365ffba5559eefcdd37f01" prot="public">
          <name>HF_I2C_ADDR_7_BIT</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>7-bit address </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5a45df569b9197ddad13bf019e52a66cb5" prot="public">
          <name>HF_I2C_ADDR_10_BIT</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>10-bit address </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C address bit length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="72" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_power_mode_t</name>
        <enumvalue id="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80a624b40f5b840a608a688cbd1c3bf4389" prot="public">
          <name>HF_I2C_POWER_MODE_NORMAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Normal power mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80a4056920a2f1ef81517de0ef772d25fd5" prot="public">
          <name>HF_I2C_POWER_MODE_LOW</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Low power mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80acc14b04c1c5d20dcc3a774603cf356c3" prot="public">
          <name>HF_I2C_POWER_MODE_SLEEP</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Sleep mode. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C power mode configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="80" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_transaction_type_t</name>
        <enumvalue id="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870a3481ba8295f2d1dd701ba1dd01bc2f19" prot="public">
          <name>HF_I2C_TRANS_WRITE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Write transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870abd55420a44c207972a9d09998c688a5c" prot="public">
          <name>HF_I2C_TRANS_READ</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Read transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870a890a8616b6accb6efdbf58819b27eaec" prot="public">
          <name>HF_I2C_TRANS_WRITE_READ</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Write-then-read transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C transaction types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="89" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4dde" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>hf_i2c_event_type_t</name>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaffee1bafcfce5438c23a09243fb81a51" prot="public">
          <name>HF_I2C_EVENT_MASTER_START</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Master start event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeacbbb2f081924d611bc485d40b051a470" prot="public">
          <name>HF_I2C_EVENT_MASTER_STOP</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Master stop event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea55c01a948fb0b62c8d1e3c47b7850336" prot="public">
          <name>HF_I2C_EVENT_MASTER_WRITE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Master write event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaf6680afe8d5109f3731fa1e6f0d193e0" prot="public">
          <name>HF_I2C_EVENT_MASTER_READ</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Master read event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea8582c559f9e1ea1ceb564b254c5fe839" prot="public">
          <name>HF_I2C_EVENT_SLAVE_START</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Slave start event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea24b9e71c7185fe73a43d77c939e85a77" prot="public">
          <name>HF_I2C_EVENT_SLAVE_STOP</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Slave stop event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaf6ead3cc1d2e2026dd4ab9a95b7e4cbb" prot="public">
          <name>HF_I2C_EVENT_SLAVE_WRITE</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>Slave write event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeae68faece0b2602ab5632e6fddefd4357" prot="public">
          <name>HF_I2C_EVENT_SLAVE_READ</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>Slave read event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea46e00b456caa639f7fabd2edb44a72e7" prot="public">
          <name>HF_I2C_EVENT_ERROR</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>Error event. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C event types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="98" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_glitch_filter_t</name>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ae5226d48524c1ed4cb899149c4937e9f" prot="public">
          <name>HF_I2C_GLITCH_FILTER_0_CYCLES</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>No glitch filter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ac4a94af1a3b5a4b5ed69f562421dc979" prot="public">
          <name>HF_I2C_GLITCH_FILTER_1_CYCLES</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>1 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a88a97696b817c2a1237cabed48c6bbd9" prot="public">
          <name>HF_I2C_GLITCH_FILTER_2_CYCLES</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>2 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a4ac0b9ca019ffb2234a7522135470f94" prot="public">
          <name>HF_I2C_GLITCH_FILTER_3_CYCLES</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>3 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a669ab942306ff245b612b618abd039a0" prot="public">
          <name>HF_I2C_GLITCH_FILTER_4_CYCLES</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>4 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a9fc6c0874aece0bea74cf52bb58194ca" prot="public">
          <name>HF_I2C_GLITCH_FILTER_5_CYCLES</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>5 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ac285264d157d8d9c62e26c2966b2074f" prot="public">
          <name>HF_I2C_GLITCH_FILTER_6_CYCLES</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>6 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a3e3f7d4ba736e80421353ee8ad59524c" prot="public">
          <name>HF_I2C_GLITCH_FILTER_7_CYCLES</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>7 cycle filter </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C glitch filter configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="113" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>hf_i2c_command_type_t</name>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a1319b3b93e1214442e1a5443c842fa60" prot="public">
          <name>HF_I2C_CMD_START</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Start condition. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a3020ac6915b7086ef4ec0dcf1ce66ac6" prot="public">
          <name>HF_I2C_CMD_STOP</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Stop condition. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a03b52f420d318efcec6373a03488ca09" prot="public">
          <name>HF_I2C_CMD_WRITE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Write data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a03de6792fc5dbcf311fbf0b4e2d9d1c4" prot="public">
          <name>HF_I2C_CMD_READ</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Read data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62ab046fa15483013ba76c0debaf8de2672" prot="public">
          <name>HF_I2C_CMD_WRITE_READ</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>Write then read in one transaction. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a8160de1af78eafc0af30de8e3d113907" prot="public">
          <name>HF_I2C_CMD_DELAY</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>Delay. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESP32 I2C custom command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="127" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="127" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="EspTypes__I2C_8h_1a44c91a5202a8371787b52d2ceefb9e53" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="BaseI2c_8h_1a24a50f7ee1f8c547cfa287c285fe7fb9" kindref="member">hf_i2c_err_t</ref> result, size_t bytes_transferred, void *user_data)&gt;</type>
        <definition>using hf_i2c_async_callback_t =  std::function&lt;void(hf_i2c_err_t result, size_t bytes_transferred, void* user_data)&gt;</definition>
        <argsstring></argsstring>
        <name>hf_i2c_async_callback_t</name>
        <briefdescription>
<para>Callback function signature for asynchronous I2C operations. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation result code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_transferred</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes successfully transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User-provided data pointer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This callback is executed in interrupt context - keep it minimal and fast! </para>
</simplesect>
<simplesect kind="note"><para>Avoid blocking operations, heap allocation, or complex computations. </para>
</simplesect>
<simplesect kind="note"><para>Use FreeRTOS queue/semaphore mechanisms to communicate with tasks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="150" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="EspTypes__I2C_8h_1af487a2e688911a3d0e2d8f9cffb8f67a" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4dde" kindref="member">hf_i2c_event_type_t</ref> event_type, void *event_data, void *user_data)&gt;</type>
        <definition>using hf_i2c_event_callback_t =  std::function&lt;void(hf_i2c_event_type_t event_type, void* event_data, void* user_data)&gt;</definition>
        <argsstring></argsstring>
        <name>hf_i2c_event_callback_t</name>
        <briefdescription>
<para>Callback function signature for I2C event notifications. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of event that occurred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Event-specific data (if any) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>User-provided data pointer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This callback is executed in interrupt context - keep it minimal and fast! </para>
</simplesect>
<simplesect kind="note"><para>Avoid blocking operations, heap allocation, or complex computations. </para>
</simplesect>
<simplesect kind="note"><para>Use FreeRTOS queue/semaphore mechanisms to communicate with tasks. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="163" column="1" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="164" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a4e747434972fc730bde1579d45439efb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t HF_I2C_MAX_PORTS</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MAX_PORTS</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="44" column="26" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1ab4b8385b1568cd0bfe3a3cde6ae5ec8e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_MAX_FREQ_HZ</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MAX_FREQ_HZ</name>
        <initializer>= 1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="45" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a7afb32334d2c435eb6c4291ead122472" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_MIN_FREQ_HZ</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MIN_FREQ_HZ</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="46" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a5f5c492a863c3b35baeb1a539359f452" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_DEFAULT_FREQ_HZ</definition>
        <argsstring></argsstring>
        <name>HF_I2C_DEFAULT_FREQ_HZ</name>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="47" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1ad4c9f8978be49dfa95bb310b10b7c453" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_FAST_FREQ_HZ</definition>
        <argsstring></argsstring>
        <name>HF_I2C_FAST_FREQ_HZ</name>
        <initializer>= 400000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="48" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a4046fa3bad8e884d4f1f69f0f640dc37" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_FAST_PLUS_FREQ_HZ</definition>
        <argsstring></argsstring>
        <name>HF_I2C_FAST_PLUS_FREQ_HZ</name>
        <initializer>= 1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="49" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a92a5b7bce1028a9200e2f4694275619a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_MAX_TRANSFER_BYTES</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MAX_TRANSFER_BYTES</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="50" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1aebe0e5727ec72842442e0d6cfa863053" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_FIFO_SIZE</definition>
        <argsstring></argsstring>
        <name>HF_I2C_FIFO_SIZE</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="51" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1afa427a8f5ea672e715e7a767ba050401" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_DEFAULT_TIMEOUT_MS</definition>
        <argsstring></argsstring>
        <name>HF_I2C_DEFAULT_TIMEOUT_MS</name>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="52" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a22296169bff54d618ba75b00338b5b18" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t HF_I2C_MAX_TIMEOUT_MS</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MAX_TIMEOUT_MS</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="53" column="27" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="EspTypes__I2C_8h_1a2fbea27b3fa415f2d857947291de5a9f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t HF_I2C_MAX_RETRY_COUNT</definition>
        <argsstring></argsstring>
        <name>HF_I2C_MAX_RETRY_COUNT</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/mcu/esp32/utils/EspTypes_I2C.h" line="54" column="26" bodyfile="inc/mcu/esp32/utils/EspTypes_I2C.h" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ESP32 I2C type definitions for hardware abstraction. </para>
    </briefdescription>
    <detaileddescription>
<para>This header defines only the essential I2C-specific types used by the EspI2c implementation. Clean and minimal approach.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BaseI2c_8h" kindref="compound">BaseI2c.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>hf_i2c_err_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EspTypes__Base_8h" kindref="compound">EspTypes_Base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HardwareTypes_8h" kindref="compound">HardwareTypes.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>basic<sp/>hardware<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="McuSelect_8h" kindref="compound">McuSelect.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Central<sp/>MCU<sp/>platform<sp/>selection<sp/>(includes<sp/>all<sp/>ESP-IDF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP-IDF<sp/>C<sp/>headers<sp/>must<sp/>be<sp/>wrapped<sp/>in<sp/>extern<sp/>&quot;C&quot;<sp/>for<sp/>C++<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;driver/i2c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>TYPE<sp/>MAPPINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Direct<sp/>ESP-IDF<sp/>type<sp/>usage<sp/>-<sp/>no<sp/>unnecessary<sp/>aliases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>types<sp/>are<sp/>used<sp/>internally<sp/>by<sp/>EspI2c<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>CONSTANTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="EspTypes__I2C_8h_1a4e747434972fc730bde1579d45439efb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="EspTypes__I2C_8h_1a4e747434972fc730bde1579d45439efb" kindref="member">HF_I2C_MAX_PORTS</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="45" refid="EspTypes__I2C_8h_1ab4b8385b1568cd0bfe3a3cde6ae5ec8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1ab4b8385b1568cd0bfe3a3cde6ae5ec8e" kindref="member">HF_I2C_MAX_FREQ_HZ</ref><sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="46" refid="EspTypes__I2C_8h_1a7afb32334d2c435eb6c4291ead122472" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1a7afb32334d2c435eb6c4291ead122472" kindref="member">HF_I2C_MIN_FREQ_HZ</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="47" refid="EspTypes__I2C_8h_1a5f5c492a863c3b35baeb1a539359f452" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1a5f5c492a863c3b35baeb1a539359f452" kindref="member">HF_I2C_DEFAULT_FREQ_HZ</ref><sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="48" refid="EspTypes__I2C_8h_1ad4c9f8978be49dfa95bb310b10b7c453" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1ad4c9f8978be49dfa95bb310b10b7c453" kindref="member">HF_I2C_FAST_FREQ_HZ</ref><sp/>=<sp/>400000;</highlight></codeline>
<codeline lineno="49" refid="EspTypes__I2C_8h_1a4046fa3bad8e884d4f1f69f0f640dc37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1a4046fa3bad8e884d4f1f69f0f640dc37" kindref="member">HF_I2C_FAST_PLUS_FREQ_HZ</ref><sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="50" refid="EspTypes__I2C_8h_1a92a5b7bce1028a9200e2f4694275619a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1a92a5b7bce1028a9200e2f4694275619a" kindref="member">HF_I2C_MAX_TRANSFER_BYTES</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="51" refid="EspTypes__I2C_8h_1aebe0e5727ec72842442e0d6cfa863053" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1aebe0e5727ec72842442e0d6cfa863053" kindref="member">HF_I2C_FIFO_SIZE</ref><sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="52" refid="EspTypes__I2C_8h_1afa427a8f5ea672e715e7a767ba050401" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1afa427a8f5ea672e715e7a767ba050401" kindref="member">HF_I2C_DEFAULT_TIMEOUT_MS</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="53" refid="EspTypes__I2C_8h_1a22296169bff54d618ba75b00338b5b18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="EspTypes__I2C_8h_1a22296169bff54d618ba75b00338b5b18" kindref="member">HF_I2C_MAX_TIMEOUT_MS</ref><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="54" refid="EspTypes__I2C_8h_1a2fbea27b3fa415f2d857947291de5a9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="EspTypes__I2C_8h_1a2fbea27b3fa415f2d857947291de5a9f" kindref="member">HF_I2C_MAX_RETRY_COUNT</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>ENUMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" kindref="member">hf_i2c_clock_source_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca25f98fdb9da6e93af206cac8a148cd65" kindref="member">HF_I2C_CLK_SRC_DEFAULT</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca83589eb13af178c822750cc2e34d7e9d" kindref="member">HF_I2C_CLK_SRC_APB</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca9118475498168851f3512a48a95b444f" kindref="member">HF_I2C_CLK_SRC_XTAL</ref><sp/>=<sp/>2<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" kindref="member">hf_i2c_address_bits_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5aa828ccf42a365ffba5559eefcdd37f01" kindref="member">HF_I2C_ADDR_7_BIT</ref><sp/>=<sp/>7,<sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5a45df569b9197ddad13bf019e52a66cb5" kindref="member">HF_I2C_ADDR_10_BIT</ref><sp/>=<sp/>10<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80" kindref="member">hf_i2c_power_mode_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80a624b40f5b840a608a688cbd1c3bf4389" kindref="member">HF_I2C_POWER_MODE_NORMAL</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80a4056920a2f1ef81517de0ef772d25fd5" kindref="member">HF_I2C_POWER_MODE_LOW</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a0bbc166e9d5ee7d9dcc0ab25f335dd80acc14b04c1c5d20dcc3a774603cf356c3" kindref="member">HF_I2C_POWER_MODE_SLEEP</ref><sp/>=<sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870" kindref="member">hf_i2c_transaction_type_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870a3481ba8295f2d1dd701ba1dd01bc2f19" kindref="member">HF_I2C_TRANS_WRITE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870abd55420a44c207972a9d09998c688a5c" kindref="member">HF_I2C_TRANS_READ</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870a890a8616b6accb6efdbf58819b27eaec" kindref="member">HF_I2C_TRANS_WRITE_READ</ref><sp/>=<sp/>2<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4dde" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4dde" kindref="member">hf_i2c_event_type_t</ref><sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaffee1bafcfce5438c23a09243fb81a51" kindref="member">HF_I2C_EVENT_MASTER_START</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeacbbb2f081924d611bc485d40b051a470" kindref="member">HF_I2C_EVENT_MASTER_STOP</ref><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea55c01a948fb0b62c8d1e3c47b7850336" kindref="member">HF_I2C_EVENT_MASTER_WRITE</ref><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaf6680afe8d5109f3731fa1e6f0d193e0" kindref="member">HF_I2C_EVENT_MASTER_READ</ref><sp/>=<sp/>3,<sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea8582c559f9e1ea1ceb564b254c5fe839" kindref="member">HF_I2C_EVENT_SLAVE_START</ref><sp/>=<sp/>4,<sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea24b9e71c7185fe73a43d77c939e85a77" kindref="member">HF_I2C_EVENT_SLAVE_STOP</ref><sp/>=<sp/>5,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeaf6ead3cc1d2e2026dd4ab9a95b7e4cbb" kindref="member">HF_I2C_EVENT_SLAVE_WRITE</ref><sp/>=<sp/>6,<sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddeae68faece0b2602ab5632e6fddefd4357" kindref="member">HF_I2C_EVENT_SLAVE_READ</ref><sp/>=<sp/>7,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4ddea46e00b456caa639f7fabd2edb44a72e7" kindref="member">HF_I2C_EVENT_ERROR</ref><sp/>=<sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896" kindref="member">hf_i2c_glitch_filter_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ae5226d48524c1ed4cb899149c4937e9f" kindref="member">HF_I2C_GLITCH_FILTER_0_CYCLES</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ac4a94af1a3b5a4b5ed69f562421dc979" kindref="member">HF_I2C_GLITCH_FILTER_1_CYCLES</ref><sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a88a97696b817c2a1237cabed48c6bbd9" kindref="member">HF_I2C_GLITCH_FILTER_2_CYCLES</ref><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a4ac0b9ca019ffb2234a7522135470f94" kindref="member">HF_I2C_GLITCH_FILTER_3_CYCLES</ref><sp/>=<sp/>3,<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a669ab942306ff245b612b618abd039a0" kindref="member">HF_I2C_GLITCH_FILTER_4_CYCLES</ref><sp/>=<sp/>4,<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a9fc6c0874aece0bea74cf52bb58194ca" kindref="member">HF_I2C_GLITCH_FILTER_5_CYCLES</ref><sp/>=<sp/>5,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896ac285264d157d8d9c62e26c2966b2074f" kindref="member">HF_I2C_GLITCH_FILTER_6_CYCLES</ref><sp/>=<sp/>6,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a3e3f7d4ba736e80421353ee8ad59524c" kindref="member">HF_I2C_GLITCH_FILTER_7_CYCLES</ref><sp/>=<sp/>7<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62" kindref="member">hf_i2c_command_type_t</ref><sp/>:<sp/>uint8_t<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a1319b3b93e1214442e1a5443c842fa60" kindref="member">HF_I2C_CMD_START</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a3020ac6915b7086ef4ec0dcf1ce66ac6" kindref="member">HF_I2C_CMD_STOP</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a03b52f420d318efcec6373a03488ca09" kindref="member">HF_I2C_CMD_WRITE</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a03de6792fc5dbcf311fbf0b4e2d9d1c4" kindref="member">HF_I2C_CMD_READ</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62ab046fa15483013ba76c0debaf8de2672" kindref="member">HF_I2C_CMD_WRITE_READ</ref><sp/>=<sp/>4,<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a8160de1af78eafc0af30de8e3d113907" kindref="member">HF_I2C_CMD_DELAY</ref><sp/>=<sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>CALLBACK<sp/>TYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="EspTypes__I2C_8h_1a44c91a5202a8371787b52d2ceefb9e53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="EspTypes__I2C_8h_1a44c91a5202a8371787b52d2ceefb9e53" kindref="member">hf_i2c_async_callback_t</ref><sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void(<ref refid="BaseI2c_8h_1a24a50f7ee1f8c547cfa287c285fe7fb9" kindref="member">hf_i2c_err_t</ref><sp/>result,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_transferred,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)&gt;;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="EspTypes__I2C_8h_1af487a2e688911a3d0e2d8f9cffb8f67a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="EspTypes__I2C_8h_1af487a2e688911a3d0e2d8f9cffb8f67a" kindref="member">hf_i2c_event_callback_t</ref><sp/>=</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void(<ref refid="EspTypes__I2C_8h_1a02c3031bc44ca85dff4ad7f483bc4dde" kindref="member">hf_i2c_event_type_t</ref><sp/>event_type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>event_data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data)&gt;;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>CONFIGURATION<sp/>STRUCTURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structhf__i2c__async__result__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__async__result__t" kindref="compound">hf_i2c_async_result_t</ref><sp/>{</highlight></codeline>
<codeline lineno="175" refid="structhf__i2c__async__result__t_1aa8cc029ff939891c1107d5ce9e8dcaf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="BaseI2c_8h_1a24a50f7ee1f8c547cfa287c285fe7fb9" kindref="member">hf_i2c_err_t</ref><sp/><ref refid="structhf__i2c__async__result__t_1aa8cc029ff939891c1107d5ce9e8dcaf6" kindref="member">error_code</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="structhf__i2c__async__result__t_1a48f766f41df8f6b54cd6793b236c7a50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__async__result__t_1a48f766f41df8f6b54cd6793b236c7a50" kindref="member">bytes_transferred</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="structhf__i2c__async__result__t_1a40646d396e1aa0bd4e897a7cc950dc8e" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__async__result__t_1a40646d396e1aa0bd4e897a7cc950dc8e" kindref="member">operation_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="structhf__i2c__async__result__t_1a7c063352d82996d1aa22e341c8d6de7a" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="structhf__i2c__async__result__t_1a7c063352d82996d1aa22e341c8d6de7a" kindref="member">completion_time_us</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="structhf__i2c__async__result__t_1a4106738a985a9ac5ed73c09631e49867" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a9cdf05180b96f551b50382e9a6344870" kindref="member">hf_i2c_transaction_type_t</ref><sp/><ref refid="structhf__i2c__async__result__t_1a4106738a985a9ac5ed73c09631e49867" kindref="member">transaction_type</ref>;<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structhf__i2c__master__bus__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__master__bus__config__t" kindref="compound">hf_i2c_master_bus_config_t</ref><sp/>{</highlight></codeline>
<codeline lineno="187" refid="structhf__i2c__master__bus__config__t_1a716f6163484b87561aba84f289af450a" refkind="member"><highlight class="normal"><sp/><sp/>i2c_port_t<sp/><ref refid="structhf__i2c__master__bus__config__t_1a716f6163484b87561aba84f289af450a" kindref="member">i2c_port</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="structhf__i2c__master__bus__config__t_1a49a9dd202058114f460dc717b8628240" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="structhf__i2c__master__bus__config__t_1a49a9dd202058114f460dc717b8628240" kindref="member">sda_io_num</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189" refid="structhf__i2c__master__bus__config__t_1a7bb7bf1b37dd8e03233fae19f0ca8dd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="structhf__i2c__master__bus__config__t_1a7bb7bf1b37dd8e03233fae19f0ca8dd3" kindref="member">scl_io_num</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190" refid="structhf__i2c__master__bus__config__t_1ae59d13c305b94ab55270bc9b7e48b4a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__master__bus__config__t_1ae59d13c305b94ab55270bc9b7e48b4a8" kindref="member">enable_internal_pullup</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="structhf__i2c__master__bus__config__t_1ab051aa24c962c4cea2a3cfabc5d60681" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" kindref="member">hf_i2c_clock_source_t</ref><sp/><ref refid="structhf__i2c__master__bus__config__t_1ab051aa24c962c4cea2a3cfabc5d60681" kindref="member">clk_source</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="structhf__i2c__master__bus__config__t_1af462d1edd3af8472953927d81aef5134" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__master__bus__config__t_1af462d1edd3af8472953927d81aef5134" kindref="member">clk_flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="structhf__i2c__master__bus__config__t_1aefb3a9fa60b6135f4a5219531ba6c7d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896" kindref="member">hf_i2c_glitch_filter_t</ref><sp/><ref refid="structhf__i2c__master__bus__config__t_1aefb3a9fa60b6135f4a5219531ba6c7d0" kindref="member">glitch_ignore_cnt</ref>;<sp/></highlight></codeline>
<codeline lineno="194" refid="structhf__i2c__master__bus__config__t_1a645ea75d55581ef349963060db1ce03d" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__master__bus__config__t_1a645ea75d55581ef349963060db1ce03d" kindref="member">trans_queue_depth</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195" refid="structhf__i2c__master__bus__config__t_1abc0be5bb2c7a52d8295de7fdd4e20d1f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__master__bus__config__t_1abc0be5bb2c7a52d8295de7fdd4e20d1f" kindref="member">intr_priority</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196" refid="structhf__i2c__master__bus__config__t_1ab9a3ac2598fd16248b66656aab0ead52" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__master__bus__config__t_1ab9a3ac2598fd16248b66656aab0ead52" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197" refid="structhf__i2c__master__bus__config__t_1a54a8fbac5ee4a38e1e454f86d02c0fe4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__master__bus__config__t_1a54a8fbac5ee4a38e1e454f86d02c0fe4" kindref="member">allow_pd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structhf__i2c__master__bus__config__t_1a49f0fc80cd4775d3ff9c659fc07b2311" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__master__bus__config__t_1a49f0fc80cd4775d3ff9c659fc07b2311" kindref="member">hf_i2c_master_bus_config_t</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__master__bus__config__t_1a716f6163484b87561aba84f289af450a" kindref="member">i2c_port</ref>(I2C_NUM_0),<sp/><ref refid="structhf__i2c__master__bus__config__t_1a49a9dd202058114f460dc717b8628240" kindref="member">sda_io_num</ref>(static_cast&lt;<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref>&gt;(<ref refid="HardwareTypes_8h_1a3d44dce54e55270498aaf5fcf36b58b5" kindref="member">HF_INVALID_PIN</ref>)),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__master__bus__config__t_1a7bb7bf1b37dd8e03233fae19f0ca8dd3" kindref="member">scl_io_num</ref>(static_cast&lt;<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref>&gt;(<ref refid="HardwareTypes_8h_1a3d44dce54e55270498aaf5fcf36b58b5" kindref="member">HF_INVALID_PIN</ref>)),<sp/><ref refid="structhf__i2c__master__bus__config__t_1ae59d13c305b94ab55270bc9b7e48b4a8" kindref="member">enable_internal_pullup</ref>(true),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__master__bus__config__t_1ab051aa24c962c4cea2a3cfabc5d60681" kindref="member">clk_source</ref>(<ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" kindref="member">hf_i2c_clock_source_t</ref>::<ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca25f98fdb9da6e93af206cac8a148cd65" kindref="member">HF_I2C_CLK_SRC_DEFAULT</ref>),<sp/><ref refid="structhf__i2c__master__bus__config__t_1af462d1edd3af8472953927d81aef5134" kindref="member">clk_flags</ref>(0),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__master__bus__config__t_1aefb3a9fa60b6135f4a5219531ba6c7d0" kindref="member">glitch_ignore_cnt</ref>(<ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896" kindref="member">hf_i2c_glitch_filter_t</ref>::<ref refid="EspTypes__I2C_8h_1a1bca585ef574f1ff6a207499044e1896a3e3f7d4ba736e80421353ee8ad59524c" kindref="member">HF_I2C_GLITCH_FILTER_7_CYCLES</ref>),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__master__bus__config__t_1a645ea75d55581ef349963060db1ce03d" kindref="member">trans_queue_depth</ref>(8),<sp/><ref refid="structhf__i2c__master__bus__config__t_1abc0be5bb2c7a52d8295de7fdd4e20d1f" kindref="member">intr_priority</ref>(5),<sp/><ref refid="structhf__i2c__master__bus__config__t_1ab9a3ac2598fd16248b66656aab0ead52" kindref="member">flags</ref>(0),<sp/><ref refid="structhf__i2c__master__bus__config__t_1a54a8fbac5ee4a38e1e454f86d02c0fe4" kindref="member">allow_pd</ref>(false)<sp/>{}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="structhf__i2c__device__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__device__config__t" kindref="compound">hf_i2c_device_config_t</ref><sp/>{</highlight></codeline>
<codeline lineno="215" refid="structhf__i2c__device__config__t_1a2043147468665929ffd3b65333a27b19" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structhf__i2c__device__config__t_1a2043147468665929ffd3b65333a27b19" kindref="member">device_address</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216" refid="structhf__i2c__device__config__t_1a30e9a6a1ffbe59f64c84486fa4e4605f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" kindref="member">hf_i2c_address_bits_t</ref><sp/><ref refid="structhf__i2c__device__config__t_1a30e9a6a1ffbe59f64c84486fa4e4605f" kindref="member">dev_addr_length</ref>;<sp/></highlight></codeline>
<codeline lineno="217" refid="structhf__i2c__device__config__t_1a770633f438e5e923370732a6275189d5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__device__config__t_1a770633f438e5e923370732a6275189d5" kindref="member">scl_speed_hz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="structhf__i2c__device__config__t_1ad77fa8ec7a23b21a95cc54b49d9f646c" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__device__config__t_1ad77fa8ec7a23b21a95cc54b49d9f646c" kindref="member">scl_wait_us</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="structhf__i2c__device__config__t_1a8ab82a6247382e45f57c1bb0ad703c55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__device__config__t_1a8ab82a6247382e45f57c1bb0ad703c55" kindref="member">disable_ack_check</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220" refid="structhf__i2c__device__config__t_1a3809aab8ff35e6b82ae9dc5e4917aa08" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__device__config__t_1a3809aab8ff35e6b82ae9dc5e4917aa08" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structhf__i2c__device__config__t_1ad714da0f23e5e76c16ff462ec4488b48" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__device__config__t_1ad714da0f23e5e76c16ff462ec4488b48" kindref="member">hf_i2c_device_config_t</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__device__config__t_1a2043147468665929ffd3b65333a27b19" kindref="member">device_address</ref>(0),<sp/><ref refid="structhf__i2c__device__config__t_1a30e9a6a1ffbe59f64c84486fa4e4605f" kindref="member">dev_addr_length</ref>(<ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" kindref="member">hf_i2c_address_bits_t</ref>::<ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5aa828ccf42a365ffba5559eefcdd37f01" kindref="member">HF_I2C_ADDR_7_BIT</ref>),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__device__config__t_1a770633f438e5e923370732a6275189d5" kindref="member">scl_speed_hz</ref>(100000),<sp/><ref refid="structhf__i2c__device__config__t_1ad77fa8ec7a23b21a95cc54b49d9f646c" kindref="member">scl_wait_us</ref>(0),<sp/><ref refid="structhf__i2c__device__config__t_1a8ab82a6247382e45f57c1bb0ad703c55" kindref="member">disable_ack_check</ref>(false),<sp/><ref refid="structhf__i2c__device__config__t_1a3809aab8ff35e6b82ae9dc5e4917aa08" kindref="member">flags</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structhf__i2c__slave__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__slave__config__t" kindref="compound">hf_i2c_slave_config_t</ref><sp/>{</highlight></codeline>
<codeline lineno="235" refid="structhf__i2c__slave__config__t_1ac060e012f3bbca8b4ba7fafd2f20c6c9" refkind="member"><highlight class="normal"><sp/><sp/>i2c_port_t<sp/><ref refid="structhf__i2c__slave__config__t_1ac060e012f3bbca8b4ba7fafd2f20c6c9" kindref="member">i2c_port</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="structhf__i2c__slave__config__t_1a238bc89dc9f32b45941ebb3e3b389c85" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" kindref="member">hf_i2c_clock_source_t</ref><sp/><ref refid="structhf__i2c__slave__config__t_1a238bc89dc9f32b45941ebb3e3b389c85" kindref="member">clk_source</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237" refid="structhf__i2c__slave__config__t_1a250b49c74fcb09b26b813d770670fdc7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="structhf__i2c__slave__config__t_1a250b49c74fcb09b26b813d770670fdc7" kindref="member">scl_io_num</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238" refid="structhf__i2c__slave__config__t_1a01a9513282fb7764f1864a6e771e53fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref><sp/><ref refid="structhf__i2c__slave__config__t_1a01a9513282fb7764f1864a6e771e53fb" kindref="member">sda_io_num</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239" refid="structhf__i2c__slave__config__t_1a6d56483b7a2e91d18ac2f30bf67942ef" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structhf__i2c__slave__config__t_1a6d56483b7a2e91d18ac2f30bf67942ef" kindref="member">slave_addr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240" refid="structhf__i2c__slave__config__t_1a5521f0a195a7aed73c34680e79a19cf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" kindref="member">hf_i2c_address_bits_t</ref><sp/><ref refid="structhf__i2c__slave__config__t_1a5521f0a195a7aed73c34680e79a19cf6" kindref="member">addr_bit_len</ref>;<sp/></highlight></codeline>
<codeline lineno="241" refid="structhf__i2c__slave__config__t_1aeb91128b4f9f010ab550a10a853f6829" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__slave__config__t_1aeb91128b4f9f010ab550a10a853f6829" kindref="member">clk_speed_hz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242" refid="structhf__i2c__slave__config__t_1a03ed86e49f8146fa143e0652861fbdf7" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__slave__config__t_1a03ed86e49f8146fa143e0652861fbdf7" kindref="member">send_buf_depth</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243" refid="structhf__i2c__slave__config__t_1afddeeebc89c9f1b503dff7636ab6b0e5" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__slave__config__t_1afddeeebc89c9f1b503dff7636ab6b0e5" kindref="member">receive_buf_depth</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244" refid="structhf__i2c__slave__config__t_1a072ff79851984902b2bdd42156b2e41f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__slave__config__t_1a072ff79851984902b2bdd42156b2e41f" kindref="member">intr_priority</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245" refid="structhf__i2c__slave__config__t_1a29d5101f6ed6ad6e39a9543382170e51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__slave__config__t_1a29d5101f6ed6ad6e39a9543382170e51" kindref="member">enable_internal_pullup</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="structhf__i2c__slave__config__t_1abed3082efb6b2e9a48e86d40691d802f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__slave__config__t_1abed3082efb6b2e9a48e86d40691d802f" kindref="member">broadcast_en</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="structhf__i2c__slave__config__t_1ab99efe4c844b1b448993597e3812136a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__slave__config__t_1ab99efe4c844b1b448993597e3812136a" kindref="member">allow_pd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structhf__i2c__slave__config__t_1ae1bc694e0286688aff0e39a13cd2c379" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1ae1bc694e0286688aff0e39a13cd2c379" kindref="member">hf_i2c_slave_config_t</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__slave__config__t_1ac060e012f3bbca8b4ba7fafd2f20c6c9" kindref="member">i2c_port</ref>(I2C_NUM_0),<sp/><ref refid="structhf__i2c__slave__config__t_1a238bc89dc9f32b45941ebb3e3b389c85" kindref="member">clk_source</ref>(<ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eec" kindref="member">hf_i2c_clock_source_t</ref>::<ref refid="EspTypes__I2C_8h_1ad7608886f1256b486962da79dab16eeca25f98fdb9da6e93af206cac8a148cd65" kindref="member">HF_I2C_CLK_SRC_DEFAULT</ref>),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1a250b49c74fcb09b26b813d770670fdc7" kindref="member">scl_io_num</ref>(static_cast&lt;<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref>&gt;(<ref refid="HardwareTypes_8h_1a3d44dce54e55270498aaf5fcf36b58b5" kindref="member">HF_INVALID_PIN</ref>)),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1a01a9513282fb7764f1864a6e771e53fb" kindref="member">sda_io_num</ref>(static_cast&lt;<ref refid="HardwareTypes_8h_1a60a0d0e5d76ed481be9bf64c307520f9" kindref="member">hf_pin_num_t</ref>&gt;(<ref refid="HardwareTypes_8h_1a3d44dce54e55270498aaf5fcf36b58b5" kindref="member">HF_INVALID_PIN</ref>)),<sp/><ref refid="structhf__i2c__slave__config__t_1a6d56483b7a2e91d18ac2f30bf67942ef" kindref="member">slave_addr</ref>(0),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1a5521f0a195a7aed73c34680e79a19cf6" kindref="member">addr_bit_len</ref>(<ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5" kindref="member">hf_i2c_address_bits_t</ref>::<ref refid="EspTypes__I2C_8h_1ada5c1c4b9978d9458ddf062c6c07c7c5aa828ccf42a365ffba5559eefcdd37f01" kindref="member">HF_I2C_ADDR_7_BIT</ref>),<sp/><ref refid="structhf__i2c__slave__config__t_1aeb91128b4f9f010ab550a10a853f6829" kindref="member">clk_speed_hz</ref>(100000),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1a03ed86e49f8146fa143e0652861fbdf7" kindref="member">send_buf_depth</ref>(32),<sp/><ref refid="structhf__i2c__slave__config__t_1afddeeebc89c9f1b503dff7636ab6b0e5" kindref="member">receive_buf_depth</ref>(32),<sp/><ref refid="structhf__i2c__slave__config__t_1a072ff79851984902b2bdd42156b2e41f" kindref="member">intr_priority</ref>(5),<sp/><ref refid="structhf__i2c__slave__config__t_1a29d5101f6ed6ad6e39a9543382170e51" kindref="member">enable_internal_pullup</ref>(true),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__slave__config__t_1abed3082efb6b2e9a48e86d40691d802f" kindref="member">broadcast_en</ref>(false),<sp/><ref refid="structhf__i2c__slave__config__t_1ab99efe4c844b1b448993597e3812136a" kindref="member">allow_pd</ref>(false)<sp/>{}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP32<sp/>I2C<sp/>TRANSACTION<sp/>STRUCTURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="structhf__i2c__transaction__buffer__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__transaction__buffer__t" kindref="compound">hf_i2c_transaction_buffer_t</ref><sp/>{</highlight></codeline>
<codeline lineno="270" refid="structhf__i2c__transaction__buffer__t_1aed0cb464084e5cd90bd1c586e3e5332a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="structhf__i2c__transaction__buffer__t_1aed0cb464084e5cd90bd1c586e3e5332a" kindref="member">buffer</ref>;<sp/></highlight></codeline>
<codeline lineno="271" refid="structhf__i2c__transaction__buffer__t_1a2decc5d9f2823c44301f2d390bf6650f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__transaction__buffer__t_1a2decc5d9f2823c44301f2d390bf6650f" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272" refid="structhf__i2c__transaction__buffer__t_1a70a6fc5a5243b88f3381262de09cdb24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__transaction__buffer__t_1a70a6fc5a5243b88f3381262de09cdb24" kindref="member">is_write</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="structhf__i2c__transaction__buffer__t_1a0fbe63290170efa730f6ff4378da4c69" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__transaction__buffer__t_1a0fbe63290170efa730f6ff4378da4c69" kindref="member">hf_i2c_transaction_buffer_t</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>noexcept</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__transaction__buffer__t_1aed0cb464084e5cd90bd1c586e3e5332a" kindref="member">buffer</ref>(buf),<sp/><ref refid="structhf__i2c__transaction__buffer__t_1a2decc5d9f2823c44301f2d390bf6650f" kindref="member">length</ref>(len),<sp/><ref refid="structhf__i2c__transaction__buffer__t_1a70a6fc5a5243b88f3381262de09cdb24" kindref="member">is_write</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="structhf__i2c__transaction__buffer__t_1afcc1caf0fb01943f2c138ec3dc7a398a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__transaction__buffer__t_1afcc1caf0fb01943f2c138ec3dc7a398a" kindref="member">hf_i2c_transaction_buffer_t</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write)<sp/>noexcept</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__transaction__buffer__t_1aed0cb464084e5cd90bd1c586e3e5332a" kindref="member">buffer</ref>(buf),<sp/><ref refid="structhf__i2c__transaction__buffer__t_1a2decc5d9f2823c44301f2d390bf6650f" kindref="member">length</ref>(len),<sp/><ref refid="structhf__i2c__transaction__buffer__t_1a70a6fc5a5243b88f3381262de09cdb24" kindref="member">is_write</ref>(write)<sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="structhf__i2c__multi__buffer__transaction__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__multi__buffer__transaction__t" kindref="compound">hf_i2c_multi_buffer_transaction_t</ref><sp/>{</highlight></codeline>
<codeline lineno="292" refid="structhf__i2c__multi__buffer__transaction__t_1a3ded975159c8af3f5517138faa9f0ae8" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1a3ded975159c8af3f5517138faa9f0ae8" kindref="member">device_address</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293" refid="structhf__i2c__multi__buffer__transaction__t_1aedb859f77b5e7d789d91cbfdcc36d7ac" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;hf_i2c_transaction_buffer_t&gt;<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1aedb859f77b5e7d789d91cbfdcc36d7ac" kindref="member">buffers</ref>;<sp/></highlight></codeline>
<codeline lineno="294" refid="structhf__i2c__multi__buffer__transaction__t_1add9884a93fe8a9def556d7e48441c03f" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1add9884a93fe8a9def556d7e48441c03f" kindref="member">timeout_ms</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295" refid="structhf__i2c__multi__buffer__transaction__t_1a36077bc042c70d27b13f5c224a941cfa" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1a36077bc042c70d27b13f5c224a941cfa" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="structhf__i2c__multi__buffer__transaction__t_1a5dfa56121dd6ff0ff4d51496f147146e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1a5dfa56121dd6ff0ff4d51496f147146e" kindref="member">hf_i2c_multi_buffer_transaction_t</ref>()<sp/>noexcept<sp/>:<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1a3ded975159c8af3f5517138faa9f0ae8" kindref="member">device_address</ref>(0),<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1add9884a93fe8a9def556d7e48441c03f" kindref="member">timeout_ms</ref>(1000),<sp/><ref refid="structhf__i2c__multi__buffer__transaction__t_1a36077bc042c70d27b13f5c224a941cfa" kindref="member">flags</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="301"><highlight class="normal">};</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="structhf__i2c__custom__command__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__i2c__custom__command__t" kindref="compound">hf_i2c_custom_command_t</ref><sp/>{</highlight></codeline>
<codeline lineno="308" refid="structhf__i2c__custom__command__t_1a4698f6963963e23ba7805ab1f4adb6c3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62" kindref="member">hf_i2c_command_type_t</ref><sp/><ref refid="structhf__i2c__custom__command__t_1a4698f6963963e23ba7805ab1f4adb6c3" kindref="member">command_type</ref>;<sp/></highlight></codeline>
<codeline lineno="309" refid="structhf__i2c__custom__command__t_1a6de318c10918bef3986dd18ec0cd7cdb" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="structhf__i2c__custom__command__t_1a6de318c10918bef3986dd18ec0cd7cdb" kindref="member">device_addr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="structhf__i2c__custom__command__t_1a86b814f00746901f060cd9af475ae77f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/><ref refid="structhf__i2c__custom__command__t_1a86b814f00746901f060cd9af475ae77f" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311" refid="structhf__i2c__custom__command__t_1a67428d9b9c1eb4c41cc8d6a115983734" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__custom__command__t_1a67428d9b9c1eb4c41cc8d6a115983734" kindref="member">delay_us</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312" refid="structhf__i2c__custom__command__t_1a0b9cd5102b234d69e51d4162b1314ee1" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__custom__command__t_1a0b9cd5102b234d69e51d4162b1314ee1" kindref="member">timeout_ms</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313" refid="structhf__i2c__custom__command__t_1ae4f72d3a0a59bc3032477f339dbefc4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__custom__command__t_1ae4f72d3a0a59bc3032477f339dbefc4a" kindref="member">expected_read_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="structhf__i2c__custom__command__t_1a4135df4a3ac47350a09d0a0b82961c4e" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="structhf__i2c__custom__command__t_1a4135df4a3ac47350a09d0a0b82961c4e" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="structhf__i2c__custom__command__t_1ae52c2e7b63bbf028380304ae6e72d429" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__custom__command__t_1ae52c2e7b63bbf028380304ae6e72d429" kindref="member">hf_i2c_custom_command_t</ref>(<ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62" kindref="member">hf_i2c_command_type_t</ref><sp/>type,<sp/>uint16_t<sp/>addr<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__custom__command__t_1a4698f6963963e23ba7805ab1f4adb6c3" kindref="member">command_type</ref>(type),<sp/><ref refid="structhf__i2c__custom__command__t_1a6de318c10918bef3986dd18ec0cd7cdb" kindref="member">device_addr</ref>(addr),<sp/><ref refid="structhf__i2c__custom__command__t_1a67428d9b9c1eb4c41cc8d6a115983734" kindref="member">delay_us</ref>(0),<sp/><ref refid="structhf__i2c__custom__command__t_1a0b9cd5102b234d69e51d4162b1314ee1" kindref="member">timeout_ms</ref>(1000),<sp/><ref refid="structhf__i2c__custom__command__t_1ae4f72d3a0a59bc3032477f339dbefc4a" kindref="member">expected_read_size</ref>(0),</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__custom__command__t_1a4135df4a3ac47350a09d0a0b82961c4e" kindref="member">flags</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="structhf__i2c__custom__command__t_1a93bab6bd6bd0615fad48568cda7e6bdc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structhf__i2c__custom__command__t_1a93bab6bd6bd0615fad48568cda7e6bdc" kindref="member">hf_i2c_custom_command_t</ref>(uint32_t<sp/>delay_microseconds)<sp/>noexcept</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__i2c__custom__command__t_1a4698f6963963e23ba7805ab1f4adb6c3" kindref="member">command_type</ref>(<ref refid="EspTypes__I2C_8h_1a138e2f714ed2680b69e0158d47279d62a8160de1af78eafc0af30de8e3d113907" kindref="member">hf_i2c_command_type_t::HF_I2C_CMD_DELAY</ref>),<sp/><ref refid="structhf__i2c__custom__command__t_1a6de318c10918bef3986dd18ec0cd7cdb" kindref="member">device_addr</ref>(0),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__i2c__custom__command__t_1a67428d9b9c1eb4c41cc8d6a115983734" kindref="member">delay_us</ref>(delay_microseconds),<sp/><ref refid="structhf__i2c__custom__command__t_1a0b9cd5102b234d69e51d4162b1314ee1" kindref="member">timeout_ms</ref>(0),<sp/><ref refid="structhf__i2c__custom__command__t_1ae4f72d3a0a59bc3032477f339dbefc4a" kindref="member">expected_read_size</ref>(0),<sp/><ref refid="structhf__i2c__custom__command__t_1a4135df4a3ac47350a09d0a0b82961c4e" kindref="member">flags</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>OF<sp/>ESPI2C<sp/>TYPES<sp/>-<sp/>MINIMAL<sp/>AND<sp/>ESSENTIAL<sp/>ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="inc/mcu/esp32/utils/EspTypes_I2C.h"/>
  </compounddef>
</doxygen>
