<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="DigitalOutputGuard_8cpp" kind="file" language="C++">
    <compoundname>DigitalOutputGuard.cpp</compoundname>
    <includes refid="DigitalOutputGuard_8h" local="yes">utils/DigitalOutputGuard.h</includes>
    <incdepgraph>
      <node id="3">
        <label>base/BaseGpio.h</label>
        <link refid="BaseGpio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>utils/DigitalOutputGuard.h</label>
        <link refid="DigitalOutputGuard_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/utils/DigitalOutputGuard.cpp</label>
        <link refid="DigitalOutputGuard_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>functional</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of the <ref refid="classDigitalOutputGuard" kindref="compound">DigitalOutputGuard</ref> class for unified DigitalGpio. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classDigitalOutputGuard" kindref="compound">DigitalOutputGuard</ref> class provides RAII management of DigitalGpio instances when used as outputs, ensuring proper state management and cleanup. This implementation guarantees safe automatic management of GPIO output states with guaranteed cleanup even in exception scenarios, ensuring proper resource management and pin state control.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="DigitalOutputGuard_8h" kindref="compound">utils/DigitalOutputGuard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONSTRUCTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="classDigitalOutputGuard_1af9c1cd53f50d499b69017b857813c9e6" kindref="member">DigitalOutputGuard::DigitalOutputGuard</ref>(<ref refid="classBaseGpio" kindref="compound">BaseGpio</ref>&amp;<sp/>gpio,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ensure_output_mode)<sp/>noexcept</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gpio_(&amp;gpio),<sp/>was_output_mode_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>is_valid_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_error_(<ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>is_valid_<sp/>=<sp/>InitializeGuard(ensure_output_mode);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="classDigitalOutputGuard_1af9c1cd53f50d499b69017b857813c9e6" kindref="member">DigitalOutputGuard::DigitalOutputGuard</ref>(<ref refid="classBaseGpio" kindref="compound">BaseGpio</ref>*<sp/>gpio,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ensure_output_mode)<sp/>noexcept</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gpio_(gpio),<sp/>was_output_mode_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>is_valid_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_error_(<ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpio_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_<sp/>=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da256954b890b4465ff3e01a68a1742812" kindref="member">hf_gpio_err_t::GPIO_ERR_NULL_POINTER</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>is_valid_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>is_valid_<sp/>=<sp/>InitializeGuard(ensure_output_mode);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DESTRUCTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="classDigitalOutputGuard_1a80f27ca652a17ee6faf46f50614b5925" kindref="member">DigitalOutputGuard::~DigitalOutputGuard</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="classDigitalOutputGuard_1a17b9cdad4008b79d15935976d29dd730" kindref="member">is_valid_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>GPIO<sp/>to<sp/>inactive<sp/>state<sp/>before<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>change<sp/>the<sp/>direction<sp/>back<sp/>-<sp/>leave<sp/>it<sp/>as<sp/>configured</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/>result<sp/>=<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1a3178fb8f082369d79c699453bbb707ee" kindref="member">SetInactive</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>destructor,<sp/>we<sp/>can&apos;t<sp/>throw<sp/>exceptions<sp/>or<sp/>report<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>attempt<sp/>the<sp/>operation<sp/>and<sp/>continue<sp/>with<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)result;<sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>unused<sp/>variable<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PUBLIC<sp/>METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classDigitalOutputGuard_1a1ec6a7a545175077da4bb7efa2c90f34" kindref="member">DigitalOutputGuard::SetActive</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDigitalOutputGuard_1a17b9cdad4008b79d15935976d29dd730" kindref="member">is_valid_</ref><sp/>||<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref><sp/>?<sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>GPIO<sp/>is<sp/>in<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1ae6daa5410a578598b694320cdc1997e0" kindref="member">IsOutput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/>result<sp/>=<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1a54987f95debcc8faef0a7ecd38447031" kindref="member">SetDirection</ref>(<ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>=<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1aa2a7854a7829455131113f059f498af0" kindref="member">SetActive</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/><ref refid="classDigitalOutputGuard_1a67bacfef3a6249f4bf0cccbd908bbd8e" kindref="member">DigitalOutputGuard::SetInactive</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDigitalOutputGuard_1a17b9cdad4008b79d15935976d29dd730" kindref="member">is_valid_</ref><sp/>||<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref><sp/>?<sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>GPIO<sp/>is<sp/>in<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1ae6daa5410a578598b694320cdc1997e0" kindref="member">IsOutput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/>result<sp/>=<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1a54987f95debcc8faef0a7ecd38447031" kindref="member">SetDirection</ref>(<ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref><sp/>=<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1a3178fb8f082369d79c699453bbb707ee" kindref="member">SetInactive</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1a2028b30c270bc8dfd8f55fb442528c74" kindref="member">last_error_</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="group__gpio_1ga49490004a4935c1f8f727fcbfba7f887" kindref="member">hf_gpio_state_t</ref><sp/><ref refid="classDigitalOutputGuard_1a4602903caa7df15bd0c14ff1b709595e" kindref="member">DigitalOutputGuard::GetCurrentState</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classDigitalOutputGuard_1a17b9cdad4008b79d15935976d29dd730" kindref="member">is_valid_</ref><sp/>||<sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__gpio_1gga49490004a4935c1f8f727fcbfba7f887a4646f94b6d7499976b7c997e826b95dc" kindref="member">hf_gpio_state_t::HF_GPIO_STATE_INACTIVE</ref>;<sp/></highlight><highlight class="comment">//<sp/>Safe<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1ade3da3f4413de4ea58f2fe82125fc56b" kindref="member">gpio_</ref>-&gt;<ref refid="classBaseGpio_1a0a9b9db4afeedbd326fad93037717337" kindref="member">GetCurrentState</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>HELPER<sp/>METHODS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classDigitalOutputGuard_1ae7949ca40e1d7dcc530dfb9559bd89b2" kindref="member">DigitalOutputGuard::InitializeGuard</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ensure_output_mode)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>GPIO<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gpio_-&gt;EnsureInitialized())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_<sp/>=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305dab04683ad857b2517e5793490e3568bce" kindref="member">hf_gpio_err_t::GPIO_ERR_NOT_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>if<sp/>the<sp/>GPIO<sp/>was<sp/>already<sp/>in<sp/>output<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>was_output_mode_<sp/>=<sp/>gpio_-&gt;IsOutput();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>output<sp/>mode<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ensure_output_mode<sp/>&amp;&amp;<sp/>!was_output_mode_)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/>result<sp/>=<sp/>gpio_-&gt;SetDirection(<ref refid="group__gpio_1gga6b3450e1c9d6cba3355cc3567bb0cce3ae8b58d24a05839b6d1c0305c945748b0" kindref="member">hf_gpio_direction_t::HF_GPIO_DIRECTION_OUTPUT</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_error_<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>in<sp/>output<sp/>mode<sp/>and<sp/>we&apos;re<sp/>not<sp/>ensuring<sp/>it,<sp/>that&apos;s<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gpio_-&gt;IsOutput())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_<sp/>=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305daf325d6fbe617f4a9a26c320d3d3f26b0" kindref="member">hf_gpio_err_t::GPIO_ERR_DIRECTION_MISMATCH</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>GPIO<sp/>to<sp/>active<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="group__gpio_1ga2632aac2351807c35e790ec20bda305d" kindref="member">hf_gpio_err_t</ref><sp/>result<sp/>=<sp/>gpio_-&gt;SetActive();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>last_error_<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>last_error_<sp/>=<sp/><ref refid="group__gpio_1gga2632aac2351807c35e790ec20bda305da08c6dcbce56949318695e40344555937" kindref="member">hf_gpio_err_t::GPIO_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/utils/DigitalOutputGuard.cpp"/>
  </compounddef>
</doxygen>
