<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="BaseUart_8h" kind="file" language="C++">
    <compoundname>BaseUart.h</compoundname>
    <includes refid="HardwareTypes_8h" local="yes">HardwareTypes.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstring</includes>
    <includes local="no">functional</includes>
    <includes local="no">string_view</includes>
    <includedby refid="main_8cpp" local="yes">examples/esp32/main/main.cpp</includedby>
    <includedby refid="EspTypes__UART_8h" local="yes">inc/mcu/esp32/utils/EspTypes_UART.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>inc/base/BaseUart.h</label>
        <link refid="BaseUart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>HardwareTypes.h</label>
        <link refid="HardwareTypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>examples/common/DummyDevice.hpp</label>
        <link refid="DummyDevice_8hpp"/>
      </node>
      <node id="2">
        <label>examples/esp32/main/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1">
        <label>inc/base/BaseUart.h</label>
        <link refid="BaseUart_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>inc/mcu/esp32/EspI2c.h</label>
        <link refid="EspI2c_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inc/mcu/esp32/EspPeriodicTimer.h</label>
        <link refid="EspPeriodicTimer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>inc/mcu/esp32/EspPio.h</label>
        <link refid="EspPio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>inc/mcu/esp32/EspSpi.h</label>
        <link refid="EspSpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inc/mcu/esp32/utils/EspTypes.h</label>
        <link refid="EspTypes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inc/mcu/esp32/utils/EspTypes_UART.h</label>
        <link refid="EspTypes__UART_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/mcu/esp32/EspI2c.cpp</label>
        <link refid="EspI2c_8cpp"/>
      </node>
      <node id="9">
        <label>src/mcu/esp32/EspPeriodicTimer.cpp</label>
        <link refid="EspPeriodicTimer_8cpp"/>
      </node>
      <node id="11">
        <label>src/mcu/esp32/EspPio.cpp</label>
        <link refid="EspPio_8cpp"/>
      </node>
      <node id="13">
        <label>src/mcu/esp32/EspSpi.cpp</label>
        <link refid="EspSpi_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structhf__uart__statistics__t" prot="public">hf_uart_statistics_t</innerclass>
    <innerclass refid="structhf__uart__diagnostics__t" prot="public">hf_uart_diagnostics_t</innerclass>
    <innerclass refid="classBaseUart" prot="public">BaseUart</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="BaseUart_8h_1a8b05a6d56824281551272e94ab130dc7" prot="public" static="no">
        <name>HF_UART_ERR_LIST</name>
        <param><defname>X</defname></param>
        <briefdescription>
<para>HardFOC UART error codes. </para>
        </briefdescription>
        <detaileddescription>
<para>Comprehensive error enumeration for all UART operations in the system. This enumeration is used across all UART-related classes to provide consistent error reporting and handling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="36" column="9" bodyfile="inc/base/BaseUart.h" bodystart="36" bodyend="75"/>
      </memberdef>
      <memberdef kind="define" id="BaseUart_8h_1a94b225babb1626cee0621f8312eb32d1" prot="public" static="no">
        <name>X</name>
        <param><defname>NAME</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>DESC</defname></param>
        <initializer>NAME = VALUE,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="78" column="9" bodyfile="inc/base/BaseUart.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="BaseUart_8h_1a94b225babb1626cee0621f8312eb32d1" prot="public" static="no">
        <name>X</name>
        <param><defname>NAME</defname></param>
        <param><defname>VALUE</defname></param>
        <param><defname>DESC</defname></param>
        <initializer>  case hf_uart_err_t::NAME:  \
    return DESC;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="90" column="9" bodyfile="inc/base/BaseUart.h" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" prot="public" static="no" strong="yes">
        <type><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref></type>
        <name>hf_uart_err_t</name>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4edf38c36b44ec6289313be3dbff3bd1" prot="public">
          <name>X</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ab1d931babc3d80897766d05cd169cbe4" prot="public">
          <name>UART_SUCCESS</name>
          <initializer>=  0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ab4b0c297f2468304f6bf90d75ecbd003" prot="public">
          <name>UART_ERR_FAILURE</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a65bbecc33f7e8104164f8f84b29aee4c" prot="public">
          <name>UART_ERR_NOT_INITIALIZED</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a7b13ec862fc3503dcf850095d31f8999" prot="public">
          <name>UART_ERR_ALREADY_INITIALIZED</name>
          <initializer>=  3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a10144f1da0dcb0aa99a47b176766ec60" prot="public">
          <name>UART_ERR_INVALID_PARAMETER</name>
          <initializer>=  4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a43202c1a494f45caa5f3070b22de7de4" prot="public">
          <name>UART_ERR_NULL_POINTER</name>
          <initializer>=  5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a936168a08a224dab565ab963c2dcaa51" prot="public">
          <name>UART_ERR_OUT_OF_MEMORY</name>
          <initializer>=  6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4ffff846d98181817be2a7a249bb9def" prot="public">
          <name>UART_ERR_TIMEOUT</name>
          <initializer>=  7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a664a845f5c24eb81b908ca4b1b345400" prot="public">
          <name>UART_ERR_BUFFER_FULL</name>
          <initializer>=  8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a7979bb5b6111a054df4efa9474b6197e" prot="public">
          <name>UART_ERR_BUFFER_EMPTY</name>
          <initializer>=  9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a3c803ed6b04ab80d2ea1a293b3cfb6ff" prot="public">
          <name>UART_ERR_TRANSMISSION_FAILED</name>
          <initializer>=  10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a2f10549c31b722a6e42920f22b81df64" prot="public">
          <name>UART_ERR_RECEPTION_FAILED</name>
          <initializer>=  11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a9e67a27d487ccfeb7436be61a52625c6" prot="public">
          <name>UART_ERR_FRAME_ERROR</name>
          <initializer>=  12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a89e89a79ca400ea4fbf559cedc6531d9" prot="public">
          <name>UART_ERR_PARITY_ERROR</name>
          <initializer>=  13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a3854f4bef41e35ed4b5ae96f631463f5" prot="public">
          <name>UART_ERR_OVERRUN_ERROR</name>
          <initializer>=  14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ad4b26706b818f65d2556e86356a0c00b" prot="public">
          <name>UART_ERR_NOISE_ERROR</name>
          <initializer>=  15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a1a7b6bea5892510a2f67d38e46d568c5" prot="public">
          <name>UART_ERR_BREAK_DETECTED</name>
          <initializer>=  16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6af167a766875557e889c59366a3770254" prot="public">
          <name>UART_ERR_HARDWARE_FAULT</name>
          <initializer>=  17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a153a00d01a28931835b9eb1027556416" prot="public">
          <name>UART_ERR_COMMUNICATION_FAILURE</name>
          <initializer>=  18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6adb42e2e7e862fbc65f0d098b08db5fda" prot="public">
          <name>UART_ERR_DEVICE_NOT_RESPONDING</name>
          <initializer>=  19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ac847ffa3317aa6a42a0a01f547b3ac87" prot="public">
          <name>UART_ERR_VOLTAGE_OUT_OF_RANGE</name>
          <initializer>=  20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a5ca7b0b091fdbe355669066fd9ecd822" prot="public">
          <name>UART_ERR_INVALID_CONFIGURATION</name>
          <initializer>=  21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4e79f5672d0edf471cbd1f4b5c1e491e" prot="public">
          <name>UART_ERR_UNSUPPORTED_OPERATION</name>
          <initializer>=  22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ac06690d898d4a5becbd294c2fb5b9984" prot="public">
          <name>UART_ERR_INVALID_BAUD_RATE</name>
          <initializer>=  23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a292526d1169b150745fed3f7288857e2" prot="public">
          <name>UART_ERR_INVALID_DATA_BITS</name>
          <initializer>=  24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ae95f04be872af0722253aa1768b567fb" prot="public">
          <name>UART_ERR_INVALID_PARITY</name>
          <initializer>=  25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a9e36870f7e66b5ffc96821efc91aa644" prot="public">
          <name>UART_ERR_INVALID_STOP_BITS</name>
          <initializer>=  26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a1b05d31d95962aa848c2bfb4374d6234" prot="public">
          <name>UART_ERR_PIN_CONFIGURATION_ERROR</name>
          <initializer>=  27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a247af09cea2c022f34bec947e7663ba0" prot="public">
          <name>UART_ERR_FLOW_CONTROL_ERROR</name>
          <initializer>=  28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a3821d3ae10428d5aefbc6abe8bafff48" prot="public">
          <name>UART_ERR_SYSTEM_ERROR</name>
          <initializer>=  29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a95c497372e18d237e6e4e1fd0b5ddba0" prot="public">
          <name>UART_ERR_PERMISSION_DENIED</name>
          <initializer>=  30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a588d2c4cbe68e0f5352e3bdcfaac3a92" prot="public">
          <name>UART_ERR_OPERATION_ABORTED</name>
          <initializer>=  31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="77" column="1" bodyfile="inc/base/BaseUart.h" bodystart="77" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="BaseUart_8h_1a2d6faa8cf31c826c1d154a00174fb630" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr std::string_view</type>
        <definition>constexpr std::string_view hf_uart_err_to_string</definition>
        <argsstring>(hf_uart_err_t err) noexcept</argsstring>
        <name>hf_uart_err_to_string</name>
        <param>
          <type><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref></type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>Convert hf_uart_err_t to human-readable string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>The error code to convert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String view of the error description </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/base/BaseUart.h" line="88" column="28" bodyfile="inc/base/BaseUart.h" bodystart="88" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Abstract base class for UART driver implementations in the HardFOC system. </para>
    </briefdescription>
    <detaileddescription>
<para>This header-only file defines the abstract base class for UART communication that provides a consistent API across different UART controller implementations. Concrete implementations for various microcontrollers inherit from this class to provide serial communication, flow control, and data transmission features.</para>
<para><simplesect kind="author"><para>Nebiyu Tadesse </para>
</simplesect>
<simplesect kind="date"><para>2025 </para>
</simplesect>
<simplesect kind="copyright"><para>HardFOC</para>
</simplesect>
<simplesect kind="note"><para>This is a header-only abstract base class following the same pattern as <ref refid="classBaseCan" kindref="compound">BaseCan</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Users should program against this interface, not specific implementations. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HardwareTypes_8h" kindref="compound">HardwareTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string_view&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>HardFOC<sp/>UART<sp/>Error<sp/>Codes<sp/>(Table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight></codeline>
<codeline lineno="36" refid="BaseUart_8h_1a8b05a6d56824281551272e94ab130dc7" refkind="member"><highlight class="preprocessor">#define<sp/>HF_UART_ERR_LIST(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Success<sp/>codes<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>X(UART_SUCCESS,<sp/>0,<sp/>&quot;Success&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>General<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_FAILURE,<sp/>1,<sp/>&quot;General<sp/>failure&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_NOT_INITIALIZED,<sp/>2,<sp/>&quot;Not<sp/>initialized&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_ALREADY_INITIALIZED,<sp/>3,<sp/>&quot;Already<sp/>initialized&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_PARAMETER,<sp/>4,<sp/>&quot;Invalid<sp/>parameter&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_NULL_POINTER,<sp/>5,<sp/>&quot;Null<sp/>pointer&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_OUT_OF_MEMORY,<sp/>6,<sp/>&quot;Out<sp/>of<sp/>memory&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Communication<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_TIMEOUT,<sp/>7,<sp/>&quot;Operation<sp/>timeout&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_BUFFER_FULL,<sp/>8,<sp/>&quot;Buffer<sp/>full&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_BUFFER_EMPTY,<sp/>9,<sp/>&quot;Buffer<sp/>empty&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_TRANSMISSION_FAILED,<sp/>10,<sp/>&quot;Transmission<sp/>failed&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_RECEPTION_FAILED,<sp/>11,<sp/>&quot;Reception<sp/>failed&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Frame<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_FRAME_ERROR,<sp/>12,<sp/>&quot;Frame<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_PARITY_ERROR,<sp/>13,<sp/>&quot;Parity<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_OVERRUN_ERROR,<sp/>14,<sp/>&quot;Overrun<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_NOISE_ERROR,<sp/>15,<sp/>&quot;Noise<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_BREAK_DETECTED,<sp/>16,<sp/>&quot;Break<sp/>condition<sp/>detected&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hardware<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_HARDWARE_FAULT,<sp/>17,<sp/>&quot;Hardware<sp/>fault&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_COMMUNICATION_FAILURE,<sp/>18,<sp/>&quot;Communication<sp/>failure&quot;)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_DEVICE_NOT_RESPONDING,<sp/>19,<sp/>&quot;Device<sp/>not<sp/>responding&quot;)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_VOLTAGE_OUT_OF_RANGE,<sp/>20,<sp/>&quot;Voltage<sp/>out<sp/>of<sp/>range&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configuration<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_CONFIGURATION,<sp/>21,<sp/>&quot;Invalid<sp/>configuration&quot;)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_UNSUPPORTED_OPERATION,<sp/>22,<sp/>&quot;Unsupported<sp/>operation&quot;)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_BAUD_RATE,<sp/>23,<sp/>&quot;Invalid<sp/>baud<sp/>rate&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_DATA_BITS,<sp/>24,<sp/>&quot;Invalid<sp/>data<sp/>bits&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_PARITY,<sp/>25,<sp/>&quot;Invalid<sp/>parity&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_INVALID_STOP_BITS,<sp/>26,<sp/>&quot;Invalid<sp/>stop<sp/>bits&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_PIN_CONFIGURATION_ERROR,<sp/>27,<sp/>&quot;Pin<sp/>configuration<sp/>error&quot;)<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_FLOW_CONTROL_ERROR,<sp/>28,<sp/>&quot;Flow<sp/>control<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>errors<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_SYSTEM_ERROR,<sp/>29,<sp/>&quot;System<sp/>error&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_PERMISSION_DENIED,<sp/>30,<sp/>&quot;Permission<sp/>denied&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/>X(UART_ERR_OPERATION_ABORTED,<sp/>31,<sp/>&quot;Operation<sp/>aborted&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/>:<sp/><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref><sp/>{</highlight></codeline>
<codeline lineno="78" refid="BaseUart_8h_1a94b225babb1626cee0621f8312eb32d1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(NAME,<sp/>VALUE,<sp/>DESC)<sp/>NAME<sp/>=<sp/>VALUE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="BaseUart_8h_1a8b05a6d56824281551272e94ab130dc7" kindref="member">HF_UART_ERR_LIST</ref>(<ref refid="BaseUart_8h_1a94b225babb1626cee0621f8312eb32d1" kindref="member">X</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="BaseUart_8h_1a2d6faa8cf31c826c1d154a00174fb630" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::string_view<sp/><ref refid="BaseUart_8h_1a2d6faa8cf31c826c1d154a00174fb630" kindref="member">hf_uart_err_to_string</ref>(<ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/>err)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(NAME,<sp/>VALUE,<sp/>DESC)<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/>case<sp/>hf_uart_err_t::NAME:<sp/><sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>DESC;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="BaseUart_8h_1a8b05a6d56824281551272e94ab130dc7" kindref="member">HF_UART_ERR_LIST</ref>(<ref refid="BaseUart_8h_1a94b225babb1626cee0621f8312eb32d1" kindref="member">X</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>UART<sp/>Configuration<sp/>Structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structhf__uart__statistics__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__uart__statistics__t" kindref="compound">hf_uart_statistics_t</ref><sp/>{</highlight></codeline>
<codeline lineno="108" refid="structhf__uart__statistics__t_1aab1d89b99e028cdd213a27b4b296e2e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1aab1d89b99e028cdd213a27b4b296e2e3" kindref="member">tx_byte_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="structhf__uart__statistics__t_1a43088b127b9a4919abcbb35d0cc9b8ad" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a43088b127b9a4919abcbb35d0cc9b8ad" kindref="member">rx_byte_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="structhf__uart__statistics__t_1a6321d5527cc622fd86a7aced8118484a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a6321d5527cc622fd86a7aced8118484a" kindref="member">tx_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="structhf__uart__statistics__t_1ab23a18ad52668ca8f3458c66158e83d3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1ab23a18ad52668ca8f3458c66158e83d3" kindref="member">rx_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="structhf__uart__statistics__t_1a878c20898b5b56e85c997147f283f71d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a878c20898b5b56e85c997147f283f71d" kindref="member">frame_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="structhf__uart__statistics__t_1ab7537f75d762bd9847af69997519c501" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1ab7537f75d762bd9847af69997519c501" kindref="member">parity_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="structhf__uart__statistics__t_1af9c3575d495cdfe73cc37e67012674ea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1af9c3575d495cdfe73cc37e67012674ea" kindref="member">overrun_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="structhf__uart__statistics__t_1ac802d16c39c39ce9a0249113ee6b6617" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1ac802d16c39c39ce9a0249113ee6b6617" kindref="member">noise_error_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116" refid="structhf__uart__statistics__t_1a1b8b8578140cf0e6e5b22649a09f9d24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a1b8b8578140cf0e6e5b22649a09f9d24" kindref="member">break_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117" refid="structhf__uart__statistics__t_1a761200538387ff51d156edabe337bf48" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a761200538387ff51d156edabe337bf48" kindref="member">timeout_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118" refid="structhf__uart__statistics__t_1abdfe6413a5772a560b99cdb597440077" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1abdfe6413a5772a560b99cdb597440077" kindref="member">pattern_detect_count</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119" refid="structhf__uart__statistics__t_1a875aa4730e9e1d667034cfc839fd9958" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a875aa4730e9e1d667034cfc839fd9958" kindref="member">wakeup_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="structhf__uart__statistics__t_1a34c7d189aa502da2a999df952031e898" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1ac4515282abcfccf45fc8855452098d0b" kindref="member">hf_u64_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a34c7d189aa502da2a999df952031e898" kindref="member">last_activity_timestamp</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="structhf__uart__statistics__t_1a5333fd0e33b8fc2c761ed441434f3c9e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1ac4515282abcfccf45fc8855452098d0b" kindref="member">hf_u64_t</ref><sp/><ref refid="structhf__uart__statistics__t_1a5333fd0e33b8fc2c761ed441434f3c9e" kindref="member">initialization_timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structhf__uart__statistics__t_1adedd7a54a1f5024ccb4b14c21b73cdf3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__uart__statistics__t_1adedd7a54a1f5024ccb4b14c21b73cdf3" kindref="member">hf_uart_statistics_t</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__uart__statistics__t_1aab1d89b99e028cdd213a27b4b296e2e3" kindref="member">tx_byte_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1a43088b127b9a4919abcbb35d0cc9b8ad" kindref="member">rx_byte_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1a6321d5527cc622fd86a7aced8118484a" kindref="member">tx_error_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1ab23a18ad52668ca8f3458c66158e83d3" kindref="member">rx_error_count</ref>(0),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__statistics__t_1a878c20898b5b56e85c997147f283f71d" kindref="member">frame_error_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1ab7537f75d762bd9847af69997519c501" kindref="member">parity_error_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1af9c3575d495cdfe73cc37e67012674ea" kindref="member">overrun_error_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1ac802d16c39c39ce9a0249113ee6b6617" kindref="member">noise_error_count</ref>(0),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__statistics__t_1a1b8b8578140cf0e6e5b22649a09f9d24" kindref="member">break_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1a761200538387ff51d156edabe337bf48" kindref="member">timeout_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1abdfe6413a5772a560b99cdb597440077" kindref="member">pattern_detect_count</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1a875aa4730e9e1d667034cfc839fd9958" kindref="member">wakeup_count</ref>(0),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__statistics__t_1a34c7d189aa502da2a999df952031e898" kindref="member">last_activity_timestamp</ref>(0),<sp/><ref refid="structhf__uart__statistics__t_1a5333fd0e33b8fc2c761ed441434f3c9e" kindref="member">initialization_timestamp</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structhf__uart__diagnostics__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhf__uart__diagnostics__t" kindref="compound">hf_uart_diagnostics_t</ref><sp/>{</highlight></codeline>
<codeline lineno="134" refid="structhf__uart__diagnostics__t_1a819ac1514e5cbeb21b1f3f806cd769a7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1a819ac1514e5cbeb21b1f3f806cd769a7" kindref="member">last_error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135" refid="structhf__uart__diagnostics__t_1aa47d02b2cb5988d2838fa90e927b97f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1aa47d02b2cb5988d2838fa90e927b97f9" kindref="member">consecutive_errors</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136" refid="structhf__uart__diagnostics__t_1a53d723ec372aad3e830d389890b1ca27" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1a53d723ec372aad3e830d389890b1ca27" kindref="member">error_reset_count</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="structhf__uart__diagnostics__t_1a268b95d19b2871fadc271f033e9ce068" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1ac4515282abcfccf45fc8855452098d0b" kindref="member">hf_u64_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1a268b95d19b2871fadc271f033e9ce068" kindref="member">last_error_timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="138" refid="structhf__uart__diagnostics__t_1a47ed89b1c6a36336692a0b514bfa1492" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1a47ed89b1c6a36336692a0b514bfa1492" kindref="member">is_initialized</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="structhf__uart__diagnostics__t_1afddc733ba48e921c8287590c249f91b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1afddc733ba48e921c8287590c249f91b6" kindref="member">is_transmitting</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="structhf__uart__diagnostics__t_1abbba424bf9907b52bcd5f322a066271d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1abbba424bf9907b52bcd5f322a066271d" kindref="member">is_receiving</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="structhf__uart__diagnostics__t_1a161d792932c793db01068abee6bcb403" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1a161d792932c793db01068abee6bcb403" kindref="member">flow_control_active</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142" refid="structhf__uart__diagnostics__t_1a9656a07908f6ea6af38b6fc61d93a0ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1a9656a07908f6ea6af38b6fc61d93a0ff" kindref="member">pattern_detection_active</ref>;<sp/></highlight></codeline>
<codeline lineno="143" refid="structhf__uart__diagnostics__t_1ae51153d1dd24c469bf3af1697e8392b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhf__uart__diagnostics__t_1ae51153d1dd24c469bf3af1697e8392b4" kindref="member">wakeup_enabled</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144" refid="structhf__uart__diagnostics__t_1a3a64a4db001099253aec32ecc7ef3123" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1a3a64a4db001099253aec32ecc7ef3123" kindref="member">tx_buffer_usage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="structhf__uart__diagnostics__t_1a0a9377bd1aa609f2fd438b5c630c2d46" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1a0a9377bd1aa609f2fd438b5c630c2d46" kindref="member">rx_buffer_usage</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="structhf__uart__diagnostics__t_1af4d7cc87067d1f978a152b6d700a6c94" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/><ref refid="structhf__uart__diagnostics__t_1af4d7cc87067d1f978a152b6d700a6c94" kindref="member">event_queue_usage</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structhf__uart__diagnostics__t_1a6759dbba5936e6aa11e9638302e3b29c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__uart__diagnostics__t_1a6759dbba5936e6aa11e9638302e3b29c" kindref="member">hf_uart_diagnostics_t</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhf__uart__diagnostics__t_1a819ac1514e5cbeb21b1f3f806cd769a7" kindref="member">last_error</ref>(<ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref>::<ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ab1d931babc3d80897766d05cd169cbe4" kindref="member">UART_SUCCESS</ref>),<sp/><ref refid="structhf__uart__diagnostics__t_1aa47d02b2cb5988d2838fa90e927b97f9" kindref="member">consecutive_errors</ref>(0),<sp/><ref refid="structhf__uart__diagnostics__t_1a53d723ec372aad3e830d389890b1ca27" kindref="member">error_reset_count</ref>(0),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__diagnostics__t_1a268b95d19b2871fadc271f033e9ce068" kindref="member">last_error_timestamp</ref>(0),<sp/><ref refid="structhf__uart__diagnostics__t_1a47ed89b1c6a36336692a0b514bfa1492" kindref="member">is_initialized</ref>(false),<sp/><ref refid="structhf__uart__diagnostics__t_1afddc733ba48e921c8287590c249f91b6" kindref="member">is_transmitting</ref>(false),<sp/><ref refid="structhf__uart__diagnostics__t_1abbba424bf9907b52bcd5f322a066271d" kindref="member">is_receiving</ref>(false),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__diagnostics__t_1a161d792932c793db01068abee6bcb403" kindref="member">flow_control_active</ref>(false),<sp/><ref refid="structhf__uart__diagnostics__t_1a9656a07908f6ea6af38b6fc61d93a0ff" kindref="member">pattern_detection_active</ref>(false),<sp/><ref refid="structhf__uart__diagnostics__t_1ae51153d1dd24c469bf3af1697e8392b4" kindref="member">wakeup_enabled</ref>(false),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhf__uart__diagnostics__t_1a3a64a4db001099253aec32ecc7ef3123" kindref="member">tx_buffer_usage</ref>(0),<sp/><ref refid="structhf__uart__diagnostics__t_1a0a9377bd1aa609f2fd438b5c630c2d46" kindref="member">rx_buffer_usage</ref>(0),<sp/><ref refid="structhf__uart__diagnostics__t_1af4d7cc87067d1f978a152b6d700a6c94" kindref="member">event_queue_usage</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Abstract<sp/>Base<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classBaseUart" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBaseUart" kindref="compound">BaseUart</ref><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192" refid="classBaseUart_1aeaf29070491a7ba9a8fdab4d57f88552" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1aeaf29070491a7ba9a8fdab4d57f88552" kindref="member">~BaseUart</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-copyable,<sp/>non-movable<sp/>(can<sp/>be<sp/>changed<sp/>in<sp/>derived<sp/>classes<sp/>if<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classBaseUart_1a5bd0243a3f6c1e242a5a867f6aebf928" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>(const<sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="196" refid="classBaseUart_1a21412c6c2f4479149d6c25337a0af7aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;<sp/>operator=(const<sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="197" refid="classBaseUart_1aefd61298d23c892de11fce7404c909e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>(<ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="198" refid="classBaseUart_1ab823b270624288541db2a44305249b75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;<sp/>operator=(<ref refid="classBaseUart" kindref="compound">BaseUart</ref>&amp;&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classBaseUart_1a3551794eb6e958cbdf8c15aec49c4433" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a3551794eb6e958cbdf8c15aec49c4433" kindref="member">EnsureInitialized</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref><sp/>=<sp/><ref refid="classBaseUart_1ac5f93b4f75c229d2e0ec04196f5cb844" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classBaseUart_1a0775104a12d8e7b418246ed53b660e55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a0775104a12d8e7b418246ed53b660e55" kindref="member">EnsureDeinitialized</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref><sp/>=<sp/>!<ref refid="classBaseUart_1a6778f2da517273aa1a51c0658ec0a2c0" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="classBaseUart_1aa01db7402b20038f979b9073281bb430" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1aa01db7402b20038f979b9073281bb430" kindref="member">IsInitialized</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classBaseUart_1ac3cbd2017d912e1ef8a1c64627bdcbf4" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="HardwareTypes_8h_1a5ae8212050d5f285c3c001078e3be3aa" kindref="member">hf_port_num_t</ref><sp/><ref refid="classBaseUart_1ac3cbd2017d912e1ef8a1c64627bdcbf4" kindref="member">GetPort</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1ab49dfeb03b7a9f8cbf81460ebb711c38" kindref="member">port_</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PURE<sp/>VIRTUAL<sp/>FUNCTIONS<sp/>-<sp/>MUST<sp/>BE<sp/>OVERRIDDEN<sp/><sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classBaseUart_1ac5f93b4f75c229d2e0ec04196f5cb844" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1ac5f93b4f75c229d2e0ec04196f5cb844" kindref="member">Initialize</ref>()<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classBaseUart_1a6778f2da517273aa1a51c0658ec0a2c0" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a6778f2da517273aa1a51c0658ec0a2c0" kindref="member">Deinitialize</ref>()<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classBaseUart_1a5de6a79ad512480a12f757ce73fa46a6" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a5de6a79ad512480a12f757ce73fa46a6" kindref="member">Write</ref>(const<sp/><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref>*<sp/>data,<sp/><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref><sp/>length,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>timeout_ms<sp/>=<sp/>0)<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classBaseUart_1a9ddc416f533c776cf879790c8cb10b57" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a9ddc416f533c776cf879790c8cb10b57" kindref="member">Read</ref>(<ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref>*<sp/>data,<sp/><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref><sp/>length,<sp/><ref refid="HardwareTypes_8h_1a0a9e8f52f8fc4d5b4c197dd3923c50fd" kindref="member">hf_u32_t</ref><sp/>timeout_ms<sp/>=<sp/>0)<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classBaseUart_1a9666c49827901f9a511c4fd824648eb0" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref><sp/><ref refid="classBaseUart_1a9666c49827901f9a511c4fd824648eb0" kindref="member">BytesAvailable</ref>()<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classBaseUart_1a97a3d02d570669c9c463b99916fdef2c" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a97a3d02d570669c9c463b99916fdef2c" kindref="member">FlushTx</ref>()<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classBaseUart_1a2361728845801eb4356bdaa560ba0315" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a2361728845801eb4356bdaa560ba0315" kindref="member">FlushRx</ref>()<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classBaseUart_1a9d071b6aa4fb1fe97b33cadf47b8ad7b" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a9d071b6aa4fb1fe97b33cadf47b8ad7b" kindref="member">Printf</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...)<sp/>noexcept<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CONVENIENCE<sp/>METHODS<sp/>WITH<sp/>DEFAULT<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classBaseUart_1a75cbb2ce81d78f722874184878433249" refkind="member"><highlight class="normal"><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a75cbb2ce81d78f722874184878433249" kindref="member">Open</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1ac5f93b4f75c229d2e0ec04196f5cb844" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classBaseUart_1aec851bc0079da79a3cbc617fafad7432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1aec851bc0079da79a3cbc617fafad7432" kindref="member">Close</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a6778f2da517273aa1a51c0658ec0a2c0" kindref="member">Deinitialize</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removed<sp/>duplicate<sp/>Write<sp/>method<sp/>to<sp/>avoid<sp/>overload<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removed<sp/>duplicate<sp/>Read<sp/>method<sp/>to<sp/>avoid<sp/>overload<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classBaseUart_1aacddae116924093dc2d45a894772a9a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1aacddae116924093dc2d45a894772a9a6" kindref="member">WriteString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a5de6a79ad512480a12f757ce73fa46a6" kindref="member">Write</ref>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(str),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="HardwareTypes_8h_1acf5c4ff165be8c4d15943c1d65daa1c0" kindref="member">hf_u16_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strlen(str)))<sp/>==</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ab1d931babc3d80897766d05cd169cbe4" kindref="member">hf_uart_err_t::UART_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classBaseUart_1a9c42866eb7d966a138755e5b71c725cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a9c42866eb7d966a138755e5b71c725cf" kindref="member">WriteByte</ref>(<ref refid="HardwareTypes_8h_1a3aa2692c73b4cca0adc7139bd18ff613" kindref="member">hf_u8_t</ref><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a5de6a79ad512480a12f757ce73fa46a6" kindref="member">Write</ref>(&amp;</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">,<sp/>1)<sp/>==<sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6ab1d931babc3d80897766d05cd169cbe4" kindref="member">hf_uart_err_t::UART_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removed<sp/>duplicate<sp/>FlushTx<sp/>and<sp/>FlushRx<sp/>methods<sp/>to<sp/>avoid<sp/>overload<sp/>conflicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STATISTICS<sp/>AND<sp/>DIAGNOSTICS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//==============================================//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classBaseUart_1aa85590c6a17563a3ddcf2d6084210725" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1aa85590c6a17563a3ddcf2d6084210725" kindref="member">ResetStatistics</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseUart_1a27d6cf918e8a0ff9bdc345d3871d0876" kindref="member">statistics_</ref><sp/>=<sp/><ref refid="structhf__uart__statistics__t" kindref="compound">hf_uart_statistics_t</ref>{};<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>statistics<sp/>to<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4e79f5672d0edf471cbd1f4b5c1e491e" kindref="member">hf_uart_err_t::UART_ERR_UNSUPPORTED_OPERATION</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classBaseUart_1abed0a5b5b2f852ea41b3133fb260aaf7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1abed0a5b5b2f852ea41b3133fb260aaf7" kindref="member">ResetDiagnostics</ref>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseUart_1af0bff6e1b9e465bfecec2139ff113e11" kindref="member">diagnostics_</ref><sp/>=<sp/><ref refid="structhf__uart__diagnostics__t" kindref="compound">hf_uart_diagnostics_t</ref>{};<sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>diagnostics<sp/>to<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4e79f5672d0edf471cbd1f4b5c1e491e" kindref="member">hf_uart_err_t::UART_ERR_UNSUPPORTED_OPERATION</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classBaseUart_1a6698396f98eb9f438f91999142b5cbdf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a6698396f98eb9f438f91999142b5cbdf" kindref="member">GetStatistics</ref>(<ref refid="structhf__uart__statistics__t" kindref="compound">hf_uart_statistics_t</ref>&amp;<sp/>statistics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>statistics<sp/>=<sp/><ref refid="classBaseUart_1a27d6cf918e8a0ff9bdc345d3871d0876" kindref="member">statistics_</ref>;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>statistics<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4e79f5672d0edf471cbd1f4b5c1e491e" kindref="member">hf_uart_err_t::UART_ERR_UNSUPPORTED_OPERATION</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classBaseUart_1a68ce0319cba173ccdf90812fd7ad8ee5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6" kindref="member">hf_uart_err_t</ref><sp/><ref refid="classBaseUart_1a68ce0319cba173ccdf90812fd7ad8ee5" kindref="member">GetDiagnostics</ref>(<ref refid="structhf__uart__diagnostics__t" kindref="compound">hf_uart_diagnostics_t</ref>&amp;<sp/>diagnostics)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>diagnostics<sp/>=<sp/><ref refid="classBaseUart_1af0bff6e1b9e465bfecec2139ff113e11" kindref="member">diagnostics_</ref>;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>diagnostics<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="BaseUart_8h_1a2d1602c74bec15db56875b8f2925c5b6a4e79f5672d0edf471cbd1f4b5c1e491e" kindref="member">hf_uart_err_t::UART_ERR_UNSUPPORTED_OPERATION</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396" refid="classBaseUart_1af78039653dc8c846d3f90dc48f50b33d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBaseUart_1af78039653dc8c846d3f90dc48f50b33d" kindref="member">BaseUart</ref>(<ref refid="HardwareTypes_8h_1a5ae8212050d5f285c3c001078e3be3aa" kindref="member">hf_port_num_t</ref><sp/>port)<sp/>noexcept</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classBaseUart_1ab49dfeb03b7a9f8cbf81460ebb711c38" kindref="member">port_</ref>(port),<sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="classBaseUart_1a27d6cf918e8a0ff9bdc345d3871d0876" kindref="member">statistics_</ref>{},<sp/><ref refid="classBaseUart_1af0bff6e1b9e465bfecec2139ff113e11" kindref="member">diagnostics_</ref>{}<sp/>{}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classBaseUart_1ab49dfeb03b7a9f8cbf81460ebb711c38" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="HardwareTypes_8h_1a5ae8212050d5f285c3c001078e3be3aa" kindref="member">hf_port_num_t</ref><sp/><ref refid="classBaseUart_1ab49dfeb03b7a9f8cbf81460ebb711c38" kindref="member">port_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400" refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classBaseUart_1a79a571b629da5ad6a3675619eb25903f" kindref="member">initialized_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401" refid="classBaseUart_1a27d6cf918e8a0ff9bdc345d3871d0876" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__uart__statistics__t" kindref="compound">hf_uart_statistics_t</ref><sp/><ref refid="classBaseUart_1a27d6cf918e8a0ff9bdc345d3871d0876" kindref="member">statistics_</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402" refid="classBaseUart_1af0bff6e1b9e465bfecec2139ff113e11" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhf__uart__diagnostics__t" kindref="compound">hf_uart_diagnostics_t</ref><sp/><ref refid="classBaseUart_1af0bff6e1b9e465bfecec2139ff113e11" kindref="member">diagnostics_</ref>;<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="inc/base/BaseUart.h"/>
  </compounddef>
</doxygen>
